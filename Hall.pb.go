// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0-devel
// 	protoc        v3.19.1
// source: Hall.proto

package netproto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type HallMsgClassID int32

const (
	HallMsgClassID_GuestLoginID                HallMsgClassID = 1
	HallMsgClassID_LoginRetID                  HallMsgClassID = 2
	HallMsgClassID_UserLoginID                 HallMsgClassID = 3
	HallMsgClassID_UserLogoutID                HallMsgClassID = 4
	HallMsgClassID_RequestHallVerID            HallMsgClassID = 5
	HallMsgClassID_HallVerInfoID               HallMsgClassID = 6
	HallMsgClassID_RequestServerListID         HallMsgClassID = 7
	HallMsgClassID_ServerListDataID            HallMsgClassID = 8
	HallMsgClassID_RequestGameServerAddrID     HallMsgClassID = 9
	HallMsgClassID_GameServerAddrInfoID        HallMsgClassID = 10
	HallMsgClassID_RequestUserLoginList        HallMsgClassID = 11
	HallMsgClassID_CleanUserGameListID         HallMsgClassID = 12
	HallMsgClassID_GetUserGameListID           HallMsgClassID = 13
	HallMsgClassID_BindZhifubaoID              HallMsgClassID = 1001
	HallMsgClassID_BindZhifubaoRetID           HallMsgClassID = 1002
	HallMsgClassID_ModifyPasswordID            HallMsgClassID = 1003
	HallMsgClassID_ModifyPasswordRetID         HallMsgClassID = 1004
	HallMsgClassID_SendPhoneVCodeID            HallMsgClassID = 1005
	HallMsgClassID_SendPhoneVCodeRetID         HallMsgClassID = 1006
	HallMsgClassID_ModifyFaceID                HallMsgClassID = 1007
	HallMsgClassID_ModifyFaceRetID             HallMsgClassID = 1008
	HallMsgClassID_DepositMoneyID              HallMsgClassID = 1009
	HallMsgClassID_DepositMoneyRetID           HallMsgClassID = 1010
	HallMsgClassID_BindGuestAccountID          HallMsgClassID = 1011
	HallMsgClassID_BindGuestAccountRetID       HallMsgClassID = 1012
	HallMsgClassID_RequestUserHallInfoID       HallMsgClassID = 1013
	HallMsgClassID_UserHallInfoID              HallMsgClassID = 1014
	HallMsgClassID_FindSetPwdByPhoneID         HallMsgClassID = 1015
	HallMsgClassID_FindSetPwdByPhoneRetID      HallMsgClassID = 1016
	HallMsgClassID_ModifyBankPasswordID        HallMsgClassID = 1017
	HallMsgClassID_ModifyBankPasswordRetID     HallMsgClassID = 1018
	HallMsgClassID_FindSetBankPwdByPhoneID     HallMsgClassID = 1019
	HallMsgClassID_FindSetBankPwdByPhoneRetID  HallMsgClassID = 1020
	HallMsgClassID_GetMailListID               HallMsgClassID = 1021
	HallMsgClassID_GetMailListRetID            HallMsgClassID = 1022
	HallMsgClassID_GetMailDetailID             HallMsgClassID = 1023
	HallMsgClassID_GetMailDetailRetID          HallMsgClassID = 1024
	HallMsgClassID_ContactServiceID            HallMsgClassID = 1025
	HallMsgClassID_ContactServiceRetID         HallMsgClassID = 1026
	HallMsgClassID_GetAgentListID              HallMsgClassID = 1027
	HallMsgClassID_GetAgentListRetID           HallMsgClassID = 1028
	HallMsgClassID_ApplyAgentID                HallMsgClassID = 1029
	HallMsgClassID_ApplyAgentRetID             HallMsgClassID = 1030
	HallMsgClassID_ConvertMoneyID              HallMsgClassID = 1031
	HallMsgClassID_ConvertMoneyRetID           HallMsgClassID = 1032
	HallMsgClassID_ReportAgentID               HallMsgClassID = 1033
	HallMsgClassID_ReportAgentRetID            HallMsgClassID = 1034
	HallMsgClassID_CreatePayOrderID            HallMsgClassID = 1035
	HallMsgClassID_CreatePayOrderRetID         HallMsgClassID = 1036
	HallMsgClassID_GetFAQID                    HallMsgClassID = 1037
	HallMsgClassID_GetFAQRetID                 HallMsgClassID = 1038
	HallMsgClassID_BindBankCardID              HallMsgClassID = 1039
	HallMsgClassID_BindBankCardRetID           HallMsgClassID = 1040
	HallMsgClassID_UnbindConvertTypeID         HallMsgClassID = 1041
	HallMsgClassID_UnbindConvertTypeRetID      HallMsgClassID = 1042
	HallMsgClassID_CallThirdAPIID              HallMsgClassID = 1043
	HallMsgClassID_CallThirdAPIRetID           HallMsgClassID = 1044
	HallMsgClassID_VideoGameLoginID            HallMsgClassID = 1045
	HallMsgClassID_VideoGameLoginRetID         HallMsgClassID = 1046
	HallMsgClassID_VideoGameLogoutID           HallMsgClassID = 1047
	HallMsgClassID_VideoGameLogoutRetID        HallMsgClassID = 1048
	HallMsgClassID_ActivityEnroll              HallMsgClassID = 1049 //報名參與首充活動
	HallMsgClassID_ActivityEnrollRet           HallMsgClassID = 1050
	HallMsgClassID_ActivityGetReward           HallMsgClassID = 1051 //領取首充活動獎勵
	HallMsgClassID_ActivityGetRewardRet        HallMsgClassID = 1052
	HallMsgClassID_ActivityGetInfo             HallMsgClassID = 1053 //獲取首充活動信息
	HallMsgClassID_ActivityGetInfoRet          HallMsgClassID = 1054 //FirstChargeActivityInfoRet
	HallMsgClassID_ActivitGetRechargeInfo      HallMsgClassID = 1055 //獲取充值活動信息
	HallMsgClassID_ActivitGetRechargeInfoRet   HallMsgClassID = 1056
	HallMsgClassID_ActivitGetRechargeReward    HallMsgClassID = 1057 //領取充值活動獎勵
	HallMsgClassID_ActivitGetRechargeRewardRet HallMsgClassID = 1058
	HallMsgClassID_ActivitGetAdvanceInfo       HallMsgClassID = 1059 //獲取激情闖關信息
	HallMsgClassID_ActivitGetAdvanceInfoRet    HallMsgClassID = 1060
	HallMsgClassID_ActivitGetAdvanceReward     HallMsgClassID = 1061 //領取激情闖關獎勵
	HallMsgClassID_ActivitGetAdvanceRewardRet  HallMsgClassID = 1062
	//cp彩票競彩請求
	HallMsgClassID_CPThirdApiReq HallMsgClassID = 1063 //CP彩票競彩請求
	HallMsgClassID_CPThirdApiRes HallMsgClassID = 1064
	//簽到活動
	HallMsgClassID_DailySignActionLoadReq      HallMsgClassID = 1065 //打開每日簽到活動界面
	HallMsgClassID_DailySignActionLoadRes      HallMsgClassID = 1066 //打開每日簽到活動信息返回
	HallMsgClassID_DailySignReceiveRewardReqID HallMsgClassID = 1067 //領取每日簽到獎勵
	HallMsgClassID_DailySignReceiveRewardResID HallMsgClassID = 1068 //領取簽到獎勵返回
	HallMsgClassID_DailySignLotteryReqID       HallMsgClassID = 1069 //簽到七日達成抽獎
	HallMsgClassID_DailySignLotteryResID       HallMsgClassID = 1070 //簽到抽獎返回
	HallMsgClassID_ReliefConfigReqID           HallMsgClassID = 1071 // 救濟金配置請求
	HallMsgClassID_ReliefConfigRetID           HallMsgClassID = 1072 // 救濟金配置結果
	HallMsgClassID_ReliefCollectReqID          HallMsgClassID = 1073 // 救濟金領取請求
	HallMsgClassID_ReliefCollectRetID          HallMsgClassID = 1074 // 救濟金領取結果
	HallMsgClassID_UpdLanguageID               HallMsgClassID = 1075 //修改語言
	HallMsgClassID_UpdLanguageIDRet            HallMsgClassID = 1076 //修改語言返回
	//============================================================
	//DZPKHALL
	HallMsgClassID_DZPKHALL_BindAccount       HallMsgClassID = 1100 // 德撲娛樂城-第三方綁定登入
	HallMsgClassID_DZPKHALL_BindAccountRet    HallMsgClassID = 1101 // 德撲娛樂城-第三方綁定登入返回
	HallMsgClassID_DZPKHALL_ChangeNickName    HallMsgClassID = 1102 // 德撲娛樂城-修改暱稱
	HallMsgClassID_DZPKHALL_ChangeNickNameRet HallMsgClassID = 1103 // 德撲娛樂城-修改暱稱返回
	HallMsgClassID_DZPKHALL_ChangeFace        HallMsgClassID = 1104 // 德撲娛樂城-修改頭像
	HallMsgClassID_DZPKHALL_ChangeFaceRet     HallMsgClassID = 1105 // 德撲娛樂城-修改頭像返回
	//DZPK Wallet
	HallMsgClassID_DZPKHALL_WalletAddress                  HallMsgClassID = 1110 // 德撲娛樂城-取得玩家加密錢包位址
	HallMsgClassID_DZPKHALL_WalletWithdraw                 HallMsgClassID = 1111 // 德撲娛樂城-提領
	HallMsgClassID_DZPKHALL_WalletWithdrawRet              HallMsgClassID = 1112 // 德撲娛樂城-提領返回
	HallMsgClassID_DZPKHALL_LuckyWheelUserData             HallMsgClassID = 1113 // 德撲娛樂城-取得幸運轉輪玩家資料
	HallMsgClassID_DZPKHALL_LuckyWheelUserDataRet          HallMsgClassID = 1114 // 德撲娛樂城-取得幸運轉輪玩家資料返回
	HallMsgClassID_DZPKHALL_LuckyWheelSpin                 HallMsgClassID = 1115 // 德撲娛樂城-幸運轉輪搖獎
	HallMsgClassID_DZPKHALL_LuckyWheelSpinRet              HallMsgClassID = 1116 // 德撲娛樂城-幸運轉輪搖獎返回
	HallMsgClassID_DZPKHALL_LuckyWheelUserRewardRecords    HallMsgClassID = 1117 // 德撲娛樂城-幸運轉輪玩家中獎列表
	HallMsgClassID_DZPKHALL_LuckyWheelUserRewardRecordsRet HallMsgClassID = 1118 // 德撲娛樂城-幸運轉輪玩家中獎列表返回
	HallMsgClassID_DZPKHALL_DepositActivityData            HallMsgClassID = 1119 // 取得儲值活動資料請求
	HallMsgClassID_DZPKHALL_DepositActivityDataRet         HallMsgClassID = 1120 // 取得儲值活動資料回覆
	HallMsgClassID_DZPKHALL_LoginSms                       HallMsgClassID = 1121 // 玩家登入+簡訊驗證 請求
	HallMsgClassID_DZPKHALL_LoginSmsRet                    HallMsgClassID = 1122 // 玩家登入+簡訊驗證 回覆
	//積分賽
	HallMsgClassID_DZPKHALL_PointsRaceActivityConfig    HallMsgClassID = 1200 //取得積分賽設定請求
	HallMsgClassID_DZPKHALL_PointsRaceActivityConfigRet HallMsgClassID = 1201 //取得積分賽設定回覆
	HallMsgClassID_DZPKHALL_PointsRaceRank              HallMsgClassID = 1202 //積分賽排行請求
	HallMsgClassID_DZPKHALL_PointsRaceRankRet           HallMsgClassID = 1203 //積分賽排行回覆
)

// Enum value maps for HallMsgClassID.
var (
	HallMsgClassID_name = map[int32]string{
		1:    "GuestLoginID",
		2:    "LoginRetID",
		3:    "UserLoginID",
		4:    "UserLogoutID",
		5:    "RequestHallVerID",
		6:    "HallVerInfoID",
		7:    "RequestServerListID",
		8:    "ServerListDataID",
		9:    "RequestGameServerAddrID",
		10:   "GameServerAddrInfoID",
		11:   "RequestUserLoginList",
		12:   "CleanUserGameListID",
		13:   "GetUserGameListID",
		1001: "BindZhifubaoID",
		1002: "BindZhifubaoRetID",
		1003: "ModifyPasswordID",
		1004: "ModifyPasswordRetID",
		1005: "SendPhoneVCodeID",
		1006: "SendPhoneVCodeRetID",
		1007: "ModifyFaceID",
		1008: "ModifyFaceRetID",
		1009: "DepositMoneyID",
		1010: "DepositMoneyRetID",
		1011: "BindGuestAccountID",
		1012: "BindGuestAccountRetID",
		1013: "RequestUserHallInfoID",
		1014: "UserHallInfoID",
		1015: "FindSetPwdByPhoneID",
		1016: "FindSetPwdByPhoneRetID",
		1017: "ModifyBankPasswordID",
		1018: "ModifyBankPasswordRetID",
		1019: "FindSetBankPwdByPhoneID",
		1020: "FindSetBankPwdByPhoneRetID",
		1021: "GetMailListID",
		1022: "GetMailListRetID",
		1023: "GetMailDetailID",
		1024: "GetMailDetailRetID",
		1025: "ContactServiceID",
		1026: "ContactServiceRetID",
		1027: "GetAgentListID",
		1028: "GetAgentListRetID",
		1029: "ApplyAgentID",
		1030: "ApplyAgentRetID",
		1031: "ConvertMoneyID",
		1032: "ConvertMoneyRetID",
		1033: "ReportAgentID",
		1034: "ReportAgentRetID",
		1035: "CreatePayOrderID",
		1036: "CreatePayOrderRetID",
		1037: "GetFAQID",
		1038: "GetFAQRetID",
		1039: "BindBankCardID",
		1040: "BindBankCardRetID",
		1041: "UnbindConvertTypeID",
		1042: "UnbindConvertTypeRetID",
		1043: "CallThirdAPIID",
		1044: "CallThirdAPIRetID",
		1045: "VideoGameLoginID",
		1046: "VideoGameLoginRetID",
		1047: "VideoGameLogoutID",
		1048: "VideoGameLogoutRetID",
		1049: "ActivityEnroll",
		1050: "ActivityEnrollRet",
		1051: "ActivityGetReward",
		1052: "ActivityGetRewardRet",
		1053: "ActivityGetInfo",
		1054: "ActivityGetInfoRet",
		1055: "ActivitGetRechargeInfo",
		1056: "ActivitGetRechargeInfoRet",
		1057: "ActivitGetRechargeReward",
		1058: "ActivitGetRechargeRewardRet",
		1059: "ActivitGetAdvanceInfo",
		1060: "ActivitGetAdvanceInfoRet",
		1061: "ActivitGetAdvanceReward",
		1062: "ActivitGetAdvanceRewardRet",
		1063: "CPThirdApiReq",
		1064: "CPThirdApiRes",
		1065: "DailySignActionLoadReq",
		1066: "DailySignActionLoadRes",
		1067: "DailySignReceiveRewardReqID",
		1068: "DailySignReceiveRewardResID",
		1069: "DailySignLotteryReqID",
		1070: "DailySignLotteryResID",
		1071: "ReliefConfigReqID",
		1072: "ReliefConfigRetID",
		1073: "ReliefCollectReqID",
		1074: "ReliefCollectRetID",
		1075: "UpdLanguageID",
		1076: "UpdLanguageIDRet",
		1100: "DZPKHALL_BindAccount",
		1101: "DZPKHALL_BindAccountRet",
		1102: "DZPKHALL_ChangeNickName",
		1103: "DZPKHALL_ChangeNickNameRet",
		1104: "DZPKHALL_ChangeFace",
		1105: "DZPKHALL_ChangeFaceRet",
		1110: "DZPKHALL_WalletAddress",
		1111: "DZPKHALL_WalletWithdraw",
		1112: "DZPKHALL_WalletWithdrawRet",
		1113: "DZPKHALL_LuckyWheelUserData",
		1114: "DZPKHALL_LuckyWheelUserDataRet",
		1115: "DZPKHALL_LuckyWheelSpin",
		1116: "DZPKHALL_LuckyWheelSpinRet",
		1117: "DZPKHALL_LuckyWheelUserRewardRecords",
		1118: "DZPKHALL_LuckyWheelUserRewardRecordsRet",
		1119: "DZPKHALL_DepositActivityData",
		1120: "DZPKHALL_DepositActivityDataRet",
		1121: "DZPKHALL_LoginSms",
		1122: "DZPKHALL_LoginSmsRet",
		1200: "DZPKHALL_PointsRaceActivityConfig",
		1201: "DZPKHALL_PointsRaceActivityConfigRet",
		1202: "DZPKHALL_PointsRaceRank",
		1203: "DZPKHALL_PointsRaceRankRet",
	}
	HallMsgClassID_value = map[string]int32{
		"GuestLoginID":                            1,
		"LoginRetID":                              2,
		"UserLoginID":                             3,
		"UserLogoutID":                            4,
		"RequestHallVerID":                        5,
		"HallVerInfoID":                           6,
		"RequestServerListID":                     7,
		"ServerListDataID":                        8,
		"RequestGameServerAddrID":                 9,
		"GameServerAddrInfoID":                    10,
		"RequestUserLoginList":                    11,
		"CleanUserGameListID":                     12,
		"GetUserGameListID":                       13,
		"BindZhifubaoID":                          1001,
		"BindZhifubaoRetID":                       1002,
		"ModifyPasswordID":                        1003,
		"ModifyPasswordRetID":                     1004,
		"SendPhoneVCodeID":                        1005,
		"SendPhoneVCodeRetID":                     1006,
		"ModifyFaceID":                            1007,
		"ModifyFaceRetID":                         1008,
		"DepositMoneyID":                          1009,
		"DepositMoneyRetID":                       1010,
		"BindGuestAccountID":                      1011,
		"BindGuestAccountRetID":                   1012,
		"RequestUserHallInfoID":                   1013,
		"UserHallInfoID":                          1014,
		"FindSetPwdByPhoneID":                     1015,
		"FindSetPwdByPhoneRetID":                  1016,
		"ModifyBankPasswordID":                    1017,
		"ModifyBankPasswordRetID":                 1018,
		"FindSetBankPwdByPhoneID":                 1019,
		"FindSetBankPwdByPhoneRetID":              1020,
		"GetMailListID":                           1021,
		"GetMailListRetID":                        1022,
		"GetMailDetailID":                         1023,
		"GetMailDetailRetID":                      1024,
		"ContactServiceID":                        1025,
		"ContactServiceRetID":                     1026,
		"GetAgentListID":                          1027,
		"GetAgentListRetID":                       1028,
		"ApplyAgentID":                            1029,
		"ApplyAgentRetID":                         1030,
		"ConvertMoneyID":                          1031,
		"ConvertMoneyRetID":                       1032,
		"ReportAgentID":                           1033,
		"ReportAgentRetID":                        1034,
		"CreatePayOrderID":                        1035,
		"CreatePayOrderRetID":                     1036,
		"GetFAQID":                                1037,
		"GetFAQRetID":                             1038,
		"BindBankCardID":                          1039,
		"BindBankCardRetID":                       1040,
		"UnbindConvertTypeID":                     1041,
		"UnbindConvertTypeRetID":                  1042,
		"CallThirdAPIID":                          1043,
		"CallThirdAPIRetID":                       1044,
		"VideoGameLoginID":                        1045,
		"VideoGameLoginRetID":                     1046,
		"VideoGameLogoutID":                       1047,
		"VideoGameLogoutRetID":                    1048,
		"ActivityEnroll":                          1049,
		"ActivityEnrollRet":                       1050,
		"ActivityGetReward":                       1051,
		"ActivityGetRewardRet":                    1052,
		"ActivityGetInfo":                         1053,
		"ActivityGetInfoRet":                      1054,
		"ActivitGetRechargeInfo":                  1055,
		"ActivitGetRechargeInfoRet":               1056,
		"ActivitGetRechargeReward":                1057,
		"ActivitGetRechargeRewardRet":             1058,
		"ActivitGetAdvanceInfo":                   1059,
		"ActivitGetAdvanceInfoRet":                1060,
		"ActivitGetAdvanceReward":                 1061,
		"ActivitGetAdvanceRewardRet":              1062,
		"CPThirdApiReq":                           1063,
		"CPThirdApiRes":                           1064,
		"DailySignActionLoadReq":                  1065,
		"DailySignActionLoadRes":                  1066,
		"DailySignReceiveRewardReqID":             1067,
		"DailySignReceiveRewardResID":             1068,
		"DailySignLotteryReqID":                   1069,
		"DailySignLotteryResID":                   1070,
		"ReliefConfigReqID":                       1071,
		"ReliefConfigRetID":                       1072,
		"ReliefCollectReqID":                      1073,
		"ReliefCollectRetID":                      1074,
		"UpdLanguageID":                           1075,
		"UpdLanguageIDRet":                        1076,
		"DZPKHALL_BindAccount":                    1100,
		"DZPKHALL_BindAccountRet":                 1101,
		"DZPKHALL_ChangeNickName":                 1102,
		"DZPKHALL_ChangeNickNameRet":              1103,
		"DZPKHALL_ChangeFace":                     1104,
		"DZPKHALL_ChangeFaceRet":                  1105,
		"DZPKHALL_WalletAddress":                  1110,
		"DZPKHALL_WalletWithdraw":                 1111,
		"DZPKHALL_WalletWithdrawRet":              1112,
		"DZPKHALL_LuckyWheelUserData":             1113,
		"DZPKHALL_LuckyWheelUserDataRet":          1114,
		"DZPKHALL_LuckyWheelSpin":                 1115,
		"DZPKHALL_LuckyWheelSpinRet":              1116,
		"DZPKHALL_LuckyWheelUserRewardRecords":    1117,
		"DZPKHALL_LuckyWheelUserRewardRecordsRet": 1118,
		"DZPKHALL_DepositActivityData":            1119,
		"DZPKHALL_DepositActivityDataRet":         1120,
		"DZPKHALL_LoginSms":                       1121,
		"DZPKHALL_LoginSmsRet":                    1122,
		"DZPKHALL_PointsRaceActivityConfig":       1200,
		"DZPKHALL_PointsRaceActivityConfigRet":    1201,
		"DZPKHALL_PointsRaceRank":                 1202,
		"DZPKHALL_PointsRaceRankRet":              1203,
	}
)

func (x HallMsgClassID) Enum() *HallMsgClassID {
	p := new(HallMsgClassID)
	*p = x
	return p
}

func (x HallMsgClassID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HallMsgClassID) Descriptor() protoreflect.EnumDescriptor {
	return file_Hall_proto_enumTypes[0].Descriptor()
}

func (HallMsgClassID) Type() protoreflect.EnumType {
	return &file_Hall_proto_enumTypes[0]
}

func (x HallMsgClassID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *HallMsgClassID) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = HallMsgClassID(num)
	return nil
}

// Deprecated: Use HallMsgClassID.Descriptor instead.
func (HallMsgClassID) EnumDescriptor() ([]byte, []int) {
	return file_Hall_proto_rawDescGZIP(), []int{0}
}

// 每日登入禮物的領取狀態
type DailyLoginGiftState int32

const (
	// 沒禮物可領
	DailyLoginGiftState_Gift_None DailyLoginGiftState = 0
	// 可領取
	DailyLoginGiftState_Gift_ENABLE DailyLoginGiftState = 1
	// 已領取
	DailyLoginGiftState_Gift_Received DailyLoginGiftState = 2
)

// Enum value maps for DailyLoginGiftState.
var (
	DailyLoginGiftState_name = map[int32]string{
		0: "Gift_None",
		1: "Gift_ENABLE",
		2: "Gift_Received",
	}
	DailyLoginGiftState_value = map[string]int32{
		"Gift_None":     0,
		"Gift_ENABLE":   1,
		"Gift_Received": 2,
	}
)

func (x DailyLoginGiftState) Enum() *DailyLoginGiftState {
	p := new(DailyLoginGiftState)
	*p = x
	return p
}

func (x DailyLoginGiftState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DailyLoginGiftState) Descriptor() protoreflect.EnumDescriptor {
	return file_Hall_proto_enumTypes[1].Descriptor()
}

func (DailyLoginGiftState) Type() protoreflect.EnumType {
	return &file_Hall_proto_enumTypes[1]
}

func (x DailyLoginGiftState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *DailyLoginGiftState) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = DailyLoginGiftState(num)
	return nil
}

// Deprecated: Use DailyLoginGiftState.Descriptor instead.
func (DailyLoginGiftState) EnumDescriptor() ([]byte, []int) {
	return file_Hall_proto_rawDescGZIP(), []int{1}
}

var File_Hall_proto protoreflect.FileDescriptor

var file_Hall_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x48, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6e, 0x65,
	0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2a, 0x92, 0x17, 0x0a, 0x0e, 0x48, 0x61, 0x6c, 0x6c, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x0c, 0x47, 0x75, 0x65,
	0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x44, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x44, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x49, 0x44, 0x10, 0x04, 0x12, 0x14,
	0x0a, 0x10, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x61, 0x6c, 0x6c, 0x56, 0x65, 0x72,
	0x49, 0x44, 0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x48, 0x61, 0x6c, 0x6c, 0x56, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x49, 0x44, 0x10, 0x06, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x44, 0x10, 0x07,
	0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x49, 0x44, 0x10, 0x08, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x49,
	0x44, 0x10, 0x09, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x44, 0x10, 0x0a, 0x12, 0x18, 0x0a,
	0x14, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x10, 0x0b, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x6c, 0x65, 0x61, 0x6e,
	0x55, 0x73, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x44, 0x10, 0x0c,
	0x12, 0x15, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x44, 0x10, 0x0d, 0x12, 0x13, 0x0a, 0x0e, 0x42, 0x69, 0x6e, 0x64, 0x5a,
	0x68, 0x69, 0x66, 0x75, 0x62, 0x61, 0x6f, 0x49, 0x44, 0x10, 0xe9, 0x07, 0x12, 0x16, 0x0a, 0x11,
	0x42, 0x69, 0x6e, 0x64, 0x5a, 0x68, 0x69, 0x66, 0x75, 0x62, 0x61, 0x6f, 0x52, 0x65, 0x74, 0x49,
	0x44, 0x10, 0xea, 0x07, 0x12, 0x15, 0x0a, 0x10, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x10, 0xeb, 0x07, 0x12, 0x18, 0x0a, 0x13, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x74,
	0x49, 0x44, 0x10, 0xec, 0x07, 0x12, 0x15, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x56, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x10, 0xed, 0x07, 0x12, 0x18, 0x0a, 0x13,
	0x53, 0x65, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x56, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x74, 0x49, 0x44, 0x10, 0xee, 0x07, 0x12, 0x11, 0x0a, 0x0c, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x46, 0x61, 0x63, 0x65, 0x49, 0x44, 0x10, 0xef, 0x07, 0x12, 0x14, 0x0a, 0x0f, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x46, 0x61, 0x63, 0x65, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0xf0, 0x07, 0x12,
	0x13, 0x0a, 0x0e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x49,
	0x44, 0x10, 0xf1, 0x07, 0x12, 0x16, 0x0a, 0x11, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4d,
	0x6f, 0x6e, 0x65, 0x79, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0xf2, 0x07, 0x12, 0x17, 0x0a, 0x12,
	0x42, 0x69, 0x6e, 0x64, 0x47, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x44, 0x10, 0xf3, 0x07, 0x12, 0x1a, 0x0a, 0x15, 0x42, 0x69, 0x6e, 0x64, 0x47, 0x75, 0x65,
	0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0xf4,
	0x07, 0x12, 0x1a, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x48, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x44, 0x10, 0xf5, 0x07, 0x12, 0x13, 0x0a,
	0x0e, 0x55, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x44, 0x10,
	0xf6, 0x07, 0x12, 0x18, 0x0a, 0x13, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x65, 0x74, 0x50, 0x77, 0x64,
	0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x49, 0x44, 0x10, 0xf7, 0x07, 0x12, 0x1b, 0x0a, 0x16,
	0x46, 0x69, 0x6e, 0x64, 0x53, 0x65, 0x74, 0x50, 0x77, 0x64, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0xf8, 0x07, 0x12, 0x19, 0x0a, 0x14, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x42, 0x61, 0x6e, 0x6b, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x49,
	0x44, 0x10, 0xf9, 0x07, 0x12, 0x1c, 0x0a, 0x17, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x42, 0x61,
	0x6e, 0x6b, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10,
	0xfa, 0x07, 0x12, 0x1c, 0x0a, 0x17, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x65, 0x74, 0x42, 0x61, 0x6e,
	0x6b, 0x50, 0x77, 0x64, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x49, 0x44, 0x10, 0xfb, 0x07,
	0x12, 0x1f, 0x0a, 0x1a, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x50,
	0x77, 0x64, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0xfc,
	0x07, 0x12, 0x12, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x44, 0x10, 0xfd, 0x07, 0x12, 0x15, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6c,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0xfe, 0x07, 0x12, 0x14, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x44, 0x10,
	0xff, 0x07, 0x12, 0x17, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6c, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0x80, 0x08, 0x12, 0x15, 0x0a, 0x10, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x10,
	0x81, 0x08, 0x12, 0x18, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0x82, 0x08, 0x12, 0x13, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x44, 0x10, 0x83,
	0x08, 0x12, 0x16, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0x84, 0x08, 0x12, 0x11, 0x0a, 0x0c, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x10, 0x85, 0x08, 0x12, 0x14, 0x0a, 0x0f,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10,
	0x86, 0x08, 0x12, 0x13, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x4d, 0x6f, 0x6e,
	0x65, 0x79, 0x49, 0x44, 0x10, 0x87, 0x08, 0x12, 0x16, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0x88, 0x08, 0x12,
	0x12, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x10, 0x89, 0x08, 0x12, 0x15, 0x0a, 0x10, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0x8a, 0x08, 0x12, 0x15, 0x0a, 0x10, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x10, 0x8b,
	0x08, 0x12, 0x18, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0x8c, 0x08, 0x12, 0x0d, 0x0a, 0x08, 0x47,
	0x65, 0x74, 0x46, 0x41, 0x51, 0x49, 0x44, 0x10, 0x8d, 0x08, 0x12, 0x10, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x46, 0x41, 0x51, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0x8e, 0x08, 0x12, 0x13, 0x0a, 0x0e,
	0x42, 0x69, 0x6e, 0x64, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x49, 0x44, 0x10, 0x8f,
	0x08, 0x12, 0x16, 0x0a, 0x11, 0x42, 0x69, 0x6e, 0x64, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0x90, 0x08, 0x12, 0x18, 0x0a, 0x13, 0x55, 0x6e, 0x62,
	0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44,
	0x10, 0x91, 0x08, 0x12, 0x1b, 0x0a, 0x16, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0x92, 0x08,
	0x12, 0x13, 0x0a, 0x0e, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x68, 0x69, 0x72, 0x64, 0x41, 0x50, 0x49,
	0x49, 0x44, 0x10, 0x93, 0x08, 0x12, 0x16, 0x0a, 0x11, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x68, 0x69,
	0x72, 0x64, 0x41, 0x50, 0x49, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0x94, 0x08, 0x12, 0x15, 0x0a,
	0x10, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49,
	0x44, 0x10, 0x95, 0x08, 0x12, 0x18, 0x0a, 0x13, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x47, 0x61, 0x6d,
	0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0x96, 0x08, 0x12, 0x16,
	0x0a, 0x11, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x75,
	0x74, 0x49, 0x44, 0x10, 0x97, 0x08, 0x12, 0x19, 0x0a, 0x14, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x47,
	0x61, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0x98,
	0x08, 0x12, 0x13, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x45, 0x6e, 0x72,
	0x6f, 0x6c, 0x6c, 0x10, 0x99, 0x08, 0x12, 0x16, 0x0a, 0x11, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x74, 0x10, 0x9a, 0x08, 0x12, 0x16,
	0x0a, 0x11, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x10, 0x9b, 0x08, 0x12, 0x19, 0x0a, 0x14, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x74, 0x10, 0x9c,
	0x08, 0x12, 0x14, 0x0a, 0x0f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x10, 0x9d, 0x08, 0x12, 0x17, 0x0a, 0x12, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x74, 0x10, 0x9e, 0x08,
	0x12, 0x1b, 0x0a, 0x16, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0x9f, 0x08, 0x12, 0x1e, 0x0a,
	0x19, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x74, 0x10, 0xa0, 0x08, 0x12, 0x1d, 0x0a,
	0x18, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x10, 0xa1, 0x08, 0x12, 0x20, 0x0a, 0x1b,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x74, 0x10, 0xa2, 0x08, 0x12, 0x1a,
	0x0a, 0x15, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x47, 0x65, 0x74, 0x41, 0x64, 0x76, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0xa3, 0x08, 0x12, 0x1d, 0x0a, 0x18, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x47, 0x65, 0x74, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x74, 0x10, 0xa4, 0x08, 0x12, 0x1c, 0x0a, 0x17, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x47, 0x65, 0x74, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x10, 0xa5, 0x08, 0x12, 0x1f, 0x0a, 0x1a, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x47, 0x65, 0x74, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x74, 0x10, 0xa6, 0x08, 0x12, 0x12, 0x0a, 0x0d, 0x43, 0x50, 0x54, 0x68,
	0x69, 0x72, 0x64, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x10, 0xa7, 0x08, 0x12, 0x12, 0x0a, 0x0d,
	0x43, 0x50, 0x54, 0x68, 0x69, 0x72, 0x64, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x10, 0xa8, 0x08,
	0x12, 0x1b, 0x0a, 0x16, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x10, 0xa9, 0x08, 0x12, 0x1b, 0x0a,
	0x16, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x10, 0xaa, 0x08, 0x12, 0x20, 0x0a, 0x1b, 0x44, 0x61,
	0x69, 0x6c, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x49, 0x44, 0x10, 0xab, 0x08, 0x12, 0x20, 0x0a, 0x1b,
	0x44, 0x61, 0x69, 0x6c, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x49, 0x44, 0x10, 0xac, 0x08, 0x12, 0x1a,
	0x0a, 0x15, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x4c, 0x6f, 0x74, 0x74, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x49, 0x44, 0x10, 0xad, 0x08, 0x12, 0x1a, 0x0a, 0x15, 0x44, 0x61,
	0x69, 0x6c, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x49, 0x44, 0x10, 0xae, 0x08, 0x12, 0x16, 0x0a, 0x11, 0x52, 0x65, 0x6c, 0x69, 0x65, 0x66,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x49, 0x44, 0x10, 0xaf, 0x08, 0x12, 0x16,
	0x0a, 0x11, 0x52, 0x65, 0x6c, 0x69, 0x65, 0x66, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x74, 0x49, 0x44, 0x10, 0xb0, 0x08, 0x12, 0x17, 0x0a, 0x12, 0x52, 0x65, 0x6c, 0x69, 0x65, 0x66,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x49, 0x44, 0x10, 0xb1, 0x08, 0x12,
	0x17, 0x0a, 0x12, 0x52, 0x65, 0x6c, 0x69, 0x65, 0x66, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0xb2, 0x08, 0x12, 0x12, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x4c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x49, 0x44, 0x10, 0xb3, 0x08, 0x12, 0x15, 0x0a, 0x10,
	0x55, 0x70, 0x64, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x49, 0x44, 0x52, 0x65, 0x74,
	0x10, 0xb4, 0x08, 0x12, 0x19, 0x0a, 0x14, 0x44, 0x5a, 0x50, 0x4b, 0x48, 0x41, 0x4c, 0x4c, 0x5f,
	0x42, 0x69, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x10, 0xcc, 0x08, 0x12, 0x1c,
	0x0a, 0x17, 0x44, 0x5a, 0x50, 0x4b, 0x48, 0x41, 0x4c, 0x4c, 0x5f, 0x42, 0x69, 0x6e, 0x64, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x74, 0x10, 0xcd, 0x08, 0x12, 0x1c, 0x0a, 0x17,
	0x44, 0x5a, 0x50, 0x4b, 0x48, 0x41, 0x4c, 0x4c, 0x5f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e,
	0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x10, 0xce, 0x08, 0x12, 0x1f, 0x0a, 0x1a, 0x44, 0x5a,
	0x50, 0x4b, 0x48, 0x41, 0x4c, 0x4c, 0x5f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x69, 0x63,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x74, 0x10, 0xcf, 0x08, 0x12, 0x18, 0x0a, 0x13, 0x44,
	0x5a, 0x50, 0x4b, 0x48, 0x41, 0x4c, 0x4c, 0x5f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x46, 0x61,
	0x63, 0x65, 0x10, 0xd0, 0x08, 0x12, 0x1b, 0x0a, 0x16, 0x44, 0x5a, 0x50, 0x4b, 0x48, 0x41, 0x4c,
	0x4c, 0x5f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x46, 0x61, 0x63, 0x65, 0x52, 0x65, 0x74, 0x10,
	0xd1, 0x08, 0x12, 0x1b, 0x0a, 0x16, 0x44, 0x5a, 0x50, 0x4b, 0x48, 0x41, 0x4c, 0x4c, 0x5f, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x10, 0xd6, 0x08, 0x12,
	0x1c, 0x0a, 0x17, 0x44, 0x5a, 0x50, 0x4b, 0x48, 0x41, 0x4c, 0x4c, 0x5f, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x10, 0xd7, 0x08, 0x12, 0x1f, 0x0a,
	0x1a, 0x44, 0x5a, 0x50, 0x4b, 0x48, 0x41, 0x4c, 0x4c, 0x5f, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x74, 0x10, 0xd8, 0x08, 0x12, 0x20,
	0x0a, 0x1b, 0x44, 0x5a, 0x50, 0x4b, 0x48, 0x41, 0x4c, 0x4c, 0x5f, 0x4c, 0x75, 0x63, 0x6b, 0x79,
	0x57, 0x68, 0x65, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x10, 0xd9, 0x08,
	0x12, 0x23, 0x0a, 0x1e, 0x44, 0x5a, 0x50, 0x4b, 0x48, 0x41, 0x4c, 0x4c, 0x5f, 0x4c, 0x75, 0x63,
	0x6b, 0x79, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x74, 0x10, 0xda, 0x08, 0x12, 0x1c, 0x0a, 0x17, 0x44, 0x5a, 0x50, 0x4b, 0x48, 0x41, 0x4c,
	0x4c, 0x5f, 0x4c, 0x75, 0x63, 0x6b, 0x79, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x53, 0x70, 0x69, 0x6e,
	0x10, 0xdb, 0x08, 0x12, 0x1f, 0x0a, 0x1a, 0x44, 0x5a, 0x50, 0x4b, 0x48, 0x41, 0x4c, 0x4c, 0x5f,
	0x4c, 0x75, 0x63, 0x6b, 0x79, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x53, 0x70, 0x69, 0x6e, 0x52, 0x65,
	0x74, 0x10, 0xdc, 0x08, 0x12, 0x29, 0x0a, 0x24, 0x44, 0x5a, 0x50, 0x4b, 0x48, 0x41, 0x4c, 0x4c,
	0x5f, 0x4c, 0x75, 0x63, 0x6b, 0x79, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x10, 0xdd, 0x08, 0x12,
	0x2c, 0x0a, 0x27, 0x44, 0x5a, 0x50, 0x4b, 0x48, 0x41, 0x4c, 0x4c, 0x5f, 0x4c, 0x75, 0x63, 0x6b,
	0x79, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x74, 0x10, 0xde, 0x08, 0x12, 0x21, 0x0a,
	0x1c, 0x44, 0x5a, 0x50, 0x4b, 0x48, 0x41, 0x4c, 0x4c, 0x5f, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x10, 0xdf, 0x08,
	0x12, 0x24, 0x0a, 0x1f, 0x44, 0x5a, 0x50, 0x4b, 0x48, 0x41, 0x4c, 0x4c, 0x5f, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x74, 0x10, 0xe0, 0x08, 0x12, 0x16, 0x0a, 0x11, 0x44, 0x5a, 0x50, 0x4b, 0x48, 0x41,
	0x4c, 0x4c, 0x5f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x6d, 0x73, 0x10, 0xe1, 0x08, 0x12, 0x19,
	0x0a, 0x14, 0x44, 0x5a, 0x50, 0x4b, 0x48, 0x41, 0x4c, 0x4c, 0x5f, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x53, 0x6d, 0x73, 0x52, 0x65, 0x74, 0x10, 0xe2, 0x08, 0x12, 0x26, 0x0a, 0x21, 0x44, 0x5a, 0x50,
	0x4b, 0x48, 0x41, 0x4c, 0x4c, 0x5f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x61, 0x63, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x10, 0xb0,
	0x09, 0x12, 0x29, 0x0a, 0x24, 0x44, 0x5a, 0x50, 0x4b, 0x48, 0x41, 0x4c, 0x4c, 0x5f, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x52, 0x61, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x74, 0x10, 0xb1, 0x09, 0x12, 0x1c, 0x0a, 0x17,
	0x44, 0x5a, 0x50, 0x4b, 0x48, 0x41, 0x4c, 0x4c, 0x5f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52,
	0x61, 0x63, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x10, 0xb2, 0x09, 0x12, 0x1f, 0x0a, 0x1a, 0x44, 0x5a,
	0x50, 0x4b, 0x48, 0x41, 0x4c, 0x4c, 0x5f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x61, 0x63,
	0x65, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x74, 0x10, 0xb3, 0x09, 0x2a, 0x48, 0x0a, 0x13, 0x44,
	0x61, 0x69, 0x6c, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x47, 0x69, 0x66, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x47, 0x69, 0x66, 0x74, 0x5f, 0x4e, 0x6f, 0x6e, 0x65, 0x10,
	0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x47, 0x69, 0x66, 0x74, 0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45,
	0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x47, 0x69, 0x66, 0x74, 0x5f, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x10, 0x02, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x6e, 0x65, 0x74, 0x70, 0x72,
	0x6f, 0x74, 0x6f,
}

var (
	file_Hall_proto_rawDescOnce sync.Once
	file_Hall_proto_rawDescData = file_Hall_proto_rawDesc
)

func file_Hall_proto_rawDescGZIP() []byte {
	file_Hall_proto_rawDescOnce.Do(func() {
		file_Hall_proto_rawDescData = protoimpl.X.CompressGZIP(file_Hall_proto_rawDescData)
	})
	return file_Hall_proto_rawDescData
}

var file_Hall_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_Hall_proto_goTypes = []interface{}{
	(HallMsgClassID)(0),      // 0: netproto.HallMsgClassID
	(DailyLoginGiftState)(0), // 1: netproto.DailyLoginGiftState
}
var file_Hall_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_Hall_proto_init() }
func file_Hall_proto_init() {
	if File_Hall_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Hall_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Hall_proto_goTypes,
		DependencyIndexes: file_Hall_proto_depIdxs,
		EnumInfos:         file_Hall_proto_enumTypes,
	}.Build()
	File_Hall_proto = out.File
	file_Hall_proto_rawDesc = nil
	file_Hall_proto_goTypes = nil
	file_Hall_proto_depIdxs = nil
}
