// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0-devel
// 	protoc        v3.19.1
// source: DBServer.proto

package netproto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type DBServerClassID int32

const (
	DBServerClassID_DBRetID                   DBServerClassID = 1
	DBServerClassID_HallServerStartID         DBServerClassID = 2
	DBServerClassID_GameServerStartID         DBServerClassID = 3
	DBServerClassID_HallServerStartRetID      DBServerClassID = 4
	DBServerClassID_GameServerStartRetID      DBServerClassID = 5
	DBServerClassID_LogoutRoomID              DBServerClassID = 6
	DBServerClassID_UpdateUserScoreID         DBServerClassID = 7
	DBServerClassID_BlockIPID                 DBServerClassID = 8
	DBServerClassID_LoadBlockIPID             DBServerClassID = 9
	DBServerClassID_BlockIPListID             DBServerClassID = 10
	DBServerClassID_DealLogID                 DBServerClassID = 11
	DBServerClassID_LogonRobotID              DBServerClassID = 12
	DBServerClassID_LogonRobotRetID           DBServerClassID = 13
	DBServerClassID_LogoutRobotID             DBServerClassID = 14
	DBServerClassID_HallServerInfoID          DBServerClassID = 15
	DBServerClassID_UpdateVideoGameInfoID     DBServerClassID = 16
	DBServerClassID_AddGameLog                DBServerClassID = 17
	DBServerClassID_GetCpGameInfo             DBServerClassID = 18
	DBServerClassID_GetUserScore              DBServerClassID = 19
	DBServerClassID_CpGameTransferScore       DBServerClassID = 20
	DBServerClassID_CpGameCheckOrderState     DBServerClassID = 21
	DBServerClassID_GetCpGameInfoRet          DBServerClassID = 22
	DBServerClassID_GetUserScoreRet           DBServerClassID = 23
	DBServerClassID_CpGameTransferScoreRet    DBServerClassID = 24
	DBServerClassID_CpGameCheckOrderStateRet  DBServerClassID = 25
	DBServerClassID_LoadSignActionConfig      DBServerClassID = 26
	DBServerClassID_LoadSignActionConfigRet   DBServerClassID = 27
	DBServerClassID_SaveUserSignActionPro     DBServerClassID = 28
	DBServerClassID_UpdateUserCostAmountID    DBServerClassID = 29
	DBServerClassID_LoadUserSignPro           DBServerClassID = 30
	DBServerClassID_LoadUserSignProRes        DBServerClassID = 31
	DBServerClassID_ReceiveSignRewardReqID    DBServerClassID = 32
	DBServerClassID_ReceiveSignRewardResID    DBServerClassID = 33
	DBServerClassID_AddSignLotteryRewardReqID DBServerClassID = 34
	DBServerClassID_AddSignLotteryRewardResID DBServerClassID = 35
	DBServerClassID_LoadHallConfigReqID       DBServerClassID = 36
	DBServerClassID_LoadHallConfigResID       DBServerClassID = 37
	DBServerClassID_GetUserTurnInfoReqID      DBServerClassID = 38
	DBServerClassID_GetUserTurnInfoResID      DBServerClassID = 39
	DBServerClassID_GetUserCCLTurnInfoReqID   DBServerClassID = 40
	DBServerClassID_GetUserCCLTurnInfoResID   DBServerClassID = 41
	DBServerClassID_AddTurnRewardReqID        DBServerClassID = 42
	DBServerClassID_AddTurnRewardResID        DBServerClassID = 43
	DBServerClassID_H5GameLoginID             DBServerClassID = 44 //h5遊戲登入
	DBServerClassID_H5GameLogoutID            DBServerClassID = 45 //h5遊戲登出
	DBServerClassID_H5GameBetID               DBServerClassID = 46 //h5遊戲押注            ( client to server  目前slot 使用, 定時開獎也可  )
	DBServerClassID_H5GameSettlementID        DBServerClassID = 47 //h5遊戲此押注要結算了   ( server to client  目前slot 使用, 定時開獎也可  )
	DBServerClassID_LoadLuckyWheelConfig      DBServerClassID = 48
	DBServerClassID_LoadLuckyWheelConfigRet   DBServerClassID = 49
	DBServerClassID_LoadUserLuckyWheelData    DBServerClassID = 50
	DBServerClassID_LoadUserLuckyWheelDataRet DBServerClassID = 51
	DBServerClassID_LuckyWheelGetReward       DBServerClassID = 52
	DBServerClassID_LuckyWheelReset           DBServerClassID = 53
	DBServerClassID_LuckyWheelResetRet        DBServerClassID = 54
	DBServerClassID_BJL_SetCard               DBServerClassID = 55
	DBServerClassID_BJL_GetConfig             DBServerClassID = 56
	DBServerClassID_BJL_OpenCard              DBServerClassID = 57
	DBServerClassID_BJL_SetPoker              DBServerClassID = 58
	DBServerClassID_BJL_SetShoe               DBServerClassID = 59
	DBServerClassID_BJL_GetShoe               DBServerClassID = 60
	DBServerClassID_LHD_SetPoker              DBServerClassID = 61
	DBServerClassID_LHD_SetShoe               DBServerClassID = 62
	DBServerClassID_LHD_GetShoe               DBServerClassID = 63
	DBServerClassID_LHD_SetCard               DBServerClassID = 64
	DBServerClassID_LHD_GetConfig             DBServerClassID = 65
	DBServerClassID_LuckyWheelForceList       DBServerClassID = 66 //HallServer->DBServer 取得幸運轉輪指定派獎清單
	DBServerClassID_LuckyWheelForceListRet    DBServerClassID = 67 //DBServer->HallServer 回傳幸運轉輪指定派獎清單
	DBServerClassID_LuckyWheelUserForceUpdate DBServerClassID = 68 //HallServer->DBServer 指定派獎派獎更新
	DBServerClassID_DepositActivityGet        DBServerClassID = 69 //HallServer->DBServer 取得儲值活動設定
	DBServerClassID_DepositActivityGetRet     DBServerClassID = 70 //DBServer->HallServer 取得儲值活動設定
	DBServerClassID_BJ_SetCard                DBServerClassID = 71
	DBServerClassID_BJ_GetConfig              DBServerClassID = 72
	DBServerClassID_BJ_OpenCard               DBServerClassID = 73
	DBServerClassID_BJ_SetPoker               DBServerClassID = 74
	DBServerClassID_BJ_SetShoe                DBServerClassID = 75
	DBServerClassID_BJ_GetShoe                DBServerClassID = 76
	DBServerClassID_SB_SetCard                DBServerClassID = 77
	DBServerClassID_SB_GetConfig              DBServerClassID = 78
	DBServerClassID_SB_OpenCard               DBServerClassID = 79
	DBServerClassID_SB_SetPoker               DBServerClassID = 80
	DBServerClassID_SB_SetShoe                DBServerClassID = 81
	DBServerClassID_SB_GetShoe                DBServerClassID = 82
	DBServerClassID_GS_BetDetailLog           DBServerClassID = 83
)

// Enum value maps for DBServerClassID.
var (
	DBServerClassID_name = map[int32]string{
		1:  "DBRetID",
		2:  "HallServerStartID",
		3:  "GameServerStartID",
		4:  "HallServerStartRetID",
		5:  "GameServerStartRetID",
		6:  "LogoutRoomID",
		7:  "UpdateUserScoreID",
		8:  "BlockIPID",
		9:  "LoadBlockIPID",
		10: "BlockIPListID",
		11: "DealLogID",
		12: "LogonRobotID",
		13: "LogonRobotRetID",
		14: "LogoutRobotID",
		15: "HallServerInfoID",
		16: "UpdateVideoGameInfoID",
		17: "AddGameLog",
		18: "GetCpGameInfo",
		19: "GetUserScore",
		20: "CpGameTransferScore",
		21: "CpGameCheckOrderState",
		22: "GetCpGameInfoRet",
		23: "GetUserScoreRet",
		24: "CpGameTransferScoreRet",
		25: "CpGameCheckOrderStateRet",
		26: "LoadSignActionConfig",
		27: "LoadSignActionConfigRet",
		28: "SaveUserSignActionPro",
		29: "UpdateUserCostAmountID",
		30: "LoadUserSignPro",
		31: "LoadUserSignProRes",
		32: "ReceiveSignRewardReqID",
		33: "ReceiveSignRewardResID",
		34: "AddSignLotteryRewardReqID",
		35: "AddSignLotteryRewardResID",
		36: "LoadHallConfigReqID",
		37: "LoadHallConfigResID",
		38: "GetUserTurnInfoReqID",
		39: "GetUserTurnInfoResID",
		40: "GetUserCCLTurnInfoReqID",
		41: "GetUserCCLTurnInfoResID",
		42: "AddTurnRewardReqID",
		43: "AddTurnRewardResID",
		44: "H5GameLoginID",
		45: "H5GameLogoutID",
		46: "H5GameBetID",
		47: "H5GameSettlementID",
		48: "LoadLuckyWheelConfig",
		49: "LoadLuckyWheelConfigRet",
		50: "LoadUserLuckyWheelData",
		51: "LoadUserLuckyWheelDataRet",
		52: "LuckyWheelGetReward",
		53: "LuckyWheelReset",
		54: "LuckyWheelResetRet",
		55: "BJL_SetCard",
		56: "BJL_GetConfig",
		57: "BJL_OpenCard",
		58: "BJL_SetPoker",
		59: "BJL_SetShoe",
		60: "BJL_GetShoe",
		61: "LHD_SetPoker",
		62: "LHD_SetShoe",
		63: "LHD_GetShoe",
		64: "LHD_SetCard",
		65: "LHD_GetConfig",
		66: "LuckyWheelForceList",
		67: "LuckyWheelForceListRet",
		68: "LuckyWheelUserForceUpdate",
		69: "DepositActivityGet",
		70: "DepositActivityGetRet",
		71: "BJ_SetCard",
		72: "BJ_GetConfig",
		73: "BJ_OpenCard",
		74: "BJ_SetPoker",
		75: "BJ_SetShoe",
		76: "BJ_GetShoe",
		77: "SB_SetCard",
		78: "SB_GetConfig",
		79: "SB_OpenCard",
		80: "SB_SetPoker",
		81: "SB_SetShoe",
		82: "SB_GetShoe",
		83: "GS_BetDetailLog",
	}
	DBServerClassID_value = map[string]int32{
		"DBRetID":                   1,
		"HallServerStartID":         2,
		"GameServerStartID":         3,
		"HallServerStartRetID":      4,
		"GameServerStartRetID":      5,
		"LogoutRoomID":              6,
		"UpdateUserScoreID":         7,
		"BlockIPID":                 8,
		"LoadBlockIPID":             9,
		"BlockIPListID":             10,
		"DealLogID":                 11,
		"LogonRobotID":              12,
		"LogonRobotRetID":           13,
		"LogoutRobotID":             14,
		"HallServerInfoID":          15,
		"UpdateVideoGameInfoID":     16,
		"AddGameLog":                17,
		"GetCpGameInfo":             18,
		"GetUserScore":              19,
		"CpGameTransferScore":       20,
		"CpGameCheckOrderState":     21,
		"GetCpGameInfoRet":          22,
		"GetUserScoreRet":           23,
		"CpGameTransferScoreRet":    24,
		"CpGameCheckOrderStateRet":  25,
		"LoadSignActionConfig":      26,
		"LoadSignActionConfigRet":   27,
		"SaveUserSignActionPro":     28,
		"UpdateUserCostAmountID":    29,
		"LoadUserSignPro":           30,
		"LoadUserSignProRes":        31,
		"ReceiveSignRewardReqID":    32,
		"ReceiveSignRewardResID":    33,
		"AddSignLotteryRewardReqID": 34,
		"AddSignLotteryRewardResID": 35,
		"LoadHallConfigReqID":       36,
		"LoadHallConfigResID":       37,
		"GetUserTurnInfoReqID":      38,
		"GetUserTurnInfoResID":      39,
		"GetUserCCLTurnInfoReqID":   40,
		"GetUserCCLTurnInfoResID":   41,
		"AddTurnRewardReqID":        42,
		"AddTurnRewardResID":        43,
		"H5GameLoginID":             44,
		"H5GameLogoutID":            45,
		"H5GameBetID":               46,
		"H5GameSettlementID":        47,
		"LoadLuckyWheelConfig":      48,
		"LoadLuckyWheelConfigRet":   49,
		"LoadUserLuckyWheelData":    50,
		"LoadUserLuckyWheelDataRet": 51,
		"LuckyWheelGetReward":       52,
		"LuckyWheelReset":           53,
		"LuckyWheelResetRet":        54,
		"BJL_SetCard":               55,
		"BJL_GetConfig":             56,
		"BJL_OpenCard":              57,
		"BJL_SetPoker":              58,
		"BJL_SetShoe":               59,
		"BJL_GetShoe":               60,
		"LHD_SetPoker":              61,
		"LHD_SetShoe":               62,
		"LHD_GetShoe":               63,
		"LHD_SetCard":               64,
		"LHD_GetConfig":             65,
		"LuckyWheelForceList":       66,
		"LuckyWheelForceListRet":    67,
		"LuckyWheelUserForceUpdate": 68,
		"DepositActivityGet":        69,
		"DepositActivityGetRet":     70,
		"BJ_SetCard":                71,
		"BJ_GetConfig":              72,
		"BJ_OpenCard":               73,
		"BJ_SetPoker":               74,
		"BJ_SetShoe":                75,
		"BJ_GetShoe":                76,
		"SB_SetCard":                77,
		"SB_GetConfig":              78,
		"SB_OpenCard":               79,
		"SB_SetPoker":               80,
		"SB_SetShoe":                81,
		"SB_GetShoe":                82,
		"GS_BetDetailLog":           83,
	}
)

func (x DBServerClassID) Enum() *DBServerClassID {
	p := new(DBServerClassID)
	*p = x
	return p
}

func (x DBServerClassID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DBServerClassID) Descriptor() protoreflect.EnumDescriptor {
	return file_DBServer_proto_enumTypes[0].Descriptor()
}

func (DBServerClassID) Type() protoreflect.EnumType {
	return &file_DBServer_proto_enumTypes[0]
}

func (x DBServerClassID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *DBServerClassID) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = DBServerClassID(num)
	return nil
}

// Deprecated: Use DBServerClassID.Descriptor instead.
func (DBServerClassID) EnumDescriptor() ([]byte, []int) {
	return file_DBServer_proto_rawDescGZIP(), []int{0}
}

var File_DBServer_proto protoreflect.FileDescriptor

var file_DBServer_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x44, 0x42, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2a, 0xb5, 0x0e, 0x0a, 0x0f, 0x44,
	0x42, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x44, 0x12, 0x0b,
	0x0a, 0x07, 0x44, 0x42, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x48,
	0x61, 0x6c, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x49, 0x44,
	0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x49, 0x44, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x48, 0x61, 0x6c,
	0x6c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x74, 0x49,
	0x44, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10, 0x05, 0x12, 0x10, 0x0a,
	0x0c, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x10, 0x06, 0x12,
	0x15, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x49, 0x44, 0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49,
	0x50, 0x49, 0x44, 0x10, 0x08, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x49, 0x50, 0x49, 0x44, 0x10, 0x09, 0x12, 0x11, 0x0a, 0x0d, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x49, 0x50, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x44, 0x10, 0x0a, 0x12, 0x0d, 0x0a, 0x09, 0x44,
	0x65, 0x61, 0x6c, 0x4c, 0x6f, 0x67, 0x49, 0x44, 0x10, 0x0b, 0x12, 0x10, 0x0a, 0x0c, 0x4c, 0x6f,
	0x67, 0x6f, 0x6e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x44, 0x10, 0x0c, 0x12, 0x13, 0x0a, 0x0f,
	0x4c, 0x6f, 0x67, 0x6f, 0x6e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x52, 0x65, 0x74, 0x49, 0x44, 0x10,
	0x0d, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x6f, 0x62, 0x6f, 0x74,
	0x49, 0x44, 0x10, 0x0e, 0x12, 0x14, 0x0a, 0x10, 0x48, 0x61, 0x6c, 0x6c, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x44, 0x10, 0x0f, 0x12, 0x19, 0x0a, 0x15, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x49, 0x44, 0x10, 0x10, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x47, 0x61, 0x6d, 0x65,
	0x4c, 0x6f, 0x67, 0x10, 0x11, 0x12, 0x11, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x70, 0x47, 0x61,
	0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0x12, 0x12, 0x10, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x10, 0x13, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x70,
	0x47, 0x61, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x10, 0x14, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x70, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x10, 0x15, 0x12, 0x14,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x70, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x74, 0x10, 0x16, 0x12, 0x13, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x74, 0x10, 0x17, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x70, 0x47,
	0x61, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x52, 0x65, 0x74, 0x10, 0x18, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x70, 0x47, 0x61, 0x6d, 0x65, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x74, 0x10, 0x19, 0x12, 0x18, 0x0a, 0x14, 0x4c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x10, 0x1a, 0x12, 0x1b, 0x0a,
	0x17, 0x4c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x74, 0x10, 0x1b, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x61,
	0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x72, 0x6f, 0x10, 0x1c, 0x12, 0x1a, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x6f, 0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x10,
	0x1d, 0x12, 0x13, 0x0a, 0x0f, 0x4c, 0x6f, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67,
	0x6e, 0x50, 0x72, 0x6f, 0x10, 0x1e, 0x12, 0x16, 0x0a, 0x12, 0x4c, 0x6f, 0x61, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x73, 0x10, 0x1f, 0x12, 0x1a,
	0x0a, 0x16, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x49, 0x44, 0x10, 0x20, 0x12, 0x1a, 0x0a, 0x16, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x49, 0x44, 0x10, 0x21, 0x12, 0x1d, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x53, 0x69, 0x67,
	0x6e, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x49, 0x44, 0x10, 0x22, 0x12, 0x1d, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x53, 0x69, 0x67, 0x6e,
	0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x49, 0x44, 0x10, 0x23, 0x12, 0x17, 0x0a, 0x13, 0x4c, 0x6f, 0x61, 0x64, 0x48, 0x61, 0x6c, 0x6c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x49, 0x44, 0x10, 0x24, 0x12, 0x17, 0x0a,
	0x13, 0x4c, 0x6f, 0x61, 0x64, 0x48, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x49, 0x44, 0x10, 0x25, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x75, 0x72, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x49, 0x44, 0x10, 0x26,
	0x12, 0x18, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x75, 0x72, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x49, 0x44, 0x10, 0x27, 0x12, 0x1b, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x43, 0x4c, 0x54, 0x75, 0x72, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x49, 0x44, 0x10, 0x28, 0x12, 0x1b, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x43, 0x4c, 0x54, 0x75, 0x72, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x49, 0x44, 0x10, 0x29, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x54, 0x75, 0x72, 0x6e, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x49, 0x44, 0x10, 0x2a, 0x12, 0x16, 0x0a, 0x12,
	0x41, 0x64, 0x64, 0x54, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x49, 0x44, 0x10, 0x2b, 0x12, 0x11, 0x0a, 0x0d, 0x48, 0x35, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x49, 0x44, 0x10, 0x2c, 0x12, 0x12, 0x0a, 0x0e, 0x48, 0x35, 0x47, 0x61, 0x6d,
	0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x49, 0x44, 0x10, 0x2d, 0x12, 0x0f, 0x0a, 0x0b, 0x48,
	0x35, 0x47, 0x61, 0x6d, 0x65, 0x42, 0x65, 0x74, 0x49, 0x44, 0x10, 0x2e, 0x12, 0x16, 0x0a, 0x12,
	0x48, 0x35, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x10, 0x2f, 0x12, 0x18, 0x0a, 0x14, 0x4c, 0x6f, 0x61, 0x64, 0x4c, 0x75, 0x63, 0x6b,
	0x79, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x10, 0x30, 0x12, 0x1b,
	0x0a, 0x17, 0x4c, 0x6f, 0x61, 0x64, 0x4c, 0x75, 0x63, 0x6b, 0x79, 0x57, 0x68, 0x65, 0x65, 0x6c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x74, 0x10, 0x31, 0x12, 0x1a, 0x0a, 0x16, 0x4c,
	0x6f, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x75, 0x63, 0x6b, 0x79, 0x57, 0x68, 0x65, 0x65,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x10, 0x32, 0x12, 0x1d, 0x0a, 0x19, 0x4c, 0x6f, 0x61, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x75, 0x63, 0x6b, 0x79, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x74, 0x10, 0x33, 0x12, 0x17, 0x0a, 0x13, 0x4c, 0x75, 0x63, 0x6b, 0x79, 0x57,
	0x68, 0x65, 0x65, 0x6c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x10, 0x34, 0x12,
	0x13, 0x0a, 0x0f, 0x4c, 0x75, 0x63, 0x6b, 0x79, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x10, 0x35, 0x12, 0x16, 0x0a, 0x12, 0x4c, 0x75, 0x63, 0x6b, 0x79, 0x57, 0x68, 0x65,
	0x65, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x74, 0x10, 0x36, 0x12, 0x0f, 0x0a, 0x0b,
	0x42, 0x4a, 0x4c, 0x5f, 0x53, 0x65, 0x74, 0x43, 0x61, 0x72, 0x64, 0x10, 0x37, 0x12, 0x11, 0x0a,
	0x0d, 0x42, 0x4a, 0x4c, 0x5f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x10, 0x38,
	0x12, 0x10, 0x0a, 0x0c, 0x42, 0x4a, 0x4c, 0x5f, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x61, 0x72, 0x64,
	0x10, 0x39, 0x12, 0x10, 0x0a, 0x0c, 0x42, 0x4a, 0x4c, 0x5f, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x6b,
	0x65, 0x72, 0x10, 0x3a, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x4a, 0x4c, 0x5f, 0x53, 0x65, 0x74, 0x53,
	0x68, 0x6f, 0x65, 0x10, 0x3b, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x4a, 0x4c, 0x5f, 0x47, 0x65, 0x74,
	0x53, 0x68, 0x6f, 0x65, 0x10, 0x3c, 0x12, 0x10, 0x0a, 0x0c, 0x4c, 0x48, 0x44, 0x5f, 0x53, 0x65,
	0x74, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x10, 0x3d, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x48, 0x44, 0x5f,
	0x53, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x65, 0x10, 0x3e, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x48, 0x44,
	0x5f, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x65, 0x10, 0x3f, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x48,
	0x44, 0x5f, 0x53, 0x65, 0x74, 0x43, 0x61, 0x72, 0x64, 0x10, 0x40, 0x12, 0x11, 0x0a, 0x0d, 0x4c,
	0x48, 0x44, 0x5f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x10, 0x41, 0x12, 0x17,
	0x0a, 0x13, 0x4c, 0x75, 0x63, 0x6b, 0x79, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x46, 0x6f, 0x72, 0x63,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x10, 0x42, 0x12, 0x1a, 0x0a, 0x16, 0x4c, 0x75, 0x63, 0x6b, 0x79,
	0x57, 0x68, 0x65, 0x65, 0x6c, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x74, 0x10, 0x43, 0x12, 0x1d, 0x0a, 0x19, 0x4c, 0x75, 0x63, 0x6b, 0x79, 0x57, 0x68, 0x65, 0x65,
	0x6c, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x10, 0x44, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x47, 0x65, 0x74, 0x10, 0x45, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x74, 0x10, 0x46, 0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x4a, 0x5f, 0x53, 0x65, 0x74, 0x43,
	0x61, 0x72, 0x64, 0x10, 0x47, 0x12, 0x10, 0x0a, 0x0c, 0x42, 0x4a, 0x5f, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x10, 0x48, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x4a, 0x5f, 0x4f, 0x70,
	0x65, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x10, 0x49, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x4a, 0x5f, 0x53,
	0x65, 0x74, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x10, 0x4a, 0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x4a, 0x5f,
	0x53, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x65, 0x10, 0x4b, 0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x4a, 0x5f,
	0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x65, 0x10, 0x4c, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x42, 0x5f,
	0x53, 0x65, 0x74, 0x43, 0x61, 0x72, 0x64, 0x10, 0x4d, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x42, 0x5f,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x10, 0x4e, 0x12, 0x0f, 0x0a, 0x0b, 0x53,
	0x42, 0x5f, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x10, 0x4f, 0x12, 0x0f, 0x0a, 0x0b,
	0x53, 0x42, 0x5f, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x10, 0x50, 0x12, 0x0e, 0x0a,
	0x0a, 0x53, 0x42, 0x5f, 0x53, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x65, 0x10, 0x51, 0x12, 0x0e, 0x0a,
	0x0a, 0x53, 0x42, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x65, 0x10, 0x52, 0x12, 0x13, 0x0a,
	0x0f, 0x47, 0x53, 0x5f, 0x42, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67,
	0x10, 0x53, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_DBServer_proto_rawDescOnce sync.Once
	file_DBServer_proto_rawDescData = file_DBServer_proto_rawDesc
)

func file_DBServer_proto_rawDescGZIP() []byte {
	file_DBServer_proto_rawDescOnce.Do(func() {
		file_DBServer_proto_rawDescData = protoimpl.X.CompressGZIP(file_DBServer_proto_rawDescData)
	})
	return file_DBServer_proto_rawDescData
}

var file_DBServer_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_DBServer_proto_goTypes = []interface{}{
	(DBServerClassID)(0), // 0: netproto.DBServerClassID
}
var file_DBServer_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_DBServer_proto_init() }
func file_DBServer_proto_init() {
	if File_DBServer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_DBServer_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_DBServer_proto_goTypes,
		DependencyIndexes: file_DBServer_proto_depIdxs,
		EnumInfos:         file_DBServer_proto_enumTypes,
	}.Build()
	File_DBServer_proto = out.File
	file_DBServer_proto_rawDesc = nil
	file_DBServer_proto_goTypes = nil
	file_DBServer_proto_depIdxs = nil
}
