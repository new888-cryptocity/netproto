// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0-devel
// 	protoc        v3.19.1
// source: GameRoomMsg.proto

package netproto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//登录房间
type LoginGameRoomInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID *int32  `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"` //用户ID
	Cer    *string `protobuf:"bytes,2,req,name=Cer" json:"Cer,omitempty"`        //用户证书
	HDCode *string `protobuf:"bytes,3,req,name=HDCode" json:"HDCode,omitempty"`  //设备码
	HDType *int32  `protobuf:"varint,4,req,name=HDType" json:"HDType,omitempty"` //设备类型
}

func (x *LoginGameRoomInfo) Reset() {
	*x = LoginGameRoomInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameRoomMsg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginGameRoomInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginGameRoomInfo) ProtoMessage() {}

func (x *LoginGameRoomInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoomMsg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginGameRoomInfo.ProtoReflect.Descriptor instead.
func (*LoginGameRoomInfo) Descriptor() ([]byte, []int) {
	return file_GameRoomMsg_proto_rawDescGZIP(), []int{0}
}

func (x *LoginGameRoomInfo) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *LoginGameRoomInfo) GetCer() string {
	if x != nil && x.Cer != nil {
		return *x.Cer
	}
	return ""
}

func (x *LoginGameRoomInfo) GetHDCode() string {
	if x != nil && x.HDCode != nil {
		return *x.HDCode
	}
	return ""
}

func (x *LoginGameRoomInfo) GetHDType() int32 {
	if x != nil && x.HDType != nil {
		return *x.HDType
	}
	return 0
}

//登录房间结果
type LoginGameRoomRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code             *int32             `protobuf:"varint,1,req,name=Code" json:"Code,omitempty"`                        //登录结果代码
	Message          *string            `protobuf:"bytes,2,req,name=Message" json:"Message,omitempty"`                   //提示消息
	LoginRequestData *LoginGameRoomInfo `protobuf:"bytes,3,opt,name=LoginRequestData" json:"LoginRequestData,omitempty"` //登录数据
	UserData         *UserRoomLogonData `protobuf:"bytes,4,opt,name=UserData" json:"UserData,omitempty"`                 //用户数据
	RoomInfo         *RoomInfo          `protobuf:"bytes,5,opt,name=RoomInfo" json:"RoomInfo,omitempty"`
	ParamLG          *string            `protobuf:"bytes,6,opt,name=ParamLG" json:"ParamLG,omitempty"` //错误附带参数， 多参数以|分割（兼容国际化版本）
}

func (x *LoginGameRoomRet) Reset() {
	*x = LoginGameRoomRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameRoomMsg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginGameRoomRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginGameRoomRet) ProtoMessage() {}

func (x *LoginGameRoomRet) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoomMsg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginGameRoomRet.ProtoReflect.Descriptor instead.
func (*LoginGameRoomRet) Descriptor() ([]byte, []int) {
	return file_GameRoomMsg_proto_rawDescGZIP(), []int{1}
}

func (x *LoginGameRoomRet) GetCode() int32 {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return 0
}

func (x *LoginGameRoomRet) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *LoginGameRoomRet) GetLoginRequestData() *LoginGameRoomInfo {
	if x != nil {
		return x.LoginRequestData
	}
	return nil
}

func (x *LoginGameRoomRet) GetUserData() *UserRoomLogonData {
	if x != nil {
		return x.UserData
	}
	return nil
}

func (x *LoginGameRoomRet) GetRoomInfo() *RoomInfo {
	if x != nil {
		return x.RoomInfo
	}
	return nil
}

func (x *LoginGameRoomRet) GetParamLG() string {
	if x != nil && x.ParamLG != nil {
		return *x.ParamLG
	}
	return ""
}

//用户登录房间数据
type UserRoomLogonData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID             *int32  `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`         //用户ID
	UserType           *int32  `protobuf:"varint,2,req,name=UserType" json:"UserType,omitempty"`     //用户类型
	NickName           *string `protobuf:"bytes,3,req,name=NickName" json:"NickName,omitempty"`      //昵称
	FaceID             *int32  `protobuf:"varint,4,req,name=FaceID" json:"FaceID,omitempty"`         //头像
	Sex                *int32  `protobuf:"varint,5,req,name=Sex" json:"Sex,omitempty"`               //性别
	CashAmount         *int64  `protobuf:"varint,6,req,name=CashAmount" json:"CashAmount,omitempty"` //现金数
	WinCount           *int32  `protobuf:"varint,7,req,name=WinCount" json:"WinCount,omitempty"`     //赢
	LoseCount          *int32  `protobuf:"varint,8,req,name=LoseCount" json:"LoseCount,omitempty"`   //输
	DrawCount          *int32  `protobuf:"varint,9,req,name=DrawCount" json:"DrawCount,omitempty"`   //平
	ServerAddr         *string `protobuf:"bytes,10,opt,name=ServerAddr" json:"ServerAddr,omitempty"` //需要重连的房间地址信息
	GameBuff           *string `protobuf:"bytes,11,opt,name=GameBuff" json:"GameBuff,omitempty"`
	TotalScore         *int64  `protobuf:"varint,12,opt,name=TotalScore" json:"TotalScore,omitempty"`
	XiuXianScore       *int64  `protobuf:"varint,13,opt,name=XiuXianScore" json:"XiuXianScore,omitempty"`             //休闲版斗地主豆子数
	IsSuperUser        *bool   `protobuf:"varint,14,opt,name=IsSuperUser" json:"IsSuperUser,omitempty"`               //是否超级用户
	TracedUserID       *int32  `protobuf:"varint,15,opt,name=TracedUserID" json:"TracedUserID,omitempty"`             //被哪个超级用户追踪
	TodayScoreDan      *int32  `protobuf:"varint,16,opt,name=TodayScoreDan" json:"TodayScoreDan,omitempty"`           //当日净分段位等级，当前游戏
	TotalWinDan        *int32  `protobuf:"varint,17,opt,name=TotalWinDan" json:"TotalWinDan,omitempty"`               //总输赢段位等级，所有游戏
	ChargeDan          *int32  `protobuf:"varint,18,opt,name=ChargeDan" json:"ChargeDan,omitempty"`                   //总充值段位等级
	WinRateDan         *int32  `protobuf:"varint,19,opt,name=WinRateDan" json:"WinRateDan,omitempty"`                 //胜率段位，当前游戏
	GameTimeDan        *int32  `protobuf:"varint,20,opt,name=GameTimeDan" json:"GameTimeDan,omitempty"`               //游戏时长段位，当前游戏
	IsNewBee           *bool   `protobuf:"varint,21,opt,name=IsNewBee" json:"IsNewBee,omitempty"`                     //是否满足新手条件
	IsNewbiePro        *bool   `protobuf:"varint,22,opt,name=IsNewbiePro" json:"IsNewbiePro,omitempty"`               //新手保护（0:不在保护范围，1:保护）
	NextWinRate        *int32  `protobuf:"varint,23,opt,name=NextWinRate" json:"NextWinRate,omitempty"`               //下一局必赢初始机率
	NextWinLimit       *int32  `protobuf:"varint,24,opt,name=NextWinLimit" json:"NextWinLimit,omitempty"`             //输赢低于额度必赢
	NextAddRate        *int32  `protobuf:"varint,25,opt,name=NextAddRate" json:"NextAddRate,omitempty"`               //递增机率
	DiffRunAcc         *int64  `protobuf:"varint,26,opt,name=DiffRunAcc" json:"DiffRunAcc,omitempty"`                 //还差多少流水不保护
	WinLoseParam       *int32  `protobuf:"varint,27,opt,name=WinLoseParam" json:"WinLoseParam,omitempty"`             //参数(输赢)
	TotalWinLose       *int64  `protobuf:"varint,28,opt,name=TotalWinLose" json:"TotalWinLose,omitempty"`             //总输赢
	TotalCharge        *int64  `protobuf:"varint,29,opt,name=TotalCharge" json:"TotalCharge,omitempty"`               //总充值
	BetLimit           *int64  `protobuf:"varint,30,opt,name=BetLimit" json:"BetLimit,omitempty"`                     //下注上限
	BankMoney          *int64  `protobuf:"varint,31,opt,name=BankMoney" json:"BankMoney,omitempty"`                   // 银行金币
	CurrGameLoseWin    *int64  `protobuf:"varint,32,opt,name=CurrGameLoseWin" json:"CurrGameLoseWin,omitempty"`       // 当前游戏总输赢
	FirstGameTimestamp *int64  `protobuf:"varint,33,opt,name=FirstGameTimestamp" json:"FirstGameTimestamp,omitempty"` // 首次玩该游戏时间戳
	DayRecharge        *int64  `protobuf:"varint,34,opt,name=DayRecharge" json:"DayRecharge,omitempty"`               // 日充值
	Currency           *string `protobuf:"bytes,35,opt,name=Currency" json:"Currency,omitempty"`                      // 幣值
	Denomination       *int32  `protobuf:"varint,36,opt,name=Denomination" json:"Denomination,omitempty"`             // 幣值放大倍率
	FreePoint          *int64  `protobuf:"varint,37,opt,name=FreePoint" json:"FreePoint,omitempty"`                   // 免費虛點
}

func (x *UserRoomLogonData) Reset() {
	*x = UserRoomLogonData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameRoomMsg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRoomLogonData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRoomLogonData) ProtoMessage() {}

func (x *UserRoomLogonData) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoomMsg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRoomLogonData.ProtoReflect.Descriptor instead.
func (*UserRoomLogonData) Descriptor() ([]byte, []int) {
	return file_GameRoomMsg_proto_rawDescGZIP(), []int{2}
}

func (x *UserRoomLogonData) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *UserRoomLogonData) GetUserType() int32 {
	if x != nil && x.UserType != nil {
		return *x.UserType
	}
	return 0
}

func (x *UserRoomLogonData) GetNickName() string {
	if x != nil && x.NickName != nil {
		return *x.NickName
	}
	return ""
}

func (x *UserRoomLogonData) GetFaceID() int32 {
	if x != nil && x.FaceID != nil {
		return *x.FaceID
	}
	return 0
}

func (x *UserRoomLogonData) GetSex() int32 {
	if x != nil && x.Sex != nil {
		return *x.Sex
	}
	return 0
}

func (x *UserRoomLogonData) GetCashAmount() int64 {
	if x != nil && x.CashAmount != nil {
		return *x.CashAmount
	}
	return 0
}

func (x *UserRoomLogonData) GetWinCount() int32 {
	if x != nil && x.WinCount != nil {
		return *x.WinCount
	}
	return 0
}

func (x *UserRoomLogonData) GetLoseCount() int32 {
	if x != nil && x.LoseCount != nil {
		return *x.LoseCount
	}
	return 0
}

func (x *UserRoomLogonData) GetDrawCount() int32 {
	if x != nil && x.DrawCount != nil {
		return *x.DrawCount
	}
	return 0
}

func (x *UserRoomLogonData) GetServerAddr() string {
	if x != nil && x.ServerAddr != nil {
		return *x.ServerAddr
	}
	return ""
}

func (x *UserRoomLogonData) GetGameBuff() string {
	if x != nil && x.GameBuff != nil {
		return *x.GameBuff
	}
	return ""
}

func (x *UserRoomLogonData) GetTotalScore() int64 {
	if x != nil && x.TotalScore != nil {
		return *x.TotalScore
	}
	return 0
}

func (x *UserRoomLogonData) GetXiuXianScore() int64 {
	if x != nil && x.XiuXianScore != nil {
		return *x.XiuXianScore
	}
	return 0
}

func (x *UserRoomLogonData) GetIsSuperUser() bool {
	if x != nil && x.IsSuperUser != nil {
		return *x.IsSuperUser
	}
	return false
}

func (x *UserRoomLogonData) GetTracedUserID() int32 {
	if x != nil && x.TracedUserID != nil {
		return *x.TracedUserID
	}
	return 0
}

func (x *UserRoomLogonData) GetTodayScoreDan() int32 {
	if x != nil && x.TodayScoreDan != nil {
		return *x.TodayScoreDan
	}
	return 0
}

func (x *UserRoomLogonData) GetTotalWinDan() int32 {
	if x != nil && x.TotalWinDan != nil {
		return *x.TotalWinDan
	}
	return 0
}

func (x *UserRoomLogonData) GetChargeDan() int32 {
	if x != nil && x.ChargeDan != nil {
		return *x.ChargeDan
	}
	return 0
}

func (x *UserRoomLogonData) GetWinRateDan() int32 {
	if x != nil && x.WinRateDan != nil {
		return *x.WinRateDan
	}
	return 0
}

func (x *UserRoomLogonData) GetGameTimeDan() int32 {
	if x != nil && x.GameTimeDan != nil {
		return *x.GameTimeDan
	}
	return 0
}

func (x *UserRoomLogonData) GetIsNewBee() bool {
	if x != nil && x.IsNewBee != nil {
		return *x.IsNewBee
	}
	return false
}

func (x *UserRoomLogonData) GetIsNewbiePro() bool {
	if x != nil && x.IsNewbiePro != nil {
		return *x.IsNewbiePro
	}
	return false
}

func (x *UserRoomLogonData) GetNextWinRate() int32 {
	if x != nil && x.NextWinRate != nil {
		return *x.NextWinRate
	}
	return 0
}

func (x *UserRoomLogonData) GetNextWinLimit() int32 {
	if x != nil && x.NextWinLimit != nil {
		return *x.NextWinLimit
	}
	return 0
}

func (x *UserRoomLogonData) GetNextAddRate() int32 {
	if x != nil && x.NextAddRate != nil {
		return *x.NextAddRate
	}
	return 0
}

func (x *UserRoomLogonData) GetDiffRunAcc() int64 {
	if x != nil && x.DiffRunAcc != nil {
		return *x.DiffRunAcc
	}
	return 0
}

func (x *UserRoomLogonData) GetWinLoseParam() int32 {
	if x != nil && x.WinLoseParam != nil {
		return *x.WinLoseParam
	}
	return 0
}

func (x *UserRoomLogonData) GetTotalWinLose() int64 {
	if x != nil && x.TotalWinLose != nil {
		return *x.TotalWinLose
	}
	return 0
}

func (x *UserRoomLogonData) GetTotalCharge() int64 {
	if x != nil && x.TotalCharge != nil {
		return *x.TotalCharge
	}
	return 0
}

func (x *UserRoomLogonData) GetBetLimit() int64 {
	if x != nil && x.BetLimit != nil {
		return *x.BetLimit
	}
	return 0
}

func (x *UserRoomLogonData) GetBankMoney() int64 {
	if x != nil && x.BankMoney != nil {
		return *x.BankMoney
	}
	return 0
}

func (x *UserRoomLogonData) GetCurrGameLoseWin() int64 {
	if x != nil && x.CurrGameLoseWin != nil {
		return *x.CurrGameLoseWin
	}
	return 0
}

func (x *UserRoomLogonData) GetFirstGameTimestamp() int64 {
	if x != nil && x.FirstGameTimestamp != nil {
		return *x.FirstGameTimestamp
	}
	return 0
}

func (x *UserRoomLogonData) GetDayRecharge() int64 {
	if x != nil && x.DayRecharge != nil {
		return *x.DayRecharge
	}
	return 0
}

func (x *UserRoomLogonData) GetCurrency() string {
	if x != nil && x.Currency != nil {
		return *x.Currency
	}
	return ""
}

func (x *UserRoomLogonData) GetDenomination() int32 {
	if x != nil && x.Denomination != nil {
		return *x.Denomination
	}
	return 0
}

func (x *UserRoomLogonData) GetFreePoint() int64 {
	if x != nil && x.FreePoint != nil {
		return *x.FreePoint
	}
	return 0
}

//用户坐下
type UserSit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableNo *int32 `protobuf:"varint,1,req,name=TableNo" json:"TableNo,omitempty"`
	SeatNo  *int32 `protobuf:"varint,2,req,name=SeatNo" json:"SeatNo,omitempty"`
}

func (x *UserSit) Reset() {
	*x = UserSit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameRoomMsg_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSit) ProtoMessage() {}

func (x *UserSit) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoomMsg_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSit.ProtoReflect.Descriptor instead.
func (*UserSit) Descriptor() ([]byte, []int) {
	return file_GameRoomMsg_proto_rawDescGZIP(), []int{3}
}

func (x *UserSit) GetTableNo() int32 {
	if x != nil && x.TableNo != nil {
		return *x.TableNo
	}
	return 0
}

func (x *UserSit) GetSeatNo() int32 {
	if x != nil && x.SeatNo != nil {
		return *x.SeatNo
	}
	return 0
}

//游戏版本号信息
type GameVerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AndroidVersion *string `protobuf:"bytes,1,req,name=AndroidVersion" json:"AndroidVersion,omitempty"`
	IOSVersion     *string `protobuf:"bytes,2,req,name=IOSVersion" json:"IOSVersion,omitempty"`
}

func (x *GameVerInfo) Reset() {
	*x = GameVerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameRoomMsg_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameVerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameVerInfo) ProtoMessage() {}

func (x *GameVerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoomMsg_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameVerInfo.ProtoReflect.Descriptor instead.
func (*GameVerInfo) Descriptor() ([]byte, []int) {
	return file_GameRoomMsg_proto_rawDescGZIP(), []int{4}
}

func (x *GameVerInfo) GetAndroidVersion() string {
	if x != nil && x.AndroidVersion != nil {
		return *x.AndroidVersion
	}
	return ""
}

func (x *GameVerInfo) GetIOSVersion() string {
	if x != nil && x.IOSVersion != nil {
		return *x.IOSVersion
	}
	return ""
}

//房间信息
type RoomInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID         *int32  `protobuf:"varint,1,req,name=GameID" json:"GameID,omitempty"`
	GameName       *string `protobuf:"bytes,2,req,name=GameName" json:"GameName,omitempty"`
	Flag           *string `protobuf:"bytes,3,req,name=Flag" json:"Flag,omitempty"`
	BaseScore      *int32  `protobuf:"varint,4,req,name=BaseScore" json:"BaseScore,omitempty"`
	EnterTableMode *int32  `protobuf:"varint,5,opt,name=EnterTableMode" json:"EnterTableMode,omitempty"` //排队进入桌子(0:排队入桌， 1:选择桌子入桌)
	IsOffline      *int32  `protobuf:"varint,6,opt,name=IsOffline" json:"IsOffline,omitempty"`           //用户是否断线状态（0：其它状态，1：断线状态，（百人多桌模式，断线状态不需要坐下消息））
}

func (x *RoomInfo) Reset() {
	*x = RoomInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameRoomMsg_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomInfo) ProtoMessage() {}

func (x *RoomInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoomMsg_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomInfo.ProtoReflect.Descriptor instead.
func (*RoomInfo) Descriptor() ([]byte, []int) {
	return file_GameRoomMsg_proto_rawDescGZIP(), []int{5}
}

func (x *RoomInfo) GetGameID() int32 {
	if x != nil && x.GameID != nil {
		return *x.GameID
	}
	return 0
}

func (x *RoomInfo) GetGameName() string {
	if x != nil && x.GameName != nil {
		return *x.GameName
	}
	return ""
}

func (x *RoomInfo) GetFlag() string {
	if x != nil && x.Flag != nil {
		return *x.Flag
	}
	return ""
}

func (x *RoomInfo) GetBaseScore() int32 {
	if x != nil && x.BaseScore != nil {
		return *x.BaseScore
	}
	return 0
}

func (x *RoomInfo) GetEnterTableMode() int32 {
	if x != nil && x.EnterTableMode != nil {
		return *x.EnterTableMode
	}
	return 0
}

func (x *RoomInfo) GetIsOffline() int32 {
	if x != nil && x.IsOffline != nil {
		return *x.IsOffline
	}
	return 0
}

type SlotGetGameProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID *int32 `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`
	GameID *int32 `protobuf:"varint,2,req,name=GameID" json:"GameID,omitempty"`
}

func (x *SlotGetGameProgress) Reset() {
	*x = SlotGetGameProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameRoomMsg_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotGetGameProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotGetGameProgress) ProtoMessage() {}

func (x *SlotGetGameProgress) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoomMsg_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotGetGameProgress.ProtoReflect.Descriptor instead.
func (*SlotGetGameProgress) Descriptor() ([]byte, []int) {
	return file_GameRoomMsg_proto_rawDescGZIP(), []int{6}
}

func (x *SlotGetGameProgress) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *SlotGetGameProgress) GetGameID() int32 {
	if x != nil && x.GameID != nil {
		return *x.GameID
	}
	return 0
}

type SlotGetGameProgressRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   *int32  `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`
	GameID   *int32  `protobuf:"varint,2,req,name=GameID" json:"GameID,omitempty"`
	Version  *int32  `protobuf:"varint,3,req,name=Version" json:"Version,omitempty"` // 单控
	GameData *string `protobuf:"bytes,4,req,name=GameData" json:"GameData,omitempty"`
	Money    *int64  `protobuf:"varint,5,opt,name=Money" json:"Money,omitempty"` // 玩家金币
}

func (x *SlotGetGameProgressRet) Reset() {
	*x = SlotGetGameProgressRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameRoomMsg_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotGetGameProgressRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotGetGameProgressRet) ProtoMessage() {}

func (x *SlotGetGameProgressRet) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoomMsg_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotGetGameProgressRet.ProtoReflect.Descriptor instead.
func (*SlotGetGameProgressRet) Descriptor() ([]byte, []int) {
	return file_GameRoomMsg_proto_rawDescGZIP(), []int{7}
}

func (x *SlotGetGameProgressRet) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *SlotGetGameProgressRet) GetGameID() int32 {
	if x != nil && x.GameID != nil {
		return *x.GameID
	}
	return 0
}

func (x *SlotGetGameProgressRet) GetVersion() int32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *SlotGetGameProgressRet) GetGameData() string {
	if x != nil && x.GameData != nil {
		return *x.GameData
	}
	return ""
}

func (x *SlotGetGameProgressRet) GetMoney() int64 {
	if x != nil && x.Money != nil {
		return *x.Money
	}
	return 0
}

type SlotSaveGameProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID      *int32  `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`           // 玩家ID
	GameID      *int32  `protobuf:"varint,2,req,name=GameID" json:"GameID,omitempty"`           // 游戏ID
	GameStation *int32  `protobuf:"varint,3,req,name=GameStation" json:"GameStation,omitempty"` // 游戏状态 0:正常 1:免费
	Version     *int32  `protobuf:"varint,4,req,name=Version" json:"Version,omitempty"`         // 游戏数据版本号
	GameData    *string `protobuf:"bytes,5,req,name=GameData" json:"GameData,omitempty"`        // 游戏数据
}

func (x *SlotSaveGameProgress) Reset() {
	*x = SlotSaveGameProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameRoomMsg_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotSaveGameProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotSaveGameProgress) ProtoMessage() {}

func (x *SlotSaveGameProgress) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoomMsg_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotSaveGameProgress.ProtoReflect.Descriptor instead.
func (*SlotSaveGameProgress) Descriptor() ([]byte, []int) {
	return file_GameRoomMsg_proto_rawDescGZIP(), []int{8}
}

func (x *SlotSaveGameProgress) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *SlotSaveGameProgress) GetGameID() int32 {
	if x != nil && x.GameID != nil {
		return *x.GameID
	}
	return 0
}

func (x *SlotSaveGameProgress) GetGameStation() int32 {
	if x != nil && x.GameStation != nil {
		return *x.GameStation
	}
	return 0
}

func (x *SlotSaveGameProgress) GetVersion() int32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *SlotSaveGameProgress) GetGameData() string {
	if x != nil && x.GameData != nil {
		return *x.GameData
	}
	return ""
}

type SlotGetJackpot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID    *int32 `protobuf:"varint,1,req,name=GameID" json:"GameID,omitempty"`       // 游戏ID
	PoolCount *int32 `protobuf:"varint,2,req,name=PoolCount" json:"PoolCount,omitempty"` // 彩金池子数量
}

func (x *SlotGetJackpot) Reset() {
	*x = SlotGetJackpot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameRoomMsg_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotGetJackpot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotGetJackpot) ProtoMessage() {}

func (x *SlotGetJackpot) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoomMsg_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotGetJackpot.ProtoReflect.Descriptor instead.
func (*SlotGetJackpot) Descriptor() ([]byte, []int) {
	return file_GameRoomMsg_proto_rawDescGZIP(), []int{9}
}

func (x *SlotGetJackpot) GetGameID() int32 {
	if x != nil && x.GameID != nil {
		return *x.GameID
	}
	return 0
}

func (x *SlotGetJackpot) GetPoolCount() int32 {
	if x != nil && x.PoolCount != nil {
		return *x.PoolCount
	}
	return 0
}

type SlotGetJackpotRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID   *int32  `protobuf:"varint,1,req,name=GameID" json:"GameID,omitempty"`     // 游戏ID
	Jackpots []int64 `protobuf:"varint,2,rep,name=Jackpots" json:"Jackpots,omitempty"` // 彩金值
}

func (x *SlotGetJackpotRet) Reset() {
	*x = SlotGetJackpotRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameRoomMsg_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotGetJackpotRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotGetJackpotRet) ProtoMessage() {}

func (x *SlotGetJackpotRet) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoomMsg_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotGetJackpotRet.ProtoReflect.Descriptor instead.
func (*SlotGetJackpotRet) Descriptor() ([]byte, []int) {
	return file_GameRoomMsg_proto_rawDescGZIP(), []int{10}
}

func (x *SlotGetJackpotRet) GetGameID() int32 {
	if x != nil && x.GameID != nil {
		return *x.GameID
	}
	return 0
}

func (x *SlotGetJackpotRet) GetJackpots() []int64 {
	if x != nil {
		return x.Jackpots
	}
	return nil
}

type SlotUpdateJackpot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID         *int32  `protobuf:"varint,1,req,name=GameID" json:"GameID,omitempty"`                 // 游戏ID
	ChangeJackpots []int64 `protobuf:"varint,2,rep,name=ChangeJackpots" json:"ChangeJackpots,omitempty"` // 增减量
}

func (x *SlotUpdateJackpot) Reset() {
	*x = SlotUpdateJackpot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameRoomMsg_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotUpdateJackpot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotUpdateJackpot) ProtoMessage() {}

func (x *SlotUpdateJackpot) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoomMsg_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotUpdateJackpot.ProtoReflect.Descriptor instead.
func (*SlotUpdateJackpot) Descriptor() ([]byte, []int) {
	return file_GameRoomMsg_proto_rawDescGZIP(), []int{11}
}

func (x *SlotUpdateJackpot) GetGameID() int32 {
	if x != nil && x.GameID != nil {
		return *x.GameID
	}
	return 0
}

func (x *SlotUpdateJackpot) GetChangeJackpots() []int64 {
	if x != nil {
		return x.ChangeJackpots
	}
	return nil
}

//用户坐下
type UserSitByTableNo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableNo *int32 `protobuf:"varint,1,req,name=TableNo" json:"TableNo,omitempty"` //桌子ID
}

func (x *UserSitByTableNo) Reset() {
	*x = UserSitByTableNo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameRoomMsg_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSitByTableNo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSitByTableNo) ProtoMessage() {}

func (x *UserSitByTableNo) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoomMsg_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSitByTableNo.ProtoReflect.Descriptor instead.
func (*UserSitByTableNo) Descriptor() ([]byte, []int) {
	return file_GameRoomMsg_proto_rawDescGZIP(), []int{12}
}

func (x *UserSitByTableNo) GetTableNo() int32 {
	if x != nil && x.TableNo != nil {
		return *x.TableNo
	}
	return 0
}

//房间桌子模式
type RoomTableInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnterTableMode *int32 `protobuf:"varint,1,req,name=EnterTableMode" json:"EnterTableMode,omitempty"` //进入桌子模式(0:自动排队入桌， 1:选择桌子入桌)
	Flag           *int32 `protobuf:"varint,2,req,name=Flag" json:"Flag,omitempty"`                     //消息标识 （0登录，1离开桌子）
}

func (x *RoomTableInfo) Reset() {
	*x = RoomTableInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameRoomMsg_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomTableInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomTableInfo) ProtoMessage() {}

func (x *RoomTableInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoomMsg_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomTableInfo.ProtoReflect.Descriptor instead.
func (*RoomTableInfo) Descriptor() ([]byte, []int) {
	return file_GameRoomMsg_proto_rawDescGZIP(), []int{13}
}

func (x *RoomTableInfo) GetEnterTableMode() int32 {
	if x != nil && x.EnterTableMode != nil {
		return *x.EnterTableMode
	}
	return 0
}

func (x *RoomTableInfo) GetFlag() int32 {
	if x != nil && x.Flag != nil {
		return *x.Flag
	}
	return 0
}

//离开桌子
type LeaveTableRetMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    *int32  `protobuf:"varint,1,req,name=Code" json:"Code,omitempty"`      // -1离开失败， 其它用户ID
	Message *string `protobuf:"bytes,2,req,name=Message" json:"Message,omitempty"` //消息提示内容
}

func (x *LeaveTableRetMsg) Reset() {
	*x = LeaveTableRetMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameRoomMsg_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveTableRetMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveTableRetMsg) ProtoMessage() {}

func (x *LeaveTableRetMsg) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoomMsg_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveTableRetMsg.ProtoReflect.Descriptor instead.
func (*LeaveTableRetMsg) Descriptor() ([]byte, []int) {
	return file_GameRoomMsg_proto_rawDescGZIP(), []int{14}
}

func (x *LeaveTableRetMsg) GetCode() int32 {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return 0
}

func (x *LeaveTableRetMsg) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

type SlotGetJackpotGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID    *int32 `protobuf:"varint,1,req,name=GameID" json:"GameID,omitempty"`       // 游戏ID
	PoolCount *int32 `protobuf:"varint,2,req,name=PoolCount" json:"PoolCount,omitempty"` // 彩金池子数量
	GroupID   *int32 `protobuf:"varint,3,req,name=GroupID" json:"GroupID,omitempty"`     // 联运ID
}

func (x *SlotGetJackpotGroup) Reset() {
	*x = SlotGetJackpotGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameRoomMsg_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotGetJackpotGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotGetJackpotGroup) ProtoMessage() {}

func (x *SlotGetJackpotGroup) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoomMsg_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotGetJackpotGroup.ProtoReflect.Descriptor instead.
func (*SlotGetJackpotGroup) Descriptor() ([]byte, []int) {
	return file_GameRoomMsg_proto_rawDescGZIP(), []int{15}
}

func (x *SlotGetJackpotGroup) GetGameID() int32 {
	if x != nil && x.GameID != nil {
		return *x.GameID
	}
	return 0
}

func (x *SlotGetJackpotGroup) GetPoolCount() int32 {
	if x != nil && x.PoolCount != nil {
		return *x.PoolCount
	}
	return 0
}

func (x *SlotGetJackpotGroup) GetGroupID() int32 {
	if x != nil && x.GroupID != nil {
		return *x.GroupID
	}
	return 0
}

type SlotGetJackpotGroupRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID   *int32  `protobuf:"varint,1,req,name=GameID" json:"GameID,omitempty"`     // 游戏ID
	Jackpots []int64 `protobuf:"varint,2,rep,name=Jackpots" json:"Jackpots,omitempty"` // 彩金值
	GroupID  *int32  `protobuf:"varint,3,req,name=GroupID" json:"GroupID,omitempty"`   // 联运ID
}

func (x *SlotGetJackpotGroupRet) Reset() {
	*x = SlotGetJackpotGroupRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameRoomMsg_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotGetJackpotGroupRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotGetJackpotGroupRet) ProtoMessage() {}

func (x *SlotGetJackpotGroupRet) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoomMsg_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotGetJackpotGroupRet.ProtoReflect.Descriptor instead.
func (*SlotGetJackpotGroupRet) Descriptor() ([]byte, []int) {
	return file_GameRoomMsg_proto_rawDescGZIP(), []int{16}
}

func (x *SlotGetJackpotGroupRet) GetGameID() int32 {
	if x != nil && x.GameID != nil {
		return *x.GameID
	}
	return 0
}

func (x *SlotGetJackpotGroupRet) GetJackpots() []int64 {
	if x != nil {
		return x.Jackpots
	}
	return nil
}

func (x *SlotGetJackpotGroupRet) GetGroupID() int32 {
	if x != nil && x.GroupID != nil {
		return *x.GroupID
	}
	return 0
}

type SlotUpdateJackpotGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID         *int32  `protobuf:"varint,1,req,name=GameID" json:"GameID,omitempty"`                 // 游戏ID
	ChangeJackpots []int64 `protobuf:"varint,2,rep,name=ChangeJackpots" json:"ChangeJackpots,omitempty"` // 增减量
	GroupID        *int32  `protobuf:"varint,3,req,name=GroupID" json:"GroupID,omitempty"`               // 联运ID
}

func (x *SlotUpdateJackpotGroup) Reset() {
	*x = SlotUpdateJackpotGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameRoomMsg_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotUpdateJackpotGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotUpdateJackpotGroup) ProtoMessage() {}

func (x *SlotUpdateJackpotGroup) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoomMsg_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotUpdateJackpotGroup.ProtoReflect.Descriptor instead.
func (*SlotUpdateJackpotGroup) Descriptor() ([]byte, []int) {
	return file_GameRoomMsg_proto_rawDescGZIP(), []int{17}
}

func (x *SlotUpdateJackpotGroup) GetGameID() int32 {
	if x != nil && x.GameID != nil {
		return *x.GameID
	}
	return 0
}

func (x *SlotUpdateJackpotGroup) GetChangeJackpots() []int64 {
	if x != nil {
		return x.ChangeJackpots
	}
	return nil
}

func (x *SlotUpdateJackpotGroup) GetGroupID() int32 {
	if x != nil && x.GroupID != nil {
		return *x.GroupID
	}
	return 0
}

type SendUserVipBrowReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID  *int32 `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`   //发送玩家ID
	BrowID  *int32 `protobuf:"varint,2,req,name=BrowID" json:"BrowID,omitempty"`   //表情ID
	TUserID *int32 `protobuf:"varint,3,req,name=TUserID" json:"TUserID,omitempty"` //目标玩家ID
}

func (x *SendUserVipBrowReq) Reset() {
	*x = SendUserVipBrowReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameRoomMsg_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendUserVipBrowReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendUserVipBrowReq) ProtoMessage() {}

func (x *SendUserVipBrowReq) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoomMsg_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendUserVipBrowReq.ProtoReflect.Descriptor instead.
func (*SendUserVipBrowReq) Descriptor() ([]byte, []int) {
	return file_GameRoomMsg_proto_rawDescGZIP(), []int{18}
}

func (x *SendUserVipBrowReq) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *SendUserVipBrowReq) GetBrowID() int32 {
	if x != nil && x.BrowID != nil {
		return *x.BrowID
	}
	return 0
}

func (x *SendUserVipBrowReq) GetTUserID() int32 {
	if x != nil && x.TUserID != nil {
		return *x.TUserID
	}
	return 0
}

type SendUserVipBrowRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID  *int32 `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`   //发送玩家ID
	BrowID  *int32 `protobuf:"varint,2,req,name=BrowID" json:"BrowID,omitempty"`   //表情ID
	ErrCode *int32 `protobuf:"varint,3,req,name=ErrCode" json:"ErrCode,omitempty"` //错误码 1-成功 2-间隔太短 3-桌子已解散 4-目标玩家已不在该房间内
	TUserID *int32 `protobuf:"varint,4,req,name=TUserID" json:"TUserID,omitempty"` //目标玩家ID
}

func (x *SendUserVipBrowRet) Reset() {
	*x = SendUserVipBrowRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameRoomMsg_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendUserVipBrowRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendUserVipBrowRet) ProtoMessage() {}

func (x *SendUserVipBrowRet) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoomMsg_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendUserVipBrowRet.ProtoReflect.Descriptor instead.
func (*SendUserVipBrowRet) Descriptor() ([]byte, []int) {
	return file_GameRoomMsg_proto_rawDescGZIP(), []int{19}
}

func (x *SendUserVipBrowRet) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *SendUserVipBrowRet) GetBrowID() int32 {
	if x != nil && x.BrowID != nil {
		return *x.BrowID
	}
	return 0
}

func (x *SendUserVipBrowRet) GetErrCode() int32 {
	if x != nil && x.ErrCode != nil {
		return *x.ErrCode
	}
	return 0
}

func (x *SendUserVipBrowRet) GetTUserID() int32 {
	if x != nil && x.TUserID != nil {
		return *x.TUserID
	}
	return 0
}

type BroadcastUserVipBrow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID  *int32 `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`   //发送玩家ID
	BrowID  *int32 `protobuf:"varint,2,req,name=BrowID" json:"BrowID,omitempty"`   //表情ID
	TUserID *int32 `protobuf:"varint,3,req,name=TUserID" json:"TUserID,omitempty"` //目标玩家ID
}

func (x *BroadcastUserVipBrow) Reset() {
	*x = BroadcastUserVipBrow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameRoomMsg_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadcastUserVipBrow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastUserVipBrow) ProtoMessage() {}

func (x *BroadcastUserVipBrow) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoomMsg_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastUserVipBrow.ProtoReflect.Descriptor instead.
func (*BroadcastUserVipBrow) Descriptor() ([]byte, []int) {
	return file_GameRoomMsg_proto_rawDescGZIP(), []int{20}
}

func (x *BroadcastUserVipBrow) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *BroadcastUserVipBrow) GetBrowID() int32 {
	if x != nil && x.BrowID != nil {
		return *x.BrowID
	}
	return 0
}

func (x *BroadcastUserVipBrow) GetTUserID() int32 {
	if x != nil && x.TUserID != nil {
		return *x.TUserID
	}
	return 0
}

//增加玩家任务游戏行为
type AddUserTaskGameEventReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   *int32 `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`     //发送玩家ID
	GameID   *int32 `protobuf:"varint,2,req,name=GameID" json:"GameID,omitempty"`     //游戏服务器ID
	GameType *int32 `protobuf:"varint,3,req,name=GameType" json:"GameType,omitempty"` //游戏房间类型
	EventID  *int32 `protobuf:"varint,4,req,name=EventID" json:"EventID,omitempty"`   //游戏行为ID
	AddValue *int32 `protobuf:"varint,5,req,name=AddValue" json:"AddValue,omitempty"` //增加的游戏行为数值
}

func (x *AddUserTaskGameEventReq) Reset() {
	*x = AddUserTaskGameEventReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameRoomMsg_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserTaskGameEventReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserTaskGameEventReq) ProtoMessage() {}

func (x *AddUserTaskGameEventReq) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoomMsg_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserTaskGameEventReq.ProtoReflect.Descriptor instead.
func (*AddUserTaskGameEventReq) Descriptor() ([]byte, []int) {
	return file_GameRoomMsg_proto_rawDescGZIP(), []int{21}
}

func (x *AddUserTaskGameEventReq) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *AddUserTaskGameEventReq) GetGameID() int32 {
	if x != nil && x.GameID != nil {
		return *x.GameID
	}
	return 0
}

func (x *AddUserTaskGameEventReq) GetGameType() int32 {
	if x != nil && x.GameType != nil {
		return *x.GameType
	}
	return 0
}

func (x *AddUserTaskGameEventReq) GetEventID() int32 {
	if x != nil && x.EventID != nil {
		return *x.EventID
	}
	return 0
}

func (x *AddUserTaskGameEventReq) GetAddValue() int32 {
	if x != nil && x.AddValue != nil {
		return *x.AddValue
	}
	return 0
}

/////////////////////////////////
//用户单控数据
type UserSingleControlReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   *int32 `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`     //玩家ID
	ServerID *int32 `protobuf:"varint,2,req,name=ServerID" json:"ServerID,omitempty"` //服务器ID
}

func (x *UserSingleControlReq) Reset() {
	*x = UserSingleControlReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameRoomMsg_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSingleControlReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSingleControlReq) ProtoMessage() {}

func (x *UserSingleControlReq) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoomMsg_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSingleControlReq.ProtoReflect.Descriptor instead.
func (*UserSingleControlReq) Descriptor() ([]byte, []int) {
	return file_GameRoomMsg_proto_rawDescGZIP(), []int{22}
}

func (x *UserSingleControlReq) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *UserSingleControlReq) GetServerID() int32 {
	if x != nil && x.ServerID != nil {
		return *x.ServerID
	}
	return 0
}

//用户单控数据返回
type UserSingleControlRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       *int32 `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`             //玩家ID
	GameWin      *int64 `protobuf:"varint,2,req,name=GameWin" json:"GameWin,omitempty"`           //游戏输赢
	ControlMoney *int64 `protobuf:"varint,3,req,name=ControlMoney" json:"ControlMoney,omitempty"` //控制金额（正数：赢，负数：输）
	ControlLevel *int32 `protobuf:"varint,4,req,name=ControlLevel" json:"ControlLevel,omitempty"` //控制概率（正常概率为：0-100）
}

func (x *UserSingleControlRes) Reset() {
	*x = UserSingleControlRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameRoomMsg_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSingleControlRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSingleControlRes) ProtoMessage() {}

func (x *UserSingleControlRes) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoomMsg_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSingleControlRes.ProtoReflect.Descriptor instead.
func (*UserSingleControlRes) Descriptor() ([]byte, []int) {
	return file_GameRoomMsg_proto_rawDescGZIP(), []int{23}
}

func (x *UserSingleControlRes) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *UserSingleControlRes) GetGameWin() int64 {
	if x != nil && x.GameWin != nil {
		return *x.GameWin
	}
	return 0
}

func (x *UserSingleControlRes) GetControlMoney() int64 {
	if x != nil && x.ControlMoney != nil {
		return *x.ControlMoney
	}
	return 0
}

func (x *UserSingleControlRes) GetControlLevel() int32 {
	if x != nil && x.ControlLevel != nil {
		return *x.ControlLevel
	}
	return 0
}

///////////////////////////////////
//用户个人水池数据请求(各遊戲通用)
type GetUserSinglePoolReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID    *int32 `protobuf:"varint,1,req,name=GameID" json:"GameID,omitempty"`       //游戏ID
	UserID    *int32 `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`       //玩家ID
	LianyunID *int32 `protobuf:"varint,3,req,name=LianyunID" json:"LianyunID,omitempty"` //联运ID
}

func (x *GetUserSinglePoolReq) Reset() {
	*x = GetUserSinglePoolReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameRoomMsg_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSinglePoolReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSinglePoolReq) ProtoMessage() {}

func (x *GetUserSinglePoolReq) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoomMsg_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSinglePoolReq.ProtoReflect.Descriptor instead.
func (*GetUserSinglePoolReq) Descriptor() ([]byte, []int) {
	return file_GameRoomMsg_proto_rawDescGZIP(), []int{24}
}

func (x *GetUserSinglePoolReq) GetGameID() int32 {
	if x != nil && x.GameID != nil {
		return *x.GameID
	}
	return 0
}

func (x *GetUserSinglePoolReq) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *GetUserSinglePoolReq) GetLianyunID() int32 {
	if x != nil && x.LianyunID != nil {
		return *x.LianyunID
	}
	return 0
}

//用户个人水池数据更新(各遊戲通用)
type UpdateUserSinglePoolReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID          *int32 `protobuf:"varint,1,req,name=GameID" json:"GameID,omitempty"`                   //游戏ID
	UserID          *int32 `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`                   //玩家ID
	ChangePoolValue *int64 `protobuf:"varint,3,req,name=ChangePoolValue" json:"ChangePoolValue,omitempty"` //变化水池量
	LineNum         *int32 `protobuf:"varint,4,req,name=LineNum" json:"LineNum,omitempty"`                 //水位线
	RTP             *int32 `protobuf:"varint,5,req,name=RTP" json:"RTP,omitempty"`                         //RTP(萬分比)
	LianyunID       *int32 `protobuf:"varint,6,req,name=LianyunID" json:"LianyunID,omitempty"`             //联运ID
}

func (x *UpdateUserSinglePoolReq) Reset() {
	*x = UpdateUserSinglePoolReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameRoomMsg_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserSinglePoolReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserSinglePoolReq) ProtoMessage() {}

func (x *UpdateUserSinglePoolReq) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoomMsg_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserSinglePoolReq.ProtoReflect.Descriptor instead.
func (*UpdateUserSinglePoolReq) Descriptor() ([]byte, []int) {
	return file_GameRoomMsg_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateUserSinglePoolReq) GetGameID() int32 {
	if x != nil && x.GameID != nil {
		return *x.GameID
	}
	return 0
}

func (x *UpdateUserSinglePoolReq) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *UpdateUserSinglePoolReq) GetChangePoolValue() int64 {
	if x != nil && x.ChangePoolValue != nil {
		return *x.ChangePoolValue
	}
	return 0
}

func (x *UpdateUserSinglePoolReq) GetLineNum() int32 {
	if x != nil && x.LineNum != nil {
		return *x.LineNum
	}
	return 0
}

func (x *UpdateUserSinglePoolReq) GetRTP() int32 {
	if x != nil && x.RTP != nil {
		return *x.RTP
	}
	return 0
}

func (x *UpdateUserSinglePoolReq) GetLianyunID() int32 {
	if x != nil && x.LianyunID != nil {
		return *x.LianyunID
	}
	return 0
}

//用户水池数据返回(各遊戲通用)
type UserSinglePoolRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess *bool  `protobuf:"varint,1,req,name=IsSuccess" json:"IsSuccess,omitempty"` //是否成功
	GameID    *int32 `protobuf:"varint,2,req,name=GameID" json:"GameID,omitempty"`       //游戏ID
	UserID    *int32 `protobuf:"varint,3,req,name=UserID" json:"UserID,omitempty"`       //玩家ID
	PoolValue *int64 `protobuf:"varint,4,req,name=PoolValue" json:"PoolValue,omitempty"` //水池量
	LineNum   *int32 `protobuf:"varint,5,req,name=LineNum" json:"LineNum,omitempty"`     //水位线
	RTP       *int32 `protobuf:"varint,6,req,name=RTP" json:"RTP,omitempty"`             //RTP(萬分比)
	LianyunID *int32 `protobuf:"varint,7,req,name=LianyunID" json:"LianyunID,omitempty"` //联运ID
}

func (x *UserSinglePoolRes) Reset() {
	*x = UserSinglePoolRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameRoomMsg_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSinglePoolRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSinglePoolRes) ProtoMessage() {}

func (x *UserSinglePoolRes) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoomMsg_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSinglePoolRes.ProtoReflect.Descriptor instead.
func (*UserSinglePoolRes) Descriptor() ([]byte, []int) {
	return file_GameRoomMsg_proto_rawDescGZIP(), []int{26}
}

func (x *UserSinglePoolRes) GetIsSuccess() bool {
	if x != nil && x.IsSuccess != nil {
		return *x.IsSuccess
	}
	return false
}

func (x *UserSinglePoolRes) GetGameID() int32 {
	if x != nil && x.GameID != nil {
		return *x.GameID
	}
	return 0
}

func (x *UserSinglePoolRes) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *UserSinglePoolRes) GetPoolValue() int64 {
	if x != nil && x.PoolValue != nil {
		return *x.PoolValue
	}
	return 0
}

func (x *UserSinglePoolRes) GetLineNum() int32 {
	if x != nil && x.LineNum != nil {
		return *x.LineNum
	}
	return 0
}

func (x *UserSinglePoolRes) GetRTP() int32 {
	if x != nil && x.RTP != nil {
		return *x.RTP
	}
	return 0
}

func (x *UserSinglePoolRes) GetLianyunID() int32 {
	if x != nil && x.LianyunID != nil {
		return *x.LianyunID
	}
	return 0
}

type ReelsControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID       *int32  `protobuf:"varint,1,req,name=ID" json:"ID,omitempty"`
	Rtprange *string `protobuf:"bytes,2,req,name=Rtprange" json:"Rtprange,omitempty"`
	Checksym *int64  `protobuf:"varint,3,req,name=Checksym" json:"Checksym,omitempty"`
	Rtpreel  *int64  `protobuf:"varint,4,req,name=Rtpreel" json:"Rtpreel,omitempty"`
	IsCtrl   *int64  `protobuf:"varint,5,req,name=IsCtrl" json:"IsCtrl,omitempty"`
}

func (x *ReelsControl) Reset() {
	*x = ReelsControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameRoomMsg_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReelsControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReelsControl) ProtoMessage() {}

func (x *ReelsControl) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoomMsg_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReelsControl.ProtoReflect.Descriptor instead.
func (*ReelsControl) Descriptor() ([]byte, []int) {
	return file_GameRoomMsg_proto_rawDescGZIP(), []int{27}
}

func (x *ReelsControl) GetID() int32 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *ReelsControl) GetRtprange() string {
	if x != nil && x.Rtprange != nil {
		return *x.Rtprange
	}
	return ""
}

func (x *ReelsControl) GetChecksym() int64 {
	if x != nil && x.Checksym != nil {
		return *x.Checksym
	}
	return 0
}

func (x *ReelsControl) GetRtpreel() int64 {
	if x != nil && x.Rtpreel != nil {
		return *x.Rtpreel
	}
	return 0
}

func (x *ReelsControl) GetIsCtrl() int64 {
	if x != nil && x.IsCtrl != nil {
		return *x.IsCtrl
	}
	return 0
}

type ReelsControlInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReelsData []*ReelsControl `protobuf:"bytes,1,rep,name=ReelsData" json:"ReelsData,omitempty"`
}

func (x *ReelsControlInfo) Reset() {
	*x = ReelsControlInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameRoomMsg_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReelsControlInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReelsControlInfo) ProtoMessage() {}

func (x *ReelsControlInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoomMsg_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReelsControlInfo.ProtoReflect.Descriptor instead.
func (*ReelsControlInfo) Descriptor() ([]byte, []int) {
	return file_GameRoomMsg_proto_rawDescGZIP(), []int{28}
}

func (x *ReelsControlInfo) GetReelsData() []*ReelsControl {
	if x != nil {
		return x.ReelsData
	}
	return nil
}

type UserReelsControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    *int64 `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`
	IsControl *int64 `protobuf:"varint,2,req,name=IsControl" json:"IsControl,omitempty"`
}

func (x *UserReelsControl) Reset() {
	*x = UserReelsControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameRoomMsg_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserReelsControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserReelsControl) ProtoMessage() {}

func (x *UserReelsControl) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoomMsg_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserReelsControl.ProtoReflect.Descriptor instead.
func (*UserReelsControl) Descriptor() ([]byte, []int) {
	return file_GameRoomMsg_proto_rawDescGZIP(), []int{29}
}

func (x *UserReelsControl) GetUserID() int64 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *UserReelsControl) GetIsControl() int64 {
	if x != nil && x.IsControl != nil {
		return *x.IsControl
	}
	return 0
}

type UserReelsControlInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserReelsData []*UserReelsControl `protobuf:"bytes,1,rep,name=UserReelsData" json:"UserReelsData,omitempty"`
}

func (x *UserReelsControlInfo) Reset() {
	*x = UserReelsControlInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameRoomMsg_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserReelsControlInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserReelsControlInfo) ProtoMessage() {}

func (x *UserReelsControlInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoomMsg_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserReelsControlInfo.ProtoReflect.Descriptor instead.
func (*UserReelsControlInfo) Descriptor() ([]byte, []int) {
	return file_GameRoomMsg_proto_rawDescGZIP(), []int{30}
}

func (x *UserReelsControlInfo) GetUserReelsData() []*UserReelsControl {
	if x != nil {
		return x.UserReelsData
	}
	return nil
}

type GameRoomEmoji struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromUserId *int32  `protobuf:"varint,1,req,name=FromUserId" json:"FromUserId,omitempty"`
	ToUserId   *int32  `protobuf:"varint,2,req,name=ToUserId" json:"ToUserId,omitempty"`
	EmojiCode  *string `protobuf:"bytes,3,req,name=EmojiCode" json:"EmojiCode,omitempty"`
}

func (x *GameRoomEmoji) Reset() {
	*x = GameRoomEmoji{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameRoomMsg_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameRoomEmoji) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameRoomEmoji) ProtoMessage() {}

func (x *GameRoomEmoji) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoomMsg_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameRoomEmoji.ProtoReflect.Descriptor instead.
func (*GameRoomEmoji) Descriptor() ([]byte, []int) {
	return file_GameRoomMsg_proto_rawDescGZIP(), []int{31}
}

func (x *GameRoomEmoji) GetFromUserId() int32 {
	if x != nil && x.FromUserId != nil {
		return *x.FromUserId
	}
	return 0
}

func (x *GameRoomEmoji) GetToUserId() int32 {
	if x != nil && x.ToUserId != nil {
		return *x.ToUserId
	}
	return 0
}

func (x *GameRoomEmoji) GetEmojiCode() string {
	if x != nil && x.EmojiCode != nil {
		return *x.EmojiCode
	}
	return ""
}

type GameRoomEmojiRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromUserId *int32  `protobuf:"varint,1,req,name=FromUserId" json:"FromUserId,omitempty"`
	ToUserId   *int32  `protobuf:"varint,2,req,name=ToUserId" json:"ToUserId,omitempty"`
	EmojiCode  *string `protobuf:"bytes,3,req,name=EmojiCode" json:"EmojiCode,omitempty"`
	ErrorCode  *int32  `protobuf:"varint,4,req,name=ErrorCode" json:"ErrorCode,omitempty"` //0 成功 1 發送區隔過短 2 自身玩家ID錯誤 3 目標玩家不存在 4 玩家還沒坐下
}

func (x *GameRoomEmojiRet) Reset() {
	*x = GameRoomEmojiRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameRoomMsg_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameRoomEmojiRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameRoomEmojiRet) ProtoMessage() {}

func (x *GameRoomEmojiRet) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoomMsg_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameRoomEmojiRet.ProtoReflect.Descriptor instead.
func (*GameRoomEmojiRet) Descriptor() ([]byte, []int) {
	return file_GameRoomMsg_proto_rawDescGZIP(), []int{32}
}

func (x *GameRoomEmojiRet) GetFromUserId() int32 {
	if x != nil && x.FromUserId != nil {
		return *x.FromUserId
	}
	return 0
}

func (x *GameRoomEmojiRet) GetToUserId() int32 {
	if x != nil && x.ToUserId != nil {
		return *x.ToUserId
	}
	return 0
}

func (x *GameRoomEmojiRet) GetEmojiCode() string {
	if x != nil && x.EmojiCode != nil {
		return *x.EmojiCode
	}
	return ""
}

func (x *GameRoomEmojiRet) GetErrorCode() int32 {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return 0
}

type DzpkChoiceSeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatNo *int32 `protobuf:"varint,1,req,name=SeatNo" json:"SeatNo,omitempty"`
}

func (x *DzpkChoiceSeat) Reset() {
	*x = DzpkChoiceSeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameRoomMsg_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DzpkChoiceSeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DzpkChoiceSeat) ProtoMessage() {}

func (x *DzpkChoiceSeat) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoomMsg_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DzpkChoiceSeat.ProtoReflect.Descriptor instead.
func (*DzpkChoiceSeat) Descriptor() ([]byte, []int) {
	return file_GameRoomMsg_proto_rawDescGZIP(), []int{33}
}

func (x *DzpkChoiceSeat) GetSeatNo() int32 {
	if x != nil && x.SeatNo != nil {
		return *x.SeatNo
	}
	return 0
}

type DzpkChoiceSeatRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   *int32 `protobuf:"varint,1,req,name=Code" json:"Code,omitempty"`
	SeatNo *int32 `protobuf:"varint,2,req,name=SeatNo" json:"SeatNo,omitempty"`
}

func (x *DzpkChoiceSeatRet) Reset() {
	*x = DzpkChoiceSeatRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameRoomMsg_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DzpkChoiceSeatRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DzpkChoiceSeatRet) ProtoMessage() {}

func (x *DzpkChoiceSeatRet) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoomMsg_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DzpkChoiceSeatRet.ProtoReflect.Descriptor instead.
func (*DzpkChoiceSeatRet) Descriptor() ([]byte, []int) {
	return file_GameRoomMsg_proto_rawDescGZIP(), []int{34}
}

func (x *DzpkChoiceSeatRet) GetCode() int32 {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return 0
}

func (x *DzpkChoiceSeatRet) GetSeatNo() int32 {
	if x != nil && x.SeatNo != nil {
		return *x.SeatNo
	}
	return 0
}

type DzpkDzpkBuyChip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChipAmount *int64 `protobuf:"varint,1,req,name=ChipAmount" json:"ChipAmount,omitempty"`
}

func (x *DzpkDzpkBuyChip) Reset() {
	*x = DzpkDzpkBuyChip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameRoomMsg_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DzpkDzpkBuyChip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DzpkDzpkBuyChip) ProtoMessage() {}

func (x *DzpkDzpkBuyChip) ProtoReflect() protoreflect.Message {
	mi := &file_GameRoomMsg_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DzpkDzpkBuyChip.ProtoReflect.Descriptor instead.
func (*DzpkDzpkBuyChip) Descriptor() ([]byte, []int) {
	return file_GameRoomMsg_proto_rawDescGZIP(), []int{35}
}

func (x *DzpkDzpkBuyChip) GetChipAmount() int64 {
	if x != nil && x.ChipAmount != nil {
		return *x.ChipAmount
	}
	return 0
}

var File_GameRoomMsg_proto protoreflect.FileDescriptor

var file_GameRoomMsg_proto_rawDesc = []byte{
	0x0a, 0x11, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x73, 0x67, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6d, 0x0a,
	0x11, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x43, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x03, 0x43, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x48, 0x44, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x48, 0x44,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x44, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x48, 0x44, 0x54, 0x79, 0x70, 0x65, 0x22, 0x8c, 0x02, 0x0a,
	0x10, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x47, 0x0a, 0x10, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x65, 0x74, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x6f,
	0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x37, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x65, 0x74,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x6f,
	0x67, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x4c, 0x47, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x4c, 0x47, 0x22, 0xb7, 0x09, 0x0a, 0x11,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x6f, 0x67, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x61, 0x63, 0x65, 0x49, 0x44, 0x18, 0x04, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x06, 0x46, 0x61, 0x63, 0x65, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x65, 0x78,
	0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x53, 0x65, 0x78, 0x12, 0x1e, 0x0a, 0x0a, 0x43,
	0x61, 0x73, 0x68, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x02, 0x28, 0x03, 0x52,
	0x0a, 0x43, 0x61, 0x73, 0x68, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x57,
	0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x57,
	0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x73, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x4c, 0x6f, 0x73, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x09, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x44, 0x72, 0x61, 0x77, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x42, 0x75, 0x66, 0x66, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x42, 0x75, 0x66, 0x66, 0x12,
	0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x58, 0x69, 0x75, 0x58, 0x69, 0x61, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x58, 0x69, 0x75, 0x58, 0x69, 0x61, 0x6e, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x49, 0x73, 0x53, 0x75, 0x70, 0x65,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x63, 0x65, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x54, 0x72, 0x61,
	0x63, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x6f, 0x64,
	0x61, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x44, 0x61, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x44, 0x61, 0x6e, 0x12,
	0x20, 0x0a, 0x0b, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x69, 0x6e, 0x44, 0x61, 0x6e, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x69, 0x6e, 0x44, 0x61,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x44, 0x61, 0x6e, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x44, 0x61, 0x6e, 0x12,
	0x1e, 0x0a, 0x0a, 0x57, 0x69, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x44, 0x61, 0x6e, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x57, 0x69, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x44, 0x61, 0x6e, 0x12,
	0x20, 0x0a, 0x0b, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x61, 0x6e, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x61,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x4e, 0x65, 0x77, 0x42, 0x65, 0x65, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x4e, 0x65, 0x77, 0x42, 0x65, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x49, 0x73, 0x4e, 0x65, 0x77, 0x62, 0x69, 0x65, 0x50, 0x72, 0x6f, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x49, 0x73, 0x4e, 0x65, 0x77, 0x62, 0x69, 0x65, 0x50, 0x72, 0x6f, 0x12,
	0x20, 0x0a, 0x0b, 0x4e, 0x65, 0x78, 0x74, 0x57, 0x69, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x4e, 0x65, 0x78, 0x74, 0x57, 0x69, 0x6e, 0x52, 0x61, 0x74,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x4e, 0x65, 0x78, 0x74, 0x57, 0x69, 0x6e, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x4e, 0x65, 0x78, 0x74, 0x57, 0x69, 0x6e,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x65, 0x78, 0x74, 0x41, 0x64, 0x64,
	0x52, 0x61, 0x74, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x4e, 0x65, 0x78, 0x74,
	0x41, 0x64, 0x64, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x69, 0x66, 0x66, 0x52,
	0x75, 0x6e, 0x41, 0x63, 0x63, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x44, 0x69, 0x66,
	0x66, 0x52, 0x75, 0x6e, 0x41, 0x63, 0x63, 0x12, 0x22, 0x0a, 0x0c, 0x57, 0x69, 0x6e, 0x4c, 0x6f,
	0x73, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x57,
	0x69, 0x6e, 0x4c, 0x6f, 0x73, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x57, 0x69, 0x6e, 0x4c, 0x6f, 0x73, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x69, 0x6e, 0x4c, 0x6f, 0x73, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x18, 0x1d,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x65, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x42, 0x65, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x42, 0x61, 0x6e, 0x6b, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x42, 0x61, 0x6e, 0x6b, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x43,
	0x75, 0x72, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x6f, 0x73, 0x65, 0x57, 0x69, 0x6e, 0x18, 0x20,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x43, 0x75, 0x72, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x6f,
	0x73, 0x65, 0x57, 0x69, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x46, 0x69, 0x72, 0x73, 0x74, 0x47, 0x61,
	0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x21, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x12, 0x46, 0x69, 0x72, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x61, 0x79, 0x52, 0x65, 0x63, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x44, 0x61, 0x79, 0x52,
	0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x24, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x44, 0x65, 0x6e, 0x6f, 0x6d,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x72, 0x65, 0x65, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x25, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x46, 0x72, 0x65, 0x65,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x3b, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x07, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65,
	0x61, 0x74, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x53, 0x65, 0x61, 0x74,
	0x4e, 0x6f, 0x22, 0x55, 0x0a, 0x0b, 0x47, 0x61, 0x6d, 0x65, 0x56, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0e, 0x41, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x4f, 0x53,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x49,
	0x4f, 0x53, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xb6, 0x01, 0x0a, 0x08, 0x52, 0x6f,
	0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x6c,
	0x61, 0x67, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1c,
	0x0a, 0x09, 0x42, 0x61, 0x73, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x09, 0x42, 0x61, 0x73, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x45, 0x6e, 0x74, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x49, 0x73, 0x4f, 0x66, 0x66, 0x6c, 0x69,
	0x6e, 0x65, 0x22, 0x45, 0x0a, 0x13, 0x53, 0x6c, 0x6f, 0x74, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d,
	0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x22, 0x94, 0x01, 0x0a, 0x16, 0x53, 0x6c,
	0x6f, 0x74, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x47, 0x61,
	0x6d, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x6f,
	0x6e, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79,
	0x22, 0x9e, 0x01, 0x0a, 0x14, 0x53, 0x6c, 0x6f, 0x74, 0x53, 0x61, 0x76, 0x65, 0x47, 0x61, 0x6d,
	0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x47, 0x61, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0b,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x05, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x22, 0x46, 0x0a, 0x0e, 0x53, 0x6c, 0x6f, 0x74, 0x47, 0x65, 0x74, 0x4a, 0x61, 0x63, 0x6b,
	0x70, 0x6f, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x50,
	0x6f, 0x6f, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09,
	0x50, 0x6f, 0x6f, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x47, 0x0a, 0x11, 0x53, 0x6c, 0x6f,
	0x74, 0x47, 0x65, 0x74, 0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x52, 0x65, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06,
	0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f,
	0x74, 0x73, 0x22, 0x53, 0x0a, 0x11, 0x53, 0x6c, 0x6f, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x12,
	0x26, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4a,
	0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x73, 0x22, 0x2c, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x69, 0x74, 0x42, 0x79, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x22, 0x4b, 0x0a, 0x0d, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0e,
	0x45, 0x6e, 0x74, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x46, 0x6c,
	0x61, 0x67, 0x22, 0x40, 0x0a, 0x10, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x65, 0x0a, 0x13, 0x53, 0x6c, 0x6f, 0x74, 0x47, 0x65, 0x74, 0x4a,
	0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x47,
	0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x47, 0x61, 0x6d,
	0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x6f, 0x6f, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x50, 0x6f, 0x6f, 0x6c, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x22, 0x66, 0x0a, 0x16, 0x53,
	0x6c, 0x6f, 0x74, 0x47, 0x65, 0x74, 0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x08, 0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x44, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x44, 0x22, 0x72, 0x0a, 0x16, 0x53, 0x6c, 0x6f, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x16, 0x0a,
	0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x47,
	0x61, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4a,
	0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x22, 0x5e, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x56, 0x69, 0x70, 0x42, 0x72, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x72, 0x6f, 0x77, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x42, 0x72, 0x6f, 0x77, 0x49, 0x44, 0x12, 0x18, 0x0a,
	0x07, 0x54, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07,
	0x54, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x78, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x56, 0x69, 0x70, 0x42, 0x72, 0x6f, 0x77, 0x52, 0x65, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x72, 0x6f, 0x77, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x42, 0x72, 0x6f, 0x77, 0x49, 0x44, 0x12, 0x18, 0x0a,
	0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07,
	0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x54, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x22, 0x60, 0x0a, 0x14, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x56, 0x69, 0x70, 0x42, 0x72, 0x6f, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x72, 0x6f, 0x77, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x06, 0x42, 0x72, 0x6f, 0x77, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x54, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x22, 0x9b, 0x01, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x54,
	0x61, 0x73, 0x6b, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x41, 0x64, 0x64, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x4a, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x22, 0x90, 0x01,
	0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18,
	0x0a, 0x07, 0x47, 0x61, 0x6d, 0x65, 0x57, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52,
	0x07, 0x47, 0x61, 0x6d, 0x65, 0x57, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0c,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x0c,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x22, 0x64, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x69, 0x61, 0x6e,
	0x79, 0x75, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x4c, 0x69, 0x61,
	0x6e, 0x79, 0x75, 0x6e, 0x49, 0x44, 0x22, 0xbd, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x6f, 0x6f, 0x6c,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0f, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x4c, 0x69, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x4c,
	0x69, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x54, 0x50, 0x18, 0x05, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x03, 0x52, 0x54, 0x50, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x69, 0x61, 0x6e,
	0x79, 0x75, 0x6e, 0x49, 0x44, 0x18, 0x06, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x4c, 0x69, 0x61,
	0x6e, 0x79, 0x75, 0x6e, 0x49, 0x44, 0x22, 0xc9, 0x01, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x49, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52,
	0x09, 0x49, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61,
	0x6d, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x6f,
	0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x03, 0x52, 0x09, 0x50,
	0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4c, 0x69, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x4c, 0x69, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x54, 0x50, 0x18, 0x06, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x03, 0x52, 0x54, 0x50, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x69, 0x61, 0x6e, 0x79, 0x75, 0x6e, 0x49,
	0x44, 0x18, 0x07, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x4c, 0x69, 0x61, 0x6e, 0x79, 0x75, 0x6e,
	0x49, 0x44, 0x22, 0x88, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x65, 0x6c, 0x73, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x02, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x74, 0x70, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x52, 0x74, 0x70, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x79, 0x6d, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x03, 0x52, 0x08, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x79, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x52,
	0x74, 0x70, 0x72, 0x65, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x02, 0x28, 0x03, 0x52, 0x07, 0x52, 0x74,
	0x70, 0x72, 0x65, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x43, 0x74, 0x72, 0x6c, 0x18,
	0x05, 0x20, 0x02, 0x28, 0x03, 0x52, 0x06, 0x49, 0x73, 0x43, 0x74, 0x72, 0x6c, 0x22, 0x48, 0x0a,
	0x10, 0x52, 0x65, 0x65, 0x6c, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x34, 0x0a, 0x09, 0x52, 0x65, 0x65, 0x6c, 0x73, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x65, 0x6c, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x09, 0x52, 0x65,
	0x65, 0x6c, 0x73, 0x44, 0x61, 0x74, 0x61, 0x22, 0x48, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x65, 0x6c, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x09, 0x49, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x22, 0x58, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x65, 0x6c, 0x73, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x40, 0x0a, 0x0d, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x65, 0x6c, 0x73, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x65, 0x6c, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x0d, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x65, 0x6c, 0x73, 0x44, 0x61, 0x74, 0x61, 0x22, 0x69, 0x0a, 0x0d, 0x47,
	0x61, 0x6d, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x12, 0x1e, 0x0a, 0x0a,
	0x46, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x0a, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08,
	0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x6d, 0x6f, 0x6a,
	0x69, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x45, 0x6d, 0x6f,
	0x6a, 0x69, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x10, 0x47, 0x61, 0x6d, 0x65, 0x52,
	0x6f, 0x6f, 0x6d, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x52, 0x65, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x46,
	0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x0a, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x54,
	0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x54,
	0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x6d, 0x6f, 0x6a, 0x69,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x45, 0x6d, 0x6f, 0x6a,
	0x69, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x22, 0x28, 0x0a, 0x0e, 0x44, 0x7a, 0x70, 0x6b, 0x43, 0x68, 0x6f, 0x69, 0x63,
	0x65, 0x53, 0x65, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x22, 0x3f, 0x0a,
	0x11, 0x44, 0x7a, 0x70, 0x6b, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x65, 0x61, 0x74, 0x52,
	0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x22, 0x31,
	0x0a, 0x0f, 0x44, 0x7a, 0x70, 0x6b, 0x44, 0x7a, 0x70, 0x6b, 0x42, 0x75, 0x79, 0x43, 0x68, 0x69,
	0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x68, 0x69, 0x70, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x68, 0x69, 0x70, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_GameRoomMsg_proto_rawDescOnce sync.Once
	file_GameRoomMsg_proto_rawDescData = file_GameRoomMsg_proto_rawDesc
)

func file_GameRoomMsg_proto_rawDescGZIP() []byte {
	file_GameRoomMsg_proto_rawDescOnce.Do(func() {
		file_GameRoomMsg_proto_rawDescData = protoimpl.X.CompressGZIP(file_GameRoomMsg_proto_rawDescData)
	})
	return file_GameRoomMsg_proto_rawDescData
}

var file_GameRoomMsg_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_GameRoomMsg_proto_goTypes = []interface{}{
	(*LoginGameRoomInfo)(nil),       // 0: netproto.LoginGameRoomInfo
	(*LoginGameRoomRet)(nil),        // 1: netproto.LoginGameRoomRet
	(*UserRoomLogonData)(nil),       // 2: netproto.UserRoomLogonData
	(*UserSit)(nil),                 // 3: netproto.UserSit
	(*GameVerInfo)(nil),             // 4: netproto.GameVerInfo
	(*RoomInfo)(nil),                // 5: netproto.RoomInfo
	(*SlotGetGameProgress)(nil),     // 6: netproto.SlotGetGameProgress
	(*SlotGetGameProgressRet)(nil),  // 7: netproto.SlotGetGameProgressRet
	(*SlotSaveGameProgress)(nil),    // 8: netproto.SlotSaveGameProgress
	(*SlotGetJackpot)(nil),          // 9: netproto.SlotGetJackpot
	(*SlotGetJackpotRet)(nil),       // 10: netproto.SlotGetJackpotRet
	(*SlotUpdateJackpot)(nil),       // 11: netproto.SlotUpdateJackpot
	(*UserSitByTableNo)(nil),        // 12: netproto.UserSitByTableNo
	(*RoomTableInfo)(nil),           // 13: netproto.RoomTableInfo
	(*LeaveTableRetMsg)(nil),        // 14: netproto.LeaveTableRetMsg
	(*SlotGetJackpotGroup)(nil),     // 15: netproto.SlotGetJackpotGroup
	(*SlotGetJackpotGroupRet)(nil),  // 16: netproto.SlotGetJackpotGroupRet
	(*SlotUpdateJackpotGroup)(nil),  // 17: netproto.SlotUpdateJackpotGroup
	(*SendUserVipBrowReq)(nil),      // 18: netproto.SendUserVipBrowReq
	(*SendUserVipBrowRet)(nil),      // 19: netproto.SendUserVipBrowRet
	(*BroadcastUserVipBrow)(nil),    // 20: netproto.BroadcastUserVipBrow
	(*AddUserTaskGameEventReq)(nil), // 21: netproto.AddUserTaskGameEventReq
	(*UserSingleControlReq)(nil),    // 22: netproto.UserSingleControlReq
	(*UserSingleControlRes)(nil),    // 23: netproto.UserSingleControlRes
	(*GetUserSinglePoolReq)(nil),    // 24: netproto.GetUserSinglePoolReq
	(*UpdateUserSinglePoolReq)(nil), // 25: netproto.UpdateUserSinglePoolReq
	(*UserSinglePoolRes)(nil),       // 26: netproto.UserSinglePoolRes
	(*ReelsControl)(nil),            // 27: netproto.ReelsControl
	(*ReelsControlInfo)(nil),        // 28: netproto.ReelsControlInfo
	(*UserReelsControl)(nil),        // 29: netproto.UserReelsControl
	(*UserReelsControlInfo)(nil),    // 30: netproto.UserReelsControlInfo
	(*GameRoomEmoji)(nil),           // 31: netproto.GameRoomEmoji
	(*GameRoomEmojiRet)(nil),        // 32: netproto.GameRoomEmojiRet
	(*DzpkChoiceSeat)(nil),          // 33: netproto.DzpkChoiceSeat
	(*DzpkChoiceSeatRet)(nil),       // 34: netproto.DzpkChoiceSeatRet
	(*DzpkDzpkBuyChip)(nil),         // 35: netproto.DzpkDzpkBuyChip
}
var file_GameRoomMsg_proto_depIdxs = []int32{
	0,  // 0: netproto.LoginGameRoomRet.LoginRequestData:type_name -> netproto.LoginGameRoomInfo
	2,  // 1: netproto.LoginGameRoomRet.UserData:type_name -> netproto.UserRoomLogonData
	5,  // 2: netproto.LoginGameRoomRet.RoomInfo:type_name -> netproto.RoomInfo
	27, // 3: netproto.ReelsControlInfo.ReelsData:type_name -> netproto.ReelsControl
	29, // 4: netproto.UserReelsControlInfo.UserReelsData:type_name -> netproto.UserReelsControl
	5,  // [5:5] is the sub-list for method output_type
	5,  // [5:5] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_GameRoomMsg_proto_init() }
func file_GameRoomMsg_proto_init() {
	if File_GameRoomMsg_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_GameRoomMsg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginGameRoomInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameRoomMsg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginGameRoomRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameRoomMsg_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRoomLogonData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameRoomMsg_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameRoomMsg_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameVerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameRoomMsg_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameRoomMsg_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlotGetGameProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameRoomMsg_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlotGetGameProgressRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameRoomMsg_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlotSaveGameProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameRoomMsg_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlotGetJackpot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameRoomMsg_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlotGetJackpotRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameRoomMsg_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlotUpdateJackpot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameRoomMsg_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSitByTableNo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameRoomMsg_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomTableInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameRoomMsg_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveTableRetMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameRoomMsg_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlotGetJackpotGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameRoomMsg_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlotGetJackpotGroupRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameRoomMsg_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlotUpdateJackpotGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameRoomMsg_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendUserVipBrowReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameRoomMsg_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendUserVipBrowRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameRoomMsg_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadcastUserVipBrow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameRoomMsg_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserTaskGameEventReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameRoomMsg_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSingleControlReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameRoomMsg_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSingleControlRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameRoomMsg_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSinglePoolReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameRoomMsg_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserSinglePoolReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameRoomMsg_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSinglePoolRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameRoomMsg_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReelsControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameRoomMsg_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReelsControlInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameRoomMsg_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserReelsControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameRoomMsg_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserReelsControlInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameRoomMsg_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameRoomEmoji); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameRoomMsg_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameRoomEmojiRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameRoomMsg_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DzpkChoiceSeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameRoomMsg_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DzpkChoiceSeatRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameRoomMsg_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DzpkDzpkBuyChip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_GameRoomMsg_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_GameRoomMsg_proto_goTypes,
		DependencyIndexes: file_GameRoomMsg_proto_depIdxs,
		MessageInfos:      file_GameRoomMsg_proto_msgTypes,
	}.Build()
	File_GameRoomMsg_proto = out.File
	file_GameRoomMsg_proto_rawDesc = nil
	file_GameRoomMsg_proto_goTypes = nil
	file_GameRoomMsg_proto_depIdxs = nil
}
