// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0-devel
// 	protoc        v3.19.1
// source: GameMsg_BJ.proto

package netproto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//下註設定
type BJ_Setting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BetCount      []int32 `protobuf:"varint,1,rep,name=BetCount" json:"BetCount,omitempty"`           //一次下註的數量
	BetMoney      *int32  `protobuf:"varint,2,req,name=BetMoney" json:"BetMoney,omitempty"`           //一次下註的錢
	BetMoneyLimit *int64  `protobuf:"varint,3,req,name=BetMoneyLimit" json:"BetMoneyLimit,omitempty"` //下註上限
}

func (x *BJ_Setting) Reset() {
	*x = BJ_Setting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_BJ_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BJ_Setting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BJ_Setting) ProtoMessage() {}

func (x *BJ_Setting) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_BJ_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BJ_Setting.ProtoReflect.Descriptor instead.
func (*BJ_Setting) Descriptor() ([]byte, []int) {
	return file_GameMsg_BJ_proto_rawDescGZIP(), []int{0}
}

func (x *BJ_Setting) GetBetCount() []int32 {
	if x != nil {
		return x.BetCount
	}
	return nil
}

func (x *BJ_Setting) GetBetMoney() int32 {
	if x != nil && x.BetMoney != nil {
		return *x.BetMoney
	}
	return 0
}

func (x *BJ_Setting) GetBetMoneyLimit() int64 {
	if x != nil && x.BetMoneyLimit != nil {
		return *x.BetMoneyLimit
	}
	return 0
}

//狀態消息
type BJ_Sate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *int32 `protobuf:"varint,1,req,name=State" json:"State,omitempty"` //狀態
	Time  *int32 `protobuf:"varint,2,req,name=Time" json:"Time,omitempty"`   //此狀態的剩餘時間
}

func (x *BJ_Sate) Reset() {
	*x = BJ_Sate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_BJ_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BJ_Sate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BJ_Sate) ProtoMessage() {}

func (x *BJ_Sate) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_BJ_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BJ_Sate.ProtoReflect.Descriptor instead.
func (*BJ_Sate) Descriptor() ([]byte, []int) {
	return file_GameMsg_BJ_proto_rawDescGZIP(), []int{1}
}

func (x *BJ_Sate) GetState() int32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

func (x *BJ_Sate) GetTime() int32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

//用戶斷線重連下註消息
type BJ_UserBetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserMoney *int64             `protobuf:"varint,1,req,name=UserMoney" json:"UserMoney,omitempty"`
	BetInfo   []*BJ_BroadCastBet `protobuf:"bytes,2,rep,name=BetInfo" json:"BetInfo,omitempty"`
}

func (x *BJ_UserBetInfo) Reset() {
	*x = BJ_UserBetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_BJ_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BJ_UserBetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BJ_UserBetInfo) ProtoMessage() {}

func (x *BJ_UserBetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_BJ_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BJ_UserBetInfo.ProtoReflect.Descriptor instead.
func (*BJ_UserBetInfo) Descriptor() ([]byte, []int) {
	return file_GameMsg_BJ_proto_rawDescGZIP(), []int{2}
}

func (x *BJ_UserBetInfo) GetUserMoney() int64 {
	if x != nil && x.UserMoney != nil {
		return *x.UserMoney
	}
	return 0
}

func (x *BJ_UserBetInfo) GetBetInfo() []*BJ_BroadCastBet {
	if x != nil {
		return x.BetInfo
	}
	return nil
}

//廣播用戶下註的數組
type BJ_BroadCastBetArr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID          *int32             `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`
	BroadCastBetArr []*BJ_BroadCastBet `protobuf:"bytes,2,rep,name=BroadCastBetArr" json:"BroadCastBetArr,omitempty"`
}

func (x *BJ_BroadCastBetArr) Reset() {
	*x = BJ_BroadCastBetArr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_BJ_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BJ_BroadCastBetArr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BJ_BroadCastBetArr) ProtoMessage() {}

func (x *BJ_BroadCastBetArr) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_BJ_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BJ_BroadCastBetArr.ProtoReflect.Descriptor instead.
func (*BJ_BroadCastBetArr) Descriptor() ([]byte, []int) {
	return file_GameMsg_BJ_proto_rawDescGZIP(), []int{3}
}

func (x *BJ_BroadCastBetArr) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *BJ_BroadCastBetArr) GetBroadCastBetArr() []*BJ_BroadCastBet {
	if x != nil {
		return x.BroadCastBetArr
	}
	return nil
}

//廣播用戶下註內容數據結構
type BJ_BroadCastBet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  *int32 `protobuf:"varint,1,req,name=Type" json:"Type,omitempty"`
	Money *int64 `protobuf:"varint,2,req,name=Money" json:"Money,omitempty"`
}

func (x *BJ_BroadCastBet) Reset() {
	*x = BJ_BroadCastBet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_BJ_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BJ_BroadCastBet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BJ_BroadCastBet) ProtoMessage() {}

func (x *BJ_BroadCastBet) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_BJ_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BJ_BroadCastBet.ProtoReflect.Descriptor instead.
func (*BJ_BroadCastBet) Descriptor() ([]byte, []int) {
	return file_GameMsg_BJ_proto_rawDescGZIP(), []int{4}
}

func (x *BJ_BroadCastBet) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *BJ_BroadCastBet) GetMoney() int64 {
	if x != nil && x.Money != nil {
		return *x.Money
	}
	return 0
}

//用戶下註數組
type BJ_BetArr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BetArr []*BJ_Bet `protobuf:"bytes,1,rep,name=BetArr" json:"BetArr,omitempty"`
}

func (x *BJ_BetArr) Reset() {
	*x = BJ_BetArr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_BJ_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BJ_BetArr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BJ_BetArr) ProtoMessage() {}

func (x *BJ_BetArr) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_BJ_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BJ_BetArr.ProtoReflect.Descriptor instead.
func (*BJ_BetArr) Descriptor() ([]byte, []int) {
	return file_GameMsg_BJ_proto_rawDescGZIP(), []int{5}
}

func (x *BJ_BetArr) GetBetArr() []*BJ_Bet {
	if x != nil {
		return x.BetArr
	}
	return nil
}

//用戶下註數據結構
type BJ_Bet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BetType *int32 `protobuf:"varint,1,req,name=BetType" json:"BetType,omitempty"`
	Count   *int32 `protobuf:"varint,2,req,name=Count" json:"Count,omitempty"`
}

func (x *BJ_Bet) Reset() {
	*x = BJ_Bet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_BJ_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BJ_Bet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BJ_Bet) ProtoMessage() {}

func (x *BJ_Bet) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_BJ_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BJ_Bet.ProtoReflect.Descriptor instead.
func (*BJ_Bet) Descriptor() ([]byte, []int) {
	return file_GameMsg_BJ_proto_rawDescGZIP(), []int{6}
}

func (x *BJ_Bet) GetBetType() int32 {
	if x != nil && x.BetType != nil {
		return *x.BetType
	}
	return 0
}

func (x *BJ_Bet) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

//21點下註的結果
type BJ_BetRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret    *int32    `protobuf:"varint,1,req,name=Ret" json:"Ret,omitempty"`      //0下註成功，-1用戶金額不足，-2下註的類型未找到，-3莊家不能下註，-4此類下註已達到上限，-5不可同時下註龍與虎，-6用戶金額小於下註限製
	Money  *int64    `protobuf:"varint,2,req,name=Money" json:"Money,omitempty"`  //用戶的錢，下註以後的金額。
	Type   *int32    `protobuf:"varint,3,opt,name=Type" json:"Type,omitempty"`    //下註超過限製的下註類型
	BetArr []*BJ_Bet `protobuf:"bytes,4,rep,name=BetArr" json:"BetArr,omitempty"` //用戶下註數據
}

func (x *BJ_BetRet) Reset() {
	*x = BJ_BetRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_BJ_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BJ_BetRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BJ_BetRet) ProtoMessage() {}

func (x *BJ_BetRet) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_BJ_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BJ_BetRet.ProtoReflect.Descriptor instead.
func (*BJ_BetRet) Descriptor() ([]byte, []int) {
	return file_GameMsg_BJ_proto_rawDescGZIP(), []int{7}
}

func (x *BJ_BetRet) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *BJ_BetRet) GetMoney() int64 {
	if x != nil && x.Money != nil {
		return *x.Money
	}
	return 0
}

func (x *BJ_BetRet) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *BJ_BetRet) GetBetArr() []*BJ_Bet {
	if x != nil {
		return x.BetArr
	}
	return nil
}

//21點發牌
type BJ_Fapai struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content  []*BJCardContent `protobuf:"bytes,1,rep,name=Content" json:"Content,omitempty"`    //用戶下註數據
	LastTurn *int32           `protobuf:"varint,2,req,name=LastTurn" json:"LastTurn,omitempty"` //是否最後一局 0沒有紅牌 1~4第幾張發紅牌
}

func (x *BJ_Fapai) Reset() {
	*x = BJ_Fapai{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_BJ_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BJ_Fapai) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BJ_Fapai) ProtoMessage() {}

func (x *BJ_Fapai) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_BJ_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BJ_Fapai.ProtoReflect.Descriptor instead.
func (*BJ_Fapai) Descriptor() ([]byte, []int) {
	return file_GameMsg_BJ_proto_rawDescGZIP(), []int{8}
}

func (x *BJ_Fapai) GetContent() []*BJCardContent {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *BJ_Fapai) GetLastTurn() int32 {
	if x != nil && x.LastTurn != nil {
		return *x.LastTurn
	}
	return 0
}

//21點發牌
type BJCardContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SitNo      *int32       `protobuf:"varint,1,req,name=SitNo" json:"SitNo,omitempty"`           //座位的編號
	SitPoker   []*PokerCard `protobuf:"bytes,2,rep,name=SitPoker" json:"SitPoker,omitempty"`      //座位上的撲克牌
	CardNumber *int32       `protobuf:"varint,3,req,name=CardNumber" json:"CardNumber,omitempty"` //牌點總合
}

func (x *BJCardContent) Reset() {
	*x = BJCardContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_BJ_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BJCardContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BJCardContent) ProtoMessage() {}

func (x *BJCardContent) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_BJ_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BJCardContent.ProtoReflect.Descriptor instead.
func (*BJCardContent) Descriptor() ([]byte, []int) {
	return file_GameMsg_BJ_proto_rawDescGZIP(), []int{9}
}

func (x *BJCardContent) GetSitNo() int32 {
	if x != nil && x.SitNo != nil {
		return *x.SitNo
	}
	return 0
}

func (x *BJCardContent) GetSitPoker() []*PokerCard {
	if x != nil {
		return x.SitPoker
	}
	return nil
}

func (x *BJCardContent) GetCardNumber() int32 {
	if x != nil && x.CardNumber != nil {
		return *x.CardNumber
	}
	return 0
}

//21點玩家投降/保險
type BJ_UserCheck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Surrender *bool `protobuf:"varint,1,req,name=surrender" json:"surrender,omitempty"` //投降
	Insurence *bool `protobuf:"varint,2,req,name=insurence" json:"insurence,omitempty"` //保險
	Cancel    *bool `protobuf:"varint,3,req,name=cancel" json:"cancel,omitempty"`       //取消
}

func (x *BJ_UserCheck) Reset() {
	*x = BJ_UserCheck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_BJ_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BJ_UserCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BJ_UserCheck) ProtoMessage() {}

func (x *BJ_UserCheck) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_BJ_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BJ_UserCheck.ProtoReflect.Descriptor instead.
func (*BJ_UserCheck) Descriptor() ([]byte, []int) {
	return file_GameMsg_BJ_proto_rawDescGZIP(), []int{10}
}

func (x *BJ_UserCheck) GetSurrender() bool {
	if x != nil && x.Surrender != nil {
		return *x.Surrender
	}
	return false
}

func (x *BJ_UserCheck) GetInsurence() bool {
	if x != nil && x.Insurence != nil {
		return *x.Insurence
	}
	return false
}

func (x *BJ_UserCheck) GetCancel() bool {
	if x != nil && x.Cancel != nil {
		return *x.Cancel
	}
	return false
}

//21點玩家可操作行為
type BJ_UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SitNo   *int32 `protobuf:"varint,1,req,name=SitNo" json:"SitNo,omitempty"`     //座位號
	Hit     *bool  `protobuf:"varint,2,req,name=hit" json:"hit,omitempty"`         //要牌
	Stand   *bool  `protobuf:"varint,3,req,name=stand" json:"stand,omitempty"`     //停牌
	Split   *bool  `protobuf:"varint,4,req,name=split" json:"split,omitempty"`     //分牌
	Double  *bool  `protobuf:"varint,5,req,name=double" json:"double,omitempty"`   //加倍
	Bust    *bool  `protobuf:"varint,6,req,name=bust" json:"bust,omitempty"`       //爆牌
	OptTime *int32 `protobuf:"varint,7,req,name=OptTime" json:"OptTime,omitempty"` //操作時間
}

func (x *BJ_UserInfo) Reset() {
	*x = BJ_UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_BJ_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BJ_UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BJ_UserInfo) ProtoMessage() {}

func (x *BJ_UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_BJ_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BJ_UserInfo.ProtoReflect.Descriptor instead.
func (*BJ_UserInfo) Descriptor() ([]byte, []int) {
	return file_GameMsg_BJ_proto_rawDescGZIP(), []int{11}
}

func (x *BJ_UserInfo) GetSitNo() int32 {
	if x != nil && x.SitNo != nil {
		return *x.SitNo
	}
	return 0
}

func (x *BJ_UserInfo) GetHit() bool {
	if x != nil && x.Hit != nil {
		return *x.Hit
	}
	return false
}

func (x *BJ_UserInfo) GetStand() bool {
	if x != nil && x.Stand != nil {
		return *x.Stand
	}
	return false
}

func (x *BJ_UserInfo) GetSplit() bool {
	if x != nil && x.Split != nil {
		return *x.Split
	}
	return false
}

func (x *BJ_UserInfo) GetDouble() bool {
	if x != nil && x.Double != nil {
		return *x.Double
	}
	return false
}

func (x *BJ_UserInfo) GetBust() bool {
	if x != nil && x.Bust != nil {
		return *x.Bust
	}
	return false
}

func (x *BJ_UserInfo) GetOptTime() int32 {
	if x != nil && x.OptTime != nil {
		return *x.OptTime
	}
	return 0
}

//遊戲用戶贏錢結果
type BJ_GameResultUserMoney struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResultUserMoney []*BJ_GameSettlement `protobuf:"bytes,1,rep,name=ResultUserMoney" json:"ResultUserMoney,omitempty"` //贏多少錢
}

func (x *BJ_GameResultUserMoney) Reset() {
	*x = BJ_GameResultUserMoney{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_BJ_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BJ_GameResultUserMoney) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BJ_GameResultUserMoney) ProtoMessage() {}

func (x *BJ_GameResultUserMoney) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_BJ_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BJ_GameResultUserMoney.ProtoReflect.Descriptor instead.
func (*BJ_GameResultUserMoney) Descriptor() ([]byte, []int) {
	return file_GameMsg_BJ_proto_rawDescGZIP(), []int{12}
}

func (x *BJ_GameResultUserMoney) GetResultUserMoney() []*BJ_GameSettlement {
	if x != nil {
		return x.ResultUserMoney
	}
	return nil
}

//遊戲用戶切牌信息
type BJ_BroadCastCutpaiID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SitNo *int32 `protobuf:"varint,1,req,name=SitNo" json:"SitNo,omitempty"` //哪個座位號切牌
}

func (x *BJ_BroadCastCutpaiID) Reset() {
	*x = BJ_BroadCastCutpaiID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_BJ_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BJ_BroadCastCutpaiID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BJ_BroadCastCutpaiID) ProtoMessage() {}

func (x *BJ_BroadCastCutpaiID) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_BJ_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BJ_BroadCastCutpaiID.ProtoReflect.Descriptor instead.
func (*BJ_BroadCastCutpaiID) Descriptor() ([]byte, []int) {
	return file_GameMsg_BJ_proto_rawDescGZIP(), []int{13}
}

func (x *BJ_BroadCastCutpaiID) GetSitNo() int32 {
	if x != nil && x.SitNo != nil {
		return *x.SitNo
	}
	return 0
}

//廣播遊戲用戶切牌信息
type BJ_BroadCastCutpaiRetID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SitNo *int32 `protobuf:"varint,1,req,name=SitNo" json:"SitNo,omitempty"` //哪個座位號切牌
	Place *int64 `protobuf:"varint,2,req,name=Place" json:"Place,omitempty"` //切哪個位置
}

func (x *BJ_BroadCastCutpaiRetID) Reset() {
	*x = BJ_BroadCastCutpaiRetID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_BJ_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BJ_BroadCastCutpaiRetID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BJ_BroadCastCutpaiRetID) ProtoMessage() {}

func (x *BJ_BroadCastCutpaiRetID) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_BJ_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BJ_BroadCastCutpaiRetID.ProtoReflect.Descriptor instead.
func (*BJ_BroadCastCutpaiRetID) Descriptor() ([]byte, []int) {
	return file_GameMsg_BJ_proto_rawDescGZIP(), []int{14}
}

func (x *BJ_BroadCastCutpaiRetID) GetSitNo() int32 {
	if x != nil && x.SitNo != nil {
		return *x.SitNo
	}
	return 0
}

func (x *BJ_BroadCastCutpaiRetID) GetPlace() int64 {
	if x != nil && x.Place != nil {
		return *x.Place
	}
	return 0
}

//遊戲用戶底註信息
type BJ_UserBetDiZhuID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SitNo *int32 `protobuf:"varint,1,req,name=SitNo" json:"SitNo,omitempty"` //座位號
	Money *int64 `protobuf:"varint,2,req,name=Money" json:"Money,omitempty"` //底註金額
}

func (x *BJ_UserBetDiZhuID) Reset() {
	*x = BJ_UserBetDiZhuID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_BJ_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BJ_UserBetDiZhuID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BJ_UserBetDiZhuID) ProtoMessage() {}

func (x *BJ_UserBetDiZhuID) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_BJ_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BJ_UserBetDiZhuID.ProtoReflect.Descriptor instead.
func (*BJ_UserBetDiZhuID) Descriptor() ([]byte, []int) {
	return file_GameMsg_BJ_proto_rawDescGZIP(), []int{15}
}

func (x *BJ_UserBetDiZhuID) GetSitNo() int32 {
	if x != nil && x.SitNo != nil {
		return *x.SitNo
	}
	return 0
}

func (x *BJ_UserBetDiZhuID) GetMoney() int64 {
	if x != nil && x.Money != nil {
		return *x.Money
	}
	return 0
}

//玩家遊戲結算金額
type BJ_GameSettlement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SitNo    *int32         `protobuf:"varint,1,req,name=SitNo" json:"SitNo,omitempty"`       //座位號
	TotalWin *int64         `protobuf:"varint,2,req,name=TotalWin" json:"TotalWin,omitempty"` //贏多少錢
	Block    []*BJ_WinBlock `protobuf:"bytes,3,rep,name=Block" json:"Block,omitempty"`        //哪些區塊贏錢，>6為玩家分牌區域
}

func (x *BJ_GameSettlement) Reset() {
	*x = BJ_GameSettlement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_BJ_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BJ_GameSettlement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BJ_GameSettlement) ProtoMessage() {}

func (x *BJ_GameSettlement) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_BJ_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BJ_GameSettlement.ProtoReflect.Descriptor instead.
func (*BJ_GameSettlement) Descriptor() ([]byte, []int) {
	return file_GameMsg_BJ_proto_rawDescGZIP(), []int{16}
}

func (x *BJ_GameSettlement) GetSitNo() int32 {
	if x != nil && x.SitNo != nil {
		return *x.SitNo
	}
	return 0
}

func (x *BJ_GameSettlement) GetTotalWin() int64 {
	if x != nil && x.TotalWin != nil {
		return *x.TotalWin
	}
	return 0
}

func (x *BJ_GameSettlement) GetBlock() []*BJ_WinBlock {
	if x != nil {
		return x.Block
	}
	return nil
}

//玩家贏錢區域
type BJ_WinBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SelfWin *int64 `protobuf:"varint,1,req,name=SelfWin" json:"SelfWin,omitempty"` //贏多少錢
	Block   *int32 `protobuf:"varint,2,req,name=Block" json:"Block,omitempty"`     //哪些區塊贏錢
	NoWin   *bool  `protobuf:"varint,3,req,name=NoWin" json:"NoWin,omitempty"`     //是否平手
}

func (x *BJ_WinBlock) Reset() {
	*x = BJ_WinBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_BJ_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BJ_WinBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BJ_WinBlock) ProtoMessage() {}

func (x *BJ_WinBlock) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_BJ_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BJ_WinBlock.ProtoReflect.Descriptor instead.
func (*BJ_WinBlock) Descriptor() ([]byte, []int) {
	return file_GameMsg_BJ_proto_rawDescGZIP(), []int{17}
}

func (x *BJ_WinBlock) GetSelfWin() int64 {
	if x != nil && x.SelfWin != nil {
		return *x.SelfWin
	}
	return 0
}

func (x *BJ_WinBlock) GetBlock() int32 {
	if x != nil && x.Block != nil {
		return *x.Block
	}
	return 0
}

func (x *BJ_WinBlock) GetNoWin() bool {
	if x != nil && x.NoWin != nil {
		return *x.NoWin
	}
	return false
}

//21點發牌
type BJ_Yaopai struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SitNo     *int32       `protobuf:"varint,1,req,name=SitNo" json:"SitNo,omitempty"`         //座位的編號
	SitPoker  []*PokerCard `protobuf:"bytes,2,rep,name=SitPoker" json:"SitPoker,omitempty"`    //發下的撲克牌
	LastTurn  *bool        `protobuf:"varint,3,req,name=LastTurn" json:"LastTurn,omitempty"`   //是否最後一局
	Double    *bool        `protobuf:"varint,4,req,name=Double" json:"Double,omitempty"`       //玩家是否加倍
	CardTotal *int32       `protobuf:"varint,5,req,name=CardTotal" json:"CardTotal,omitempty"` //牌點總和
}

func (x *BJ_Yaopai) Reset() {
	*x = BJ_Yaopai{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_BJ_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BJ_Yaopai) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BJ_Yaopai) ProtoMessage() {}

func (x *BJ_Yaopai) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_BJ_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BJ_Yaopai.ProtoReflect.Descriptor instead.
func (*BJ_Yaopai) Descriptor() ([]byte, []int) {
	return file_GameMsg_BJ_proto_rawDescGZIP(), []int{18}
}

func (x *BJ_Yaopai) GetSitNo() int32 {
	if x != nil && x.SitNo != nil {
		return *x.SitNo
	}
	return 0
}

func (x *BJ_Yaopai) GetSitPoker() []*PokerCard {
	if x != nil {
		return x.SitPoker
	}
	return nil
}

func (x *BJ_Yaopai) GetLastTurn() bool {
	if x != nil && x.LastTurn != nil {
		return *x.LastTurn
	}
	return false
}

func (x *BJ_Yaopai) GetDouble() bool {
	if x != nil && x.Double != nil {
		return *x.Double
	}
	return false
}

func (x *BJ_Yaopai) GetCardTotal() int32 {
	if x != nil && x.CardTotal != nil {
		return *x.CardTotal
	}
	return 0
}

//21點莊家翻牌
type BJ_FanPai struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SitPoker  []*PokerCard `protobuf:"bytes,1,rep,name=SitPoker" json:"SitPoker,omitempty"`    //發下的撲克牌
	CardTotal *int32       `protobuf:"varint,2,req,name=CardTotal" json:"CardTotal,omitempty"` //牌點總和
}

func (x *BJ_FanPai) Reset() {
	*x = BJ_FanPai{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_BJ_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BJ_FanPai) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BJ_FanPai) ProtoMessage() {}

func (x *BJ_FanPai) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_BJ_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BJ_FanPai.ProtoReflect.Descriptor instead.
func (*BJ_FanPai) Descriptor() ([]byte, []int) {
	return file_GameMsg_BJ_proto_rawDescGZIP(), []int{19}
}

func (x *BJ_FanPai) GetSitPoker() []*PokerCard {
	if x != nil {
		return x.SitPoker
	}
	return nil
}

func (x *BJ_FanPai) GetCardTotal() int32 {
	if x != nil && x.CardTotal != nil {
		return *x.CardTotal
	}
	return 0
}

//21點操作時間
type BJ_WaitOptSeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SitNo   *int32 `protobuf:"varint,1,req,name=SitNo" json:"SitNo,omitempty"`     //座位的編號
	OptTime *int32 `protobuf:"varint,2,req,name=OptTime" json:"OptTime,omitempty"` //操作時間
}

func (x *BJ_WaitOptSeat) Reset() {
	*x = BJ_WaitOptSeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_BJ_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BJ_WaitOptSeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BJ_WaitOptSeat) ProtoMessage() {}

func (x *BJ_WaitOptSeat) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_BJ_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BJ_WaitOptSeat.ProtoReflect.Descriptor instead.
func (*BJ_WaitOptSeat) Descriptor() ([]byte, []int) {
	return file_GameMsg_BJ_proto_rawDescGZIP(), []int{20}
}

func (x *BJ_WaitOptSeat) GetSitNo() int32 {
	if x != nil && x.SitNo != nil {
		return *x.SitNo
	}
	return 0
}

func (x *BJ_WaitOptSeat) GetOptTime() int32 {
	if x != nil && x.OptTime != nil {
		return *x.OptTime
	}
	return 0
}

//21點動作座位
type BJ_SitNo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SitNo *int32 `protobuf:"varint,1,req,name=SitNo" json:"SitNo,omitempty"` //座位的編號
}

func (x *BJ_SitNo) Reset() {
	*x = BJ_SitNo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_BJ_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BJ_SitNo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BJ_SitNo) ProtoMessage() {}

func (x *BJ_SitNo) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_BJ_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BJ_SitNo.ProtoReflect.Descriptor instead.
func (*BJ_SitNo) Descriptor() ([]byte, []int) {
	return file_GameMsg_BJ_proto_rawDescGZIP(), []int{21}
}

func (x *BJ_SitNo) GetSitNo() int32 {
	if x != nil && x.SitNo != nil {
		return *x.SitNo
	}
	return 0
}

//用戶斷線重連數據結構
type BJ_UserInfoArr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrOptSeatno *int32 `protobuf:"varint,1,req,name=CurrOptSeatno" json:"CurrOptSeatno,omitempty"`
	OptTime       *int32 `protobuf:"varint,2,req,name=OptTime" json:"OptTime,omitempty"`     //剩餘時間
	TotalTime     *int32 `protobuf:"varint,3,req,name=TotalTime" json:"TotalTime,omitempty"` //完整時間
}

func (x *BJ_UserInfoArr) Reset() {
	*x = BJ_UserInfoArr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_BJ_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BJ_UserInfoArr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BJ_UserInfoArr) ProtoMessage() {}

func (x *BJ_UserInfoArr) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_BJ_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BJ_UserInfoArr.ProtoReflect.Descriptor instead.
func (*BJ_UserInfoArr) Descriptor() ([]byte, []int) {
	return file_GameMsg_BJ_proto_rawDescGZIP(), []int{22}
}

func (x *BJ_UserInfoArr) GetCurrOptSeatno() int32 {
	if x != nil && x.CurrOptSeatno != nil {
		return *x.CurrOptSeatno
	}
	return 0
}

func (x *BJ_UserInfoArr) GetOptTime() int32 {
	if x != nil && x.OptTime != nil {
		return *x.OptTime
	}
	return 0
}

func (x *BJ_UserInfoArr) GetTotalTime() int32 {
	if x != nil && x.TotalTime != nil {
		return *x.TotalTime
	}
	return 0
}

//用戶分牌後的牌結構
type BJ_SplitCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SitNo          *int32       `protobuf:"varint,1,req,name=SitNo" json:"SitNo,omitempty"`                   //座位的編號
	SitPoker       []*PokerCard `protobuf:"bytes,2,rep,name=SitPoker" json:"SitPoker,omitempty"`              //發下的撲克牌
	SplitSitNo     *int32       `protobuf:"varint,3,req,name=SplitSitNo" json:"SplitSitNo,omitempty"`         //分牌的座位的編號
	SplitSitPoker  []*PokerCard `protobuf:"bytes,4,rep,name=SplitSitPoker" json:"SplitSitPoker,omitempty"`    //分牌發下的撲克牌
	CardTotal      *int32       `protobuf:"varint,5,req,name=CardTotal" json:"CardTotal,omitempty"`           //牌點總和
	SplitCardTotal *int32       `protobuf:"varint,6,req,name=SplitCardTotal" json:"SplitCardTotal,omitempty"` //分牌後點總和
}

func (x *BJ_SplitCard) Reset() {
	*x = BJ_SplitCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_BJ_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BJ_SplitCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BJ_SplitCard) ProtoMessage() {}

func (x *BJ_SplitCard) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_BJ_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BJ_SplitCard.ProtoReflect.Descriptor instead.
func (*BJ_SplitCard) Descriptor() ([]byte, []int) {
	return file_GameMsg_BJ_proto_rawDescGZIP(), []int{23}
}

func (x *BJ_SplitCard) GetSitNo() int32 {
	if x != nil && x.SitNo != nil {
		return *x.SitNo
	}
	return 0
}

func (x *BJ_SplitCard) GetSitPoker() []*PokerCard {
	if x != nil {
		return x.SitPoker
	}
	return nil
}

func (x *BJ_SplitCard) GetSplitSitNo() int32 {
	if x != nil && x.SplitSitNo != nil {
		return *x.SplitSitNo
	}
	return 0
}

func (x *BJ_SplitCard) GetSplitSitPoker() []*PokerCard {
	if x != nil {
		return x.SplitSitPoker
	}
	return nil
}

func (x *BJ_SplitCard) GetCardTotal() int32 {
	if x != nil && x.CardTotal != nil {
		return *x.CardTotal
	}
	return 0
}

func (x *BJ_SplitCard) GetSplitCardTotal() int32 {
	if x != nil && x.SplitCardTotal != nil {
		return *x.SplitCardTotal
	}
	return 0
}

//莊家要牌廣播
type BJ_ZhuangYaoPai struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SitNo     *int32       `protobuf:"varint,1,req,name=SitNo" json:"SitNo,omitempty"`         //座位的編號
	SitPoker  []*PokerCard `protobuf:"bytes,2,rep,name=SitPoker" json:"SitPoker,omitempty"`    //發下的撲克牌
	CardTotal *int32       `protobuf:"varint,3,req,name=CardTotal" json:"CardTotal,omitempty"` //牌點總和
}

func (x *BJ_ZhuangYaoPai) Reset() {
	*x = BJ_ZhuangYaoPai{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_BJ_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BJ_ZhuangYaoPai) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BJ_ZhuangYaoPai) ProtoMessage() {}

func (x *BJ_ZhuangYaoPai) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_BJ_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BJ_ZhuangYaoPai.ProtoReflect.Descriptor instead.
func (*BJ_ZhuangYaoPai) Descriptor() ([]byte, []int) {
	return file_GameMsg_BJ_proto_rawDescGZIP(), []int{24}
}

func (x *BJ_ZhuangYaoPai) GetSitNo() int32 {
	if x != nil && x.SitNo != nil {
		return *x.SitNo
	}
	return 0
}

func (x *BJ_ZhuangYaoPai) GetSitPoker() []*PokerCard {
	if x != nil {
		return x.SitPoker
	}
	return nil
}

func (x *BJ_ZhuangYaoPai) GetCardTotal() int32 {
	if x != nil && x.CardTotal != nil {
		return *x.CardTotal
	}
	return 0
}

//斷線重連下註場景
type BJ_RecoverScene struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID        *int32               `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`
	RecoverBetArr []*BJ_RecoverBetInfo `protobuf:"bytes,2,rep,name=RecoverBetArr" json:"RecoverBetArr,omitempty"`
}

func (x *BJ_RecoverScene) Reset() {
	*x = BJ_RecoverScene{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_BJ_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BJ_RecoverScene) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BJ_RecoverScene) ProtoMessage() {}

func (x *BJ_RecoverScene) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_BJ_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BJ_RecoverScene.ProtoReflect.Descriptor instead.
func (*BJ_RecoverScene) Descriptor() ([]byte, []int) {
	return file_GameMsg_BJ_proto_rawDescGZIP(), []int{25}
}

func (x *BJ_RecoverScene) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *BJ_RecoverScene) GetRecoverBetArr() []*BJ_RecoverBetInfo {
	if x != nil {
		return x.RecoverBetArr
	}
	return nil
}

//其他玩家下註內容
type BJ_RecoverBetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  *int32 `protobuf:"varint,1,req,name=Type" json:"Type,omitempty"`
	Money *int64 `protobuf:"varint,2,req,name=Money" json:"Money,omitempty"`
}

func (x *BJ_RecoverBetInfo) Reset() {
	*x = BJ_RecoverBetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_BJ_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BJ_RecoverBetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BJ_RecoverBetInfo) ProtoMessage() {}

func (x *BJ_RecoverBetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_BJ_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BJ_RecoverBetInfo.ProtoReflect.Descriptor instead.
func (*BJ_RecoverBetInfo) Descriptor() ([]byte, []int) {
	return file_GameMsg_BJ_proto_rawDescGZIP(), []int{26}
}

func (x *BJ_RecoverBetInfo) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *BJ_RecoverBetInfo) GetMoney() int64 {
	if x != nil && x.Money != nil {
		return *x.Money
	}
	return 0
}

//廣播用戶下註的數組
type BJ_BroadCastSpecialBet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID *int32 `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`
	Type   *int32 `protobuf:"varint,2,req,name=Type" json:"Type,omitempty"`
	Money  *int64 `protobuf:"varint,3,req,name=Money" json:"Money,omitempty"`
}

func (x *BJ_BroadCastSpecialBet) Reset() {
	*x = BJ_BroadCastSpecialBet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_BJ_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BJ_BroadCastSpecialBet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BJ_BroadCastSpecialBet) ProtoMessage() {}

func (x *BJ_BroadCastSpecialBet) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_BJ_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BJ_BroadCastSpecialBet.ProtoReflect.Descriptor instead.
func (*BJ_BroadCastSpecialBet) Descriptor() ([]byte, []int) {
	return file_GameMsg_BJ_proto_rawDescGZIP(), []int{27}
}

func (x *BJ_BroadCastSpecialBet) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *BJ_BroadCastSpecialBet) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *BJ_BroadCastSpecialBet) GetMoney() int64 {
	if x != nil && x.Money != nil {
		return *x.Money
	}
	return 0
}

//準備時間
type BJ_ReadyTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReadyTime *int32 `protobuf:"varint,1,req,name=ReadyTime" json:"ReadyTime,omitempty"`
}

func (x *BJ_ReadyTime) Reset() {
	*x = BJ_ReadyTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_BJ_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BJ_ReadyTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BJ_ReadyTime) ProtoMessage() {}

func (x *BJ_ReadyTime) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_BJ_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BJ_ReadyTime.ProtoReflect.Descriptor instead.
func (*BJ_ReadyTime) Descriptor() ([]byte, []int) {
	return file_GameMsg_BJ_proto_rawDescGZIP(), []int{28}
}

func (x *BJ_ReadyTime) GetReadyTime() int32 {
	if x != nil && x.ReadyTime != nil {
		return *x.ReadyTime
	}
	return 0
}

//玩家斷線重連的牌
type BJ_UserPokerRecover struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PokerRecover []*BJ_PokerRecover `protobuf:"bytes,1,rep,name=PokerRecover" json:"PokerRecover,omitempty"`
}

func (x *BJ_UserPokerRecover) Reset() {
	*x = BJ_UserPokerRecover{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_BJ_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BJ_UserPokerRecover) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BJ_UserPokerRecover) ProtoMessage() {}

func (x *BJ_UserPokerRecover) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_BJ_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BJ_UserPokerRecover.ProtoReflect.Descriptor instead.
func (*BJ_UserPokerRecover) Descriptor() ([]byte, []int) {
	return file_GameMsg_BJ_proto_rawDescGZIP(), []int{29}
}

func (x *BJ_UserPokerRecover) GetPokerRecover() []*BJ_PokerRecover {
	if x != nil {
		return x.PokerRecover
	}
	return nil
}

//玩家的牌
type BJ_PokerRecover struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SitNo     *int32       `protobuf:"varint,1,req,name=SitNo" json:"SitNo,omitempty"`
	SitPoker  []*PokerCard `protobuf:"bytes,2,rep,name=SitPoker" json:"SitPoker,omitempty"`
	CardTotal *int32       `protobuf:"varint,3,req,name=CardTotal" json:"CardTotal,omitempty"`
	Double    *bool        `protobuf:"varint,4,req,name=double" json:"double,omitempty"`
}

func (x *BJ_PokerRecover) Reset() {
	*x = BJ_PokerRecover{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_BJ_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BJ_PokerRecover) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BJ_PokerRecover) ProtoMessage() {}

func (x *BJ_PokerRecover) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_BJ_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BJ_PokerRecover.ProtoReflect.Descriptor instead.
func (*BJ_PokerRecover) Descriptor() ([]byte, []int) {
	return file_GameMsg_BJ_proto_rawDescGZIP(), []int{30}
}

func (x *BJ_PokerRecover) GetSitNo() int32 {
	if x != nil && x.SitNo != nil {
		return *x.SitNo
	}
	return 0
}

func (x *BJ_PokerRecover) GetSitPoker() []*PokerCard {
	if x != nil {
		return x.SitPoker
	}
	return nil
}

func (x *BJ_PokerRecover) GetCardTotal() int32 {
	if x != nil && x.CardTotal != nil {
		return *x.CardTotal
	}
	return 0
}

func (x *BJ_PokerRecover) GetDouble() bool {
	if x != nil && x.Double != nil {
		return *x.Double
	}
	return false
}

//玩家斷線重連後的金額
type BJ_WinLoseRecover struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       *int32              `protobuf:"varint,1,req,name=UserId" json:"UserId,omitempty"`
	WinLoseBlock []*BJ_WinLoseDetail `protobuf:"bytes,2,rep,name=WinLoseBlock" json:"WinLoseBlock,omitempty"`
	WinLose      *int64              `protobuf:"varint,3,req,name=WinLose" json:"WinLose,omitempty"`
}

func (x *BJ_WinLoseRecover) Reset() {
	*x = BJ_WinLoseRecover{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_BJ_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BJ_WinLoseRecover) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BJ_WinLoseRecover) ProtoMessage() {}

func (x *BJ_WinLoseRecover) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_BJ_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BJ_WinLoseRecover.ProtoReflect.Descriptor instead.
func (*BJ_WinLoseRecover) Descriptor() ([]byte, []int) {
	return file_GameMsg_BJ_proto_rawDescGZIP(), []int{31}
}

func (x *BJ_WinLoseRecover) GetUserId() int32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *BJ_WinLoseRecover) GetWinLoseBlock() []*BJ_WinLoseDetail {
	if x != nil {
		return x.WinLoseBlock
	}
	return nil
}

func (x *BJ_WinLoseRecover) GetWinLose() int64 {
	if x != nil && x.WinLose != nil {
		return *x.WinLose
	}
	return 0
}

//玩家斷線重連後的金額
type BJ_WinLoseDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SelfWin *int64 `protobuf:"varint,1,req,name=SelfWin" json:"SelfWin,omitempty"` //贏多少錢
	Block   *int32 `protobuf:"varint,2,req,name=Block" json:"Block,omitempty"`     //哪些區塊贏錢
}

func (x *BJ_WinLoseDetail) Reset() {
	*x = BJ_WinLoseDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_BJ_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BJ_WinLoseDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BJ_WinLoseDetail) ProtoMessage() {}

func (x *BJ_WinLoseDetail) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_BJ_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BJ_WinLoseDetail.ProtoReflect.Descriptor instead.
func (*BJ_WinLoseDetail) Descriptor() ([]byte, []int) {
	return file_GameMsg_BJ_proto_rawDescGZIP(), []int{32}
}

func (x *BJ_WinLoseDetail) GetSelfWin() int64 {
	if x != nil && x.SelfWin != nil {
		return *x.SelfWin
	}
	return 0
}

func (x *BJ_WinLoseDetail) GetBlock() int32 {
	if x != nil && x.Block != nil {
		return *x.Block
	}
	return 0
}

//玩家觀戰資訊
type BJ_WatchData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WatchDetail []*BJ_WatchDetail `protobuf:"bytes,1,rep,name=WatchDetail" json:"WatchDetail,omitempty"`
}

func (x *BJ_WatchData) Reset() {
	*x = BJ_WatchData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_BJ_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BJ_WatchData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BJ_WatchData) ProtoMessage() {}

func (x *BJ_WatchData) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_BJ_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BJ_WatchData.ProtoReflect.Descriptor instead.
func (*BJ_WatchData) Descriptor() ([]byte, []int) {
	return file_GameMsg_BJ_proto_rawDescGZIP(), []int{33}
}

func (x *BJ_WatchData) GetWatchDetail() []*BJ_WatchDetail {
	if x != nil {
		return x.WatchDetail
	}
	return nil
}

//玩家觀戰資訊
type BJ_WatchDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID *int32 `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"` //哪個玩家
	Watch  *bool  `protobuf:"varint,2,req,name=Watch" json:"Watch,omitempty"`   //是否觀戰
}

func (x *BJ_WatchDetail) Reset() {
	*x = BJ_WatchDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_BJ_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BJ_WatchDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BJ_WatchDetail) ProtoMessage() {}

func (x *BJ_WatchDetail) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_BJ_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BJ_WatchDetail.ProtoReflect.Descriptor instead.
func (*BJ_WatchDetail) Descriptor() ([]byte, []int) {
	return file_GameMsg_BJ_proto_rawDescGZIP(), []int{34}
}

func (x *BJ_WatchDetail) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *BJ_WatchDetail) GetWatch() bool {
	if x != nil && x.Watch != nil {
		return *x.Watch
	}
	return false
}

//廣播下註結果
type BJ_GetAllUserBetList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GetAllUserBet []*BJ_GetAllUserBet `protobuf:"bytes,1,rep,name=GetAllUserBet" json:"GetAllUserBet,omitempty"` //玩家已下註多少金額 S2C
}

func (x *BJ_GetAllUserBetList) Reset() {
	*x = BJ_GetAllUserBetList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_BJ_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BJ_GetAllUserBetList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BJ_GetAllUserBetList) ProtoMessage() {}

func (x *BJ_GetAllUserBetList) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_BJ_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BJ_GetAllUserBetList.ProtoReflect.Descriptor instead.
func (*BJ_GetAllUserBetList) Descriptor() ([]byte, []int) {
	return file_GameMsg_BJ_proto_rawDescGZIP(), []int{35}
}

func (x *BJ_GetAllUserBetList) GetGetAllUserBet() []*BJ_GetAllUserBet {
	if x != nil {
		return x.GetAllUserBet
	}
	return nil
}

//廣播下註結果
type BJ_GetAllUserBet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   *int32 `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`     //哪個玩家
	BetMoney *int64 `protobuf:"varint,2,req,name=BetMoney" json:"BetMoney,omitempty"` //下註多少錢
}

func (x *BJ_GetAllUserBet) Reset() {
	*x = BJ_GetAllUserBet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_BJ_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BJ_GetAllUserBet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BJ_GetAllUserBet) ProtoMessage() {}

func (x *BJ_GetAllUserBet) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_BJ_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BJ_GetAllUserBet.ProtoReflect.Descriptor instead.
func (*BJ_GetAllUserBet) Descriptor() ([]byte, []int) {
	return file_GameMsg_BJ_proto_rawDescGZIP(), []int{36}
}

func (x *BJ_GetAllUserBet) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *BJ_GetAllUserBet) GetBetMoney() int64 {
	if x != nil && x.BetMoney != nil {
		return *x.BetMoney
	}
	return 0
}

type BJSysPoolData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlagID      *int32 `protobuf:"varint,1,req,name=FlagID" json:"FlagID,omitempty"`
	SumBetMoney *int64 `protobuf:"varint,2,req,name=SumBetMoney" json:"SumBetMoney,omitempty"`
	SumBetCount *int64 `protobuf:"varint,3,req,name=SumBetCount" json:"SumBetCount,omitempty"`
	PoolAmount  *int64 `protobuf:"varint,4,req,name=PoolAmount" json:"PoolAmount,omitempty"`
}

func (x *BJSysPoolData) Reset() {
	*x = BJSysPoolData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_BJ_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BJSysPoolData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BJSysPoolData) ProtoMessage() {}

func (x *BJSysPoolData) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_BJ_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BJSysPoolData.ProtoReflect.Descriptor instead.
func (*BJSysPoolData) Descriptor() ([]byte, []int) {
	return file_GameMsg_BJ_proto_rawDescGZIP(), []int{37}
}

func (x *BJSysPoolData) GetFlagID() int32 {
	if x != nil && x.FlagID != nil {
		return *x.FlagID
	}
	return 0
}

func (x *BJSysPoolData) GetSumBetMoney() int64 {
	if x != nil && x.SumBetMoney != nil {
		return *x.SumBetMoney
	}
	return 0
}

func (x *BJSysPoolData) GetSumBetCount() int64 {
	if x != nil && x.SumBetCount != nil {
		return *x.SumBetCount
	}
	return 0
}

func (x *BJSysPoolData) GetPoolAmount() int64 {
	if x != nil && x.PoolAmount != nil {
		return *x.PoolAmount
	}
	return 0
}

//房間桌子信息
type BJ_TableInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableNo      *int32 `protobuf:"varint,1,req,name=TableNo" json:"TableNo,omitempty"`           //桌子ID
	ShoeNo       *int32 `protobuf:"varint,2,req,name=ShoeNo" json:"ShoeNo,omitempty"`             //牌靴序號
	GameNo       *int32 `protobuf:"varint,3,req,name=GameNo" json:"GameNo,omitempty"`             //牌局序號
	MinLimit     *int32 `protobuf:"varint,5,req,name=MinLimit" json:"MinLimit,omitempty"`         //最小下注金額
	MaxLimit     *int32 `protobuf:"varint,6,req,name=MaxLimit" json:"MaxLimit,omitempty"`         //最大下注金額
	ShoeLaveCard *int32 `protobuf:"varint,7,req,name=ShoeLaveCard" json:"ShoeLaveCard,omitempty"` //牌靴剩餘張數
}

func (x *BJ_TableInfo) Reset() {
	*x = BJ_TableInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_BJ_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BJ_TableInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BJ_TableInfo) ProtoMessage() {}

func (x *BJ_TableInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_BJ_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BJ_TableInfo.ProtoReflect.Descriptor instead.
func (*BJ_TableInfo) Descriptor() ([]byte, []int) {
	return file_GameMsg_BJ_proto_rawDescGZIP(), []int{38}
}

func (x *BJ_TableInfo) GetTableNo() int32 {
	if x != nil && x.TableNo != nil {
		return *x.TableNo
	}
	return 0
}

func (x *BJ_TableInfo) GetShoeNo() int32 {
	if x != nil && x.ShoeNo != nil {
		return *x.ShoeNo
	}
	return 0
}

func (x *BJ_TableInfo) GetGameNo() int32 {
	if x != nil && x.GameNo != nil {
		return *x.GameNo
	}
	return 0
}

func (x *BJ_TableInfo) GetMinLimit() int32 {
	if x != nil && x.MinLimit != nil {
		return *x.MinLimit
	}
	return 0
}

func (x *BJ_TableInfo) GetMaxLimit() int32 {
	if x != nil && x.MaxLimit != nil {
		return *x.MaxLimit
	}
	return 0
}

func (x *BJ_TableInfo) GetShoeLaveCard() int32 {
	if x != nil && x.ShoeLaveCard != nil {
		return *x.ShoeLaveCard
	}
	return 0
}

var File_GameMsg_BJ_proto protoreflect.FileDescriptor

var file_GameMsg_BJ_proto_rawDesc = []byte{
	0x0a, 0x10, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x5f, 0x42, 0x4a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x08, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x47, 0x61,
	0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6a, 0x0a, 0x0a, 0x42,
	0x4a, 0x5f, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x65, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x42, 0x65, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x42, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x65,
	0x79, 0x12, 0x24, 0x0a, 0x0d, 0x42, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0d, 0x42, 0x65, 0x74, 0x4d, 0x6f, 0x6e,
	0x65, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x33, 0x0a, 0x07, 0x42, 0x4a, 0x5f, 0x53, 0x61,
	0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x63, 0x0a, 0x0e,
	0x42, 0x4a, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c,
	0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x03, 0x52, 0x09, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x33, 0x0a, 0x07,
	0x42, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x4a, 0x5f, 0x42, 0x72, 0x6f, 0x61,
	0x64, 0x43, 0x61, 0x73, 0x74, 0x42, 0x65, 0x74, 0x52, 0x07, 0x42, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x71, 0x0a, 0x12, 0x42, 0x4a, 0x5f, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73,
	0x74, 0x42, 0x65, 0x74, 0x41, 0x72, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x43, 0x0a, 0x0f, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x42, 0x65, 0x74, 0x41,
	0x72, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x4a, 0x5f, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74,
	0x42, 0x65, 0x74, 0x52, 0x0f, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x42, 0x65,
	0x74, 0x41, 0x72, 0x72, 0x22, 0x3b, 0x0a, 0x0f, 0x42, 0x4a, 0x5f, 0x42, 0x72, 0x6f, 0x61, 0x64,
	0x43, 0x61, 0x73, 0x74, 0x42, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4d,
	0x6f, 0x6e, 0x65, 0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x6f, 0x6e, 0x65,
	0x79, 0x22, 0x35, 0x0a, 0x09, 0x42, 0x4a, 0x5f, 0x42, 0x65, 0x74, 0x41, 0x72, 0x72, 0x12, 0x28,
	0x0a, 0x06, 0x42, 0x65, 0x74, 0x41, 0x72, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x4a, 0x5f, 0x42, 0x65, 0x74,
	0x52, 0x06, 0x42, 0x65, 0x74, 0x41, 0x72, 0x72, 0x22, 0x38, 0x0a, 0x06, 0x42, 0x4a, 0x5f, 0x42,
	0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x07, 0x42, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x71, 0x0a, 0x09, 0x42, 0x4a, 0x5f, 0x42, 0x65, 0x74, 0x52, 0x65, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x52, 0x65,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03,
	0x52, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x42,
	0x65, 0x74, 0x41, 0x72, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6e, 0x65,
	0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x4a, 0x5f, 0x42, 0x65, 0x74, 0x52, 0x06, 0x42,
	0x65, 0x74, 0x41, 0x72, 0x72, 0x22, 0x5a, 0x0a, 0x08, 0x42, 0x4a, 0x5f, 0x46, 0x61, 0x70, 0x61,
	0x69, 0x12, 0x32, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x4a,
	0x5f, 0x63, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x54, 0x75, 0x72,
	0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x54, 0x75, 0x72,
	0x6e, 0x22, 0x77, 0x0a, 0x0e, 0x42, 0x4a, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x69, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x05, 0x53, 0x69, 0x74, 0x4e, 0x6f, 0x12, 0x2f, 0x0a, 0x08, 0x53, 0x69, 0x74,
	0x50, 0x6f, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x65,
	0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64,
	0x52, 0x08, 0x53, 0x69, 0x74, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x61,
	0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a,
	0x43, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x62, 0x0a, 0x0c, 0x42, 0x4a,
	0x5f, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x09, 0x73,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x73, 0x75,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x08, 0x52, 0x09, 0x69, 0x6e, 0x73,
	0x75, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x08, 0x52, 0x06, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x22, 0xa7,
	0x01, 0x0a, 0x0b, 0x42, 0x4a, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14,
	0x0a, 0x05, 0x53, 0x69, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x53,
	0x69, 0x74, 0x4e, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x68, 0x69, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x08, 0x52, 0x03, 0x68, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x08, 0x52, 0x05, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x70, 0x6c, 0x69, 0x74, 0x18, 0x04, 0x20, 0x02, 0x28, 0x08, 0x52, 0x05, 0x73, 0x70, 0x6c,
	0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x02,
	0x28, 0x08, 0x52, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x75,
	0x73, 0x74, 0x18, 0x06, 0x20, 0x02, 0x28, 0x08, 0x52, 0x04, 0x62, 0x75, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x4f, 0x70, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x07, 0x4f, 0x70, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x5f, 0x0a, 0x16, 0x42, 0x4a, 0x5f, 0x47,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x6e,
	0x65, 0x79, 0x12, 0x45, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x65,
	0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x4a, 0x5f, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65,
	0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x22, 0x2c, 0x0a, 0x14, 0x42, 0x4a, 0x5f,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x43, 0x75, 0x74, 0x70, 0x61, 0x69, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x69, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x05, 0x53, 0x69, 0x74, 0x4e, 0x6f, 0x22, 0x45, 0x0a, 0x17, 0x42, 0x4a, 0x5f, 0x42, 0x72,
	0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x43, 0x75, 0x74, 0x70, 0x61, 0x69, 0x52, 0x65, 0x74,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x69, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x05, 0x53, 0x69, 0x74, 0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x6c, 0x61, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x05, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x22, 0x3f,
	0x0a, 0x11, 0x42, 0x4a, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x74, 0x44, 0x69, 0x5a, 0x68,
	0x75, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x69, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x05, 0x53, 0x69, 0x74, 0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x6f, 0x6e,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x22,
	0x72, 0x0a, 0x11, 0x42, 0x4a, 0x5f, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x69, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x05, 0x53, 0x69, 0x74, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x57, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x57, 0x69, 0x6e, 0x12, 0x2b, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x42, 0x4a, 0x5f, 0x57, 0x69, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x22, 0x53, 0x0a, 0x0b, 0x42, 0x4a, 0x5f, 0x57, 0x69, 0x6e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x65, 0x6c, 0x66, 0x57, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x03, 0x52, 0x07, 0x53, 0x65, 0x6c, 0x66, 0x57, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x4e, 0x6f, 0x57, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x08, 0x52, 0x05, 0x4e, 0x6f, 0x57, 0x69, 0x6e, 0x22, 0xa4, 0x01, 0x0a, 0x09, 0x42, 0x4a, 0x5f,
	0x59, 0x61, 0x6f, 0x70, 0x61, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x69, 0x74, 0x4e, 0x6f, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x53, 0x69, 0x74, 0x4e, 0x6f, 0x12, 0x2f, 0x0a, 0x08,
	0x53, 0x69, 0x74, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x43,
	0x61, 0x72, 0x64, 0x52, 0x08, 0x53, 0x69, 0x74, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x4c, 0x61, 0x73, 0x74, 0x54, 0x75, 0x72, 0x6e, 0x18, 0x03, 0x20, 0x02, 0x28, 0x08, 0x52,
	0x08, 0x4c, 0x61, 0x73, 0x74, 0x54, 0x75, 0x72, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x6f, 0x75,
	0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x08, 0x52, 0x06, 0x44, 0x6f, 0x75, 0x62, 0x6c,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x43, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22,
	0x5a, 0x0a, 0x09, 0x42, 0x4a, 0x5f, 0x46, 0x61, 0x6e, 0x50, 0x61, 0x69, 0x12, 0x2f, 0x0a, 0x08,
	0x53, 0x69, 0x74, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x43,
	0x61, 0x72, 0x64, 0x52, 0x08, 0x53, 0x69, 0x74, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x43, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x09, 0x43, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x40, 0x0a, 0x0e, 0x42,
	0x4a, 0x5f, 0x57, 0x61, 0x69, 0x74, 0x4f, 0x70, 0x74, 0x53, 0x65, 0x61, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x53, 0x69, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x53, 0x69,
	0x74, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x70, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x4f, 0x70, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x20, 0x0a,
	0x08, 0x42, 0x4a, 0x5f, 0x53, 0x69, 0x74, 0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x69, 0x74,
	0x4e, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x53, 0x69, 0x74, 0x4e, 0x6f, 0x22,
	0x6e, 0x0a, 0x0e, 0x42, 0x4a, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x72,
	0x72, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x75, 0x72, 0x72, 0x4f, 0x70, 0x74, 0x53, 0x65, 0x61, 0x74,
	0x6e, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0d, 0x43, 0x75, 0x72, 0x72, 0x4f, 0x70,
	0x74, 0x53, 0x65, 0x61, 0x74, 0x6e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x70, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x4f, 0x70, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0xf6, 0x01, 0x0a, 0x0c, 0x42, 0x4a, 0x5f, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x53, 0x69, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x05, 0x53, 0x69, 0x74, 0x4e, 0x6f, 0x12, 0x2f, 0x0a, 0x08, 0x53, 0x69, 0x74, 0x50, 0x6f, 0x6b,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x52, 0x08, 0x53,
	0x69, 0x74, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x70, 0x6c, 0x69, 0x74,
	0x53, 0x69, 0x74, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x53, 0x70, 0x6c,
	0x69, 0x74, 0x53, 0x69, 0x74, 0x4e, 0x6f, 0x12, 0x39, 0x0a, 0x0d, 0x53, 0x70, 0x6c, 0x69, 0x74,
	0x53, 0x69, 0x74, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x43,
	0x61, 0x72, 0x64, 0x52, 0x0d, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x53, 0x69, 0x74, 0x50, 0x6f, 0x6b,
	0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x43, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x26, 0x0a, 0x0e, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x06, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0e, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x43,
	0x61, 0x72, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x76, 0x0a, 0x0f, 0x42, 0x4a, 0x5f, 0x5a,
	0x68, 0x75, 0x61, 0x6e, 0x67, 0x59, 0x61, 0x6f, 0x50, 0x61, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x53,
	0x69, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x53, 0x69, 0x74, 0x4e,
	0x6f, 0x12, 0x2f, 0x0a, 0x08, 0x53, 0x69, 0x74, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x6f, 0x6b, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x52, 0x08, 0x53, 0x69, 0x74, 0x50, 0x6f, 0x6b,
	0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x43, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0x6c, 0x0a, 0x0f, 0x42, 0x4a, 0x5f, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x53, 0x63,
	0x65, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x41, 0x0a, 0x0d, 0x52,
	0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x42, 0x65, 0x74, 0x41, 0x72, 0x72, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x4a,
	0x5f, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x42, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0d, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x42, 0x65, 0x74, 0x41, 0x72, 0x72, 0x22, 0x3d,
	0x0a, 0x11, 0x42, 0x4a, 0x5f, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x42, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x22, 0x5a, 0x0a,
	0x16, 0x42, 0x4a, 0x5f, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x42, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x03, 0x52, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x22, 0x2c, 0x0a, 0x0c, 0x42, 0x4a, 0x5f,
	0x52, 0x65, 0x61, 0x64, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x61,
	0x64, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65,
	0x61, 0x64, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x54, 0x0a, 0x13, 0x42, 0x4a, 0x5f, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x3d,
	0x0a, 0x0c, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x42, 0x4a, 0x5f, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52,
	0x0c, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x22, 0x8e, 0x01,
	0x0a, 0x0f, 0x42, 0x4a, 0x5f, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x69, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x05, 0x53, 0x69, 0x74, 0x4e, 0x6f, 0x12, 0x2f, 0x0a, 0x08, 0x53, 0x69, 0x74, 0x50, 0x6f,
	0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x65, 0x74, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x52, 0x08,
	0x53, 0x69, 0x74, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x72, 0x64,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x43, 0x61, 0x72,
	0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x02, 0x28, 0x08, 0x52, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x22, 0x85,
	0x01, 0x0a, 0x11, 0x42, 0x4a, 0x5f, 0x57, 0x69, 0x6e, 0x4c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0c,
	0x57, 0x69, 0x6e, 0x4c, 0x6f, 0x73, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x4a,
	0x5f, 0x57, 0x69, 0x6e, 0x4c, 0x6f, 0x73, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0c,
	0x57, 0x69, 0x6e, 0x4c, 0x6f, 0x73, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07,
	0x57, 0x69, 0x6e, 0x4c, 0x6f, 0x73, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x07, 0x57,
	0x69, 0x6e, 0x4c, 0x6f, 0x73, 0x65, 0x22, 0x42, 0x0a, 0x10, 0x42, 0x4a, 0x5f, 0x57, 0x69, 0x6e,
	0x4c, 0x6f, 0x73, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x65,
	0x6c, 0x66, 0x57, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x07, 0x53, 0x65, 0x6c,
	0x66, 0x57, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x4a, 0x0a, 0x0c, 0x42, 0x4a,
	0x5f, 0x57, 0x61, 0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x0b, 0x57, 0x61,
	0x74, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x4a, 0x5f, 0x57, 0x61,
	0x74, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0b, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x3e, 0x0a, 0x0e, 0x42, 0x4a, 0x5f, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x57, 0x61, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x02, 0x28, 0x08, 0x52,
	0x05, 0x57, 0x61, 0x74, 0x63, 0x68, 0x22, 0x58, 0x0a, 0x14, 0x42, 0x4a, 0x5f, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x40,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x42, 0x4a, 0x5f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65,
	0x74, 0x52, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x74,
	0x22, 0x46, 0x0a, 0x10, 0x42, 0x4a, 0x5f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x42, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08,
	0x42, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x22, 0x8b, 0x01, 0x0a, 0x0d, 0x42, 0x4a, 0x53,
	0x79, 0x73, 0x50, 0x6f, 0x6f, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x6c,
	0x61, 0x67, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x46, 0x6c, 0x61, 0x67,
	0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x75, 0x6d, 0x42, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0b, 0x53, 0x75, 0x6d, 0x42, 0x65, 0x74, 0x4d,
	0x6f, 0x6e, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x75, 0x6d, 0x42, 0x65, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0b, 0x53, 0x75, 0x6d, 0x42, 0x65,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6f, 0x6f, 0x6c, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0a, 0x50, 0x6f, 0x6f, 0x6c,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb4, 0x01, 0x0a, 0x0c, 0x42, 0x4a, 0x5f, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x4e, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e,
	0x6f, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x68, 0x6f, 0x65, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x06, 0x53, 0x68, 0x6f, 0x65, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d,
	0x65, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x4e,
	0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x69, 0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x08, 0x4d, 0x69, 0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x4d, 0x61, 0x78, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x08, 0x4d, 0x61, 0x78, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x68, 0x6f,
	0x65, 0x4c, 0x61, 0x76, 0x65, 0x43, 0x61, 0x72, 0x64, 0x18, 0x07, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x0c, 0x53, 0x68, 0x6f, 0x65, 0x4c, 0x61, 0x76, 0x65, 0x43, 0x61, 0x72, 0x64, 0x42, 0x0c, 0x5a,
	0x0a, 0x2e, 0x2f, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_GameMsg_BJ_proto_rawDescOnce sync.Once
	file_GameMsg_BJ_proto_rawDescData = file_GameMsg_BJ_proto_rawDesc
)

func file_GameMsg_BJ_proto_rawDescGZIP() []byte {
	file_GameMsg_BJ_proto_rawDescOnce.Do(func() {
		file_GameMsg_BJ_proto_rawDescData = protoimpl.X.CompressGZIP(file_GameMsg_BJ_proto_rawDescData)
	})
	return file_GameMsg_BJ_proto_rawDescData
}

var file_GameMsg_BJ_proto_msgTypes = make([]protoimpl.MessageInfo, 39)
var file_GameMsg_BJ_proto_goTypes = []interface{}{
	(*BJ_Setting)(nil),              // 0: netproto.BJ_Setting
	(*BJ_Sate)(nil),                 // 1: netproto.BJ_Sate
	(*BJ_UserBetInfo)(nil),          // 2: netproto.BJ_UserBetInfo
	(*BJ_BroadCastBetArr)(nil),      // 3: netproto.BJ_BroadCastBetArr
	(*BJ_BroadCastBet)(nil),         // 4: netproto.BJ_BroadCastBet
	(*BJ_BetArr)(nil),               // 5: netproto.BJ_BetArr
	(*BJ_Bet)(nil),                  // 6: netproto.BJ_Bet
	(*BJ_BetRet)(nil),               // 7: netproto.BJ_BetRet
	(*BJ_Fapai)(nil),                // 8: netproto.BJ_Fapai
	(*BJCardContent)(nil),           // 9: netproto.BJ_cardContent
	(*BJ_UserCheck)(nil),            // 10: netproto.BJ_UserCheck
	(*BJ_UserInfo)(nil),             // 11: netproto.BJ_UserInfo
	(*BJ_GameResultUserMoney)(nil),  // 12: netproto.BJ_GameResultUserMoney
	(*BJ_BroadCastCutpaiID)(nil),    // 13: netproto.BJ_BroadCastCutpaiID
	(*BJ_BroadCastCutpaiRetID)(nil), // 14: netproto.BJ_BroadCastCutpaiRetID
	(*BJ_UserBetDiZhuID)(nil),       // 15: netproto.BJ_UserBetDiZhuID
	(*BJ_GameSettlement)(nil),       // 16: netproto.BJ_GameSettlement
	(*BJ_WinBlock)(nil),             // 17: netproto.BJ_WinBlock
	(*BJ_Yaopai)(nil),               // 18: netproto.BJ_Yaopai
	(*BJ_FanPai)(nil),               // 19: netproto.BJ_FanPai
	(*BJ_WaitOptSeat)(nil),          // 20: netproto.BJ_WaitOptSeat
	(*BJ_SitNo)(nil),                // 21: netproto.BJ_SitNo
	(*BJ_UserInfoArr)(nil),          // 22: netproto.BJ_UserInfoArr
	(*BJ_SplitCard)(nil),            // 23: netproto.BJ_SplitCard
	(*BJ_ZhuangYaoPai)(nil),         // 24: netproto.BJ_ZhuangYaoPai
	(*BJ_RecoverScene)(nil),         // 25: netproto.BJ_RecoverScene
	(*BJ_RecoverBetInfo)(nil),       // 26: netproto.BJ_RecoverBetInfo
	(*BJ_BroadCastSpecialBet)(nil),  // 27: netproto.BJ_BroadCastSpecialBet
	(*BJ_ReadyTime)(nil),            // 28: netproto.BJ_ReadyTime
	(*BJ_UserPokerRecover)(nil),     // 29: netproto.BJ_UserPokerRecover
	(*BJ_PokerRecover)(nil),         // 30: netproto.BJ_PokerRecover
	(*BJ_WinLoseRecover)(nil),       // 31: netproto.BJ_WinLoseRecover
	(*BJ_WinLoseDetail)(nil),        // 32: netproto.BJ_WinLoseDetail
	(*BJ_WatchData)(nil),            // 33: netproto.BJ_WatchData
	(*BJ_WatchDetail)(nil),          // 34: netproto.BJ_WatchDetail
	(*BJ_GetAllUserBetList)(nil),    // 35: netproto.BJ_GetAllUserBetList
	(*BJ_GetAllUserBet)(nil),        // 36: netproto.BJ_GetAllUserBet
	(*BJSysPoolData)(nil),           // 37: netproto.BJSysPoolData
	(*BJ_TableInfo)(nil),            // 38: netproto.BJ_TableInfo
	(*PokerCard)(nil),               // 39: netproto.PokerCard
}
var file_GameMsg_BJ_proto_depIdxs = []int32{
	4,  // 0: netproto.BJ_UserBetInfo.BetInfo:type_name -> netproto.BJ_BroadCastBet
	4,  // 1: netproto.BJ_BroadCastBetArr.BroadCastBetArr:type_name -> netproto.BJ_BroadCastBet
	6,  // 2: netproto.BJ_BetArr.BetArr:type_name -> netproto.BJ_Bet
	6,  // 3: netproto.BJ_BetRet.BetArr:type_name -> netproto.BJ_Bet
	9,  // 4: netproto.BJ_Fapai.Content:type_name -> netproto.BJ_cardContent
	39, // 5: netproto.BJ_cardContent.SitPoker:type_name -> netproto.PokerCard
	16, // 6: netproto.BJ_GameResultUserMoney.ResultUserMoney:type_name -> netproto.BJ_GameSettlement
	17, // 7: netproto.BJ_GameSettlement.Block:type_name -> netproto.BJ_WinBlock
	39, // 8: netproto.BJ_Yaopai.SitPoker:type_name -> netproto.PokerCard
	39, // 9: netproto.BJ_FanPai.SitPoker:type_name -> netproto.PokerCard
	39, // 10: netproto.BJ_SplitCard.SitPoker:type_name -> netproto.PokerCard
	39, // 11: netproto.BJ_SplitCard.SplitSitPoker:type_name -> netproto.PokerCard
	39, // 12: netproto.BJ_ZhuangYaoPai.SitPoker:type_name -> netproto.PokerCard
	26, // 13: netproto.BJ_RecoverScene.RecoverBetArr:type_name -> netproto.BJ_RecoverBetInfo
	30, // 14: netproto.BJ_UserPokerRecover.PokerRecover:type_name -> netproto.BJ_PokerRecover
	39, // 15: netproto.BJ_PokerRecover.SitPoker:type_name -> netproto.PokerCard
	32, // 16: netproto.BJ_WinLoseRecover.WinLoseBlock:type_name -> netproto.BJ_WinLoseDetail
	34, // 17: netproto.BJ_WatchData.WatchDetail:type_name -> netproto.BJ_WatchDetail
	36, // 18: netproto.BJ_GetAllUserBetList.GetAllUserBet:type_name -> netproto.BJ_GetAllUserBet
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_GameMsg_BJ_proto_init() }
func file_GameMsg_BJ_proto_init() {
	if File_GameMsg_BJ_proto != nil {
		return
	}
	file_GameMsg_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_GameMsg_BJ_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BJ_Setting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_BJ_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BJ_Sate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_BJ_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BJ_UserBetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_BJ_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BJ_BroadCastBetArr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_BJ_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BJ_BroadCastBet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_BJ_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BJ_BetArr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_BJ_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BJ_Bet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_BJ_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BJ_BetRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_BJ_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BJ_Fapai); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_BJ_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BJCardContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_BJ_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BJ_UserCheck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_BJ_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BJ_UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_BJ_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BJ_GameResultUserMoney); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_BJ_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BJ_BroadCastCutpaiID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_BJ_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BJ_BroadCastCutpaiRetID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_BJ_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BJ_UserBetDiZhuID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_BJ_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BJ_GameSettlement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_BJ_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BJ_WinBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_BJ_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BJ_Yaopai); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_BJ_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BJ_FanPai); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_BJ_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BJ_WaitOptSeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_BJ_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BJ_SitNo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_BJ_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BJ_UserInfoArr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_BJ_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BJ_SplitCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_BJ_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BJ_ZhuangYaoPai); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_BJ_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BJ_RecoverScene); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_BJ_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BJ_RecoverBetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_BJ_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BJ_BroadCastSpecialBet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_BJ_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BJ_ReadyTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_BJ_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BJ_UserPokerRecover); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_BJ_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BJ_PokerRecover); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_BJ_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BJ_WinLoseRecover); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_BJ_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BJ_WinLoseDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_BJ_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BJ_WatchData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_BJ_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BJ_WatchDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_BJ_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BJ_GetAllUserBetList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_BJ_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BJ_GetAllUserBet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_BJ_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BJSysPoolData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_BJ_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BJ_TableInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_GameMsg_BJ_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   39,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_GameMsg_BJ_proto_goTypes,
		DependencyIndexes: file_GameMsg_BJ_proto_depIdxs,
		MessageInfos:      file_GameMsg_BJ_proto_msgTypes,
	}.Build()
	File_GameMsg_BJ_proto = out.File
	file_GameMsg_BJ_proto_rawDesc = nil
	file_GameMsg_BJ_proto_goTypes = nil
	file_GameMsg_BJ_proto_depIdxs = nil
}
