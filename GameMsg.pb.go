// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0-devel
// 	protoc        v3.19.1
// source: GameMsg.proto

package netproto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type TestGameChat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *string `protobuf:"bytes,1,req,name=Message" json:"Message,omitempty"`
}

func (x *TestGameChat) Reset() {
	*x = TestGameChat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestGameChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestGameChat) ProtoMessage() {}

func (x *TestGameChat) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestGameChat.ProtoReflect.Descriptor instead.
func (*TestGameChat) Descriptor() ([]byte, []int) {
	return file_GameMsg_proto_rawDescGZIP(), []int{0}
}

func (x *TestGameChat) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

type TestGameScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Score *int32 `protobuf:"varint,1,req,name=Score" json:"Score,omitempty"`
}

func (x *TestGameScore) Reset() {
	*x = TestGameScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestGameScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestGameScore) ProtoMessage() {}

func (x *TestGameScore) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestGameScore.ProtoReflect.Descriptor instead.
func (*TestGameScore) Descriptor() ([]byte, []int) {
	return file_GameMsg_proto_rawDescGZIP(), []int{1}
}

func (x *TestGameScore) GetScore() int32 {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return 0
}

type TestGameEnd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TestGameEnd) Reset() {
	*x = TestGameEnd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestGameEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestGameEnd) ProtoMessage() {}

func (x *TestGameEnd) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestGameEnd.ProtoReflect.Descriptor instead.
func (*TestGameEnd) Descriptor() ([]byte, []int) {
	return file_GameMsg_proto_rawDescGZIP(), []int{2}
}

type UserEnter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User          *GameUser `protobuf:"bytes,1,req,name=User" json:"User,omitempty"`
	WaitReadyTime *int32    `protobuf:"varint,2,opt,name=WaitReadyTime" json:"WaitReadyTime,omitempty"`
}

func (x *UserEnter) Reset() {
	*x = UserEnter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserEnter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserEnter) ProtoMessage() {}

func (x *UserEnter) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserEnter.ProtoReflect.Descriptor instead.
func (*UserEnter) Descriptor() ([]byte, []int) {
	return file_GameMsg_proto_rawDescGZIP(), []int{3}
}

func (x *UserEnter) GetUser() *GameUser {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UserEnter) GetWaitReadyTime() int32 {
	if x != nil && x.WaitReadyTime != nil {
		return *x.WaitReadyTime
	}
	return 0
}

type UserLeave struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *GameUser `protobuf:"bytes,1,req,name=User" json:"User,omitempty"`
}

func (x *UserLeave) Reset() {
	*x = UserLeave{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLeave) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLeave) ProtoMessage() {}

func (x *UserLeave) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLeave.ProtoReflect.Descriptor instead.
func (*UserLeave) Descriptor() ([]byte, []int) {
	return file_GameMsg_proto_rawDescGZIP(), []int{4}
}

func (x *UserLeave) GetUser() *GameUser {
	if x != nil {
		return x.User
	}
	return nil
}

type UserStateChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *GameUser `protobuf:"bytes,1,req,name=User" json:"User,omitempty"`
}

func (x *UserStateChange) Reset() {
	*x = UserStateChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserStateChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStateChange) ProtoMessage() {}

func (x *UserStateChange) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStateChange.ProtoReflect.Descriptor instead.
func (*UserStateChange) Descriptor() ([]byte, []int) {
	return file_GameMsg_proto_rawDescGZIP(), []int{5}
}

func (x *UserStateChange) GetUser() *GameUser {
	if x != nil {
		return x.User
	}
	return nil
}

type GameUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID          *int32  `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`
	NickName        *string `protobuf:"bytes,2,req,name=NickName" json:"NickName,omitempty"`
	Sex             *int32  `protobuf:"varint,3,req,name=Sex" json:"Sex,omitempty"`
	FaceID          *int32  `protobuf:"varint,4,req,name=FaceID" json:"FaceID,omitempty"`
	Score           *int64  `protobuf:"varint,5,req,name=Score" json:"Score,omitempty"`
	WinCount        *int32  `protobuf:"varint,6,req,name=WinCount" json:"WinCount,omitempty"`
	LoseCount       *int32  `protobuf:"varint,7,req,name=LoseCount" json:"LoseCount,omitempty"`
	DrawCount       *int32  `protobuf:"varint,8,req,name=DrawCount" json:"DrawCount,omitempty"`
	StateValue      *int32  `protobuf:"varint,9,req,name=StateValue" json:"StateValue,omitempty"`
	TableNo         *int32  `protobuf:"varint,10,req,name=TableNo" json:"TableNo,omitempty"`
	SeatNo          *int32  `protobuf:"varint,11,req,name=SeatNo" json:"SeatNo,omitempty"`
	TotalScore      *int64  `protobuf:"varint,12,opt,name=TotalScore" json:"TotalScore,omitempty"`
	JFddzScore      *int32  `protobuf:"varint,13,opt,name=JFddzScore" json:"JFddzScore,omitempty"`           //斗地主积分赛用于排名次的积分
	JFddzRank       *int32  `protobuf:"varint,14,opt,name=JFddzRank" json:"JFddzRank,omitempty"`             //斗地主积分赛当前排名名次
	JFddzUserCT     *int32  `protobuf:"varint,15,opt,name=JFddzUserCT" json:"JFddzUserCT,omitempty"`         //斗地主积分赛当前已晋级总人数
	JFddzNextUserCT *int32  `protobuf:"varint,16,opt,name=JFddzNextUserCT" json:"JFddzNextUserCT,omitempty"` //斗地主积分赛下一轮可晋级人数
	XiuXianScore    *int64  `protobuf:"varint,17,opt,name=XiuXianScore" json:"XiuXianScore,omitempty"`       //休闲版斗地主豆子数
}

func (x *GameUser) Reset() {
	*x = GameUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameUser) ProtoMessage() {}

func (x *GameUser) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameUser.ProtoReflect.Descriptor instead.
func (*GameUser) Descriptor() ([]byte, []int) {
	return file_GameMsg_proto_rawDescGZIP(), []int{6}
}

func (x *GameUser) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *GameUser) GetNickName() string {
	if x != nil && x.NickName != nil {
		return *x.NickName
	}
	return ""
}

func (x *GameUser) GetSex() int32 {
	if x != nil && x.Sex != nil {
		return *x.Sex
	}
	return 0
}

func (x *GameUser) GetFaceID() int32 {
	if x != nil && x.FaceID != nil {
		return *x.FaceID
	}
	return 0
}

func (x *GameUser) GetScore() int64 {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return 0
}

func (x *GameUser) GetWinCount() int32 {
	if x != nil && x.WinCount != nil {
		return *x.WinCount
	}
	return 0
}

func (x *GameUser) GetLoseCount() int32 {
	if x != nil && x.LoseCount != nil {
		return *x.LoseCount
	}
	return 0
}

func (x *GameUser) GetDrawCount() int32 {
	if x != nil && x.DrawCount != nil {
		return *x.DrawCount
	}
	return 0
}

func (x *GameUser) GetStateValue() int32 {
	if x != nil && x.StateValue != nil {
		return *x.StateValue
	}
	return 0
}

func (x *GameUser) GetTableNo() int32 {
	if x != nil && x.TableNo != nil {
		return *x.TableNo
	}
	return 0
}

func (x *GameUser) GetSeatNo() int32 {
	if x != nil && x.SeatNo != nil {
		return *x.SeatNo
	}
	return 0
}

func (x *GameUser) GetTotalScore() int64 {
	if x != nil && x.TotalScore != nil {
		return *x.TotalScore
	}
	return 0
}

func (x *GameUser) GetJFddzScore() int32 {
	if x != nil && x.JFddzScore != nil {
		return *x.JFddzScore
	}
	return 0
}

func (x *GameUser) GetJFddzRank() int32 {
	if x != nil && x.JFddzRank != nil {
		return *x.JFddzRank
	}
	return 0
}

func (x *GameUser) GetJFddzUserCT() int32 {
	if x != nil && x.JFddzUserCT != nil {
		return *x.JFddzUserCT
	}
	return 0
}

func (x *GameUser) GetJFddzNextUserCT() int32 {
	if x != nil && x.JFddzNextUserCT != nil {
		return *x.JFddzNextUserCT
	}
	return 0
}

func (x *GameUser) GetXiuXianScore() int64 {
	if x != nil && x.XiuXianScore != nil {
		return *x.XiuXianScore
	}
	return 0
}

type GamePoker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Poker []*UserPoker `protobuf:"bytes,1,rep,name=Poker" json:"Poker,omitempty"`
}

func (x *GamePoker) Reset() {
	*x = GamePoker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GamePoker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GamePoker) ProtoMessage() {}

func (x *GamePoker) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GamePoker.ProtoReflect.Descriptor instead.
func (*GamePoker) Descriptor() ([]byte, []int) {
	return file_GameMsg_proto_rawDescGZIP(), []int{7}
}

func (x *GamePoker) GetPoker() []*UserPoker {
	if x != nil {
		return x.Poker
	}
	return nil
}

type UserPoker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID *int32       `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`
	SeatNo *int32       `protobuf:"varint,2,req,name=SeatNo" json:"SeatNo,omitempty"`
	Cards  []*PokerCard `protobuf:"bytes,3,rep,name=Cards" json:"Cards,omitempty"`
}

func (x *UserPoker) Reset() {
	*x = UserPoker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPoker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPoker) ProtoMessage() {}

func (x *UserPoker) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPoker.ProtoReflect.Descriptor instead.
func (*UserPoker) Descriptor() ([]byte, []int) {
	return file_GameMsg_proto_rawDescGZIP(), []int{8}
}

func (x *UserPoker) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *UserPoker) GetSeatNo() int32 {
	if x != nil && x.SeatNo != nil {
		return *x.SeatNo
	}
	return 0
}

func (x *UserPoker) GetCards() []*PokerCard {
	if x != nil {
		return x.Cards
	}
	return nil
}

type PokerCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color      *int32 `protobuf:"varint,1,req,name=Color" json:"Color,omitempty"`
	CardNumber *int32 `protobuf:"varint,2,req,name=CardNumber" json:"CardNumber,omitempty"`
}

func (x *PokerCard) Reset() {
	*x = PokerCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PokerCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PokerCard) ProtoMessage() {}

func (x *PokerCard) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PokerCard.ProtoReflect.Descriptor instead.
func (*PokerCard) Descriptor() ([]byte, []int) {
	return file_GameMsg_proto_rawDescGZIP(), []int{9}
}

func (x *PokerCard) GetColor() int32 {
	if x != nil && x.Color != nil {
		return *x.Color
	}
	return 0
}

func (x *PokerCard) GetCardNumber() int32 {
	if x != nil && x.CardNumber != nil {
		return *x.CardNumber
	}
	return 0
}

type UserActionCommited struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionName *string `protobuf:"bytes,1,req,name=ActionName" json:"ActionName,omitempty"`
}

func (x *UserActionCommited) Reset() {
	*x = UserActionCommited{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserActionCommited) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserActionCommited) ProtoMessage() {}

func (x *UserActionCommited) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserActionCommited.ProtoReflect.Descriptor instead.
func (*UserActionCommited) Descriptor() ([]byte, []int) {
	return file_GameMsg_proto_rawDescGZIP(), []int{10}
}

func (x *UserActionCommited) GetActionName() string {
	if x != nil && x.ActionName != nil {
		return *x.ActionName
	}
	return ""
}

type AllUserActionCommited struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionName *string `protobuf:"bytes,1,req,name=ActionName" json:"ActionName,omitempty"`
}

func (x *AllUserActionCommited) Reset() {
	*x = AllUserActionCommited{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllUserActionCommited) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllUserActionCommited) ProtoMessage() {}

func (x *AllUserActionCommited) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllUserActionCommited.ProtoReflect.Descriptor instead.
func (*AllUserActionCommited) Descriptor() ([]byte, []int) {
	return file_GameMsg_proto_rawDescGZIP(), []int{11}
}

func (x *AllUserActionCommited) GetActionName() string {
	if x != nil && x.ActionName != nil {
		return *x.ActionName
	}
	return ""
}

type LookOnUserNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID []int32 `protobuf:"varint,1,rep,name=UserID" json:"UserID,omitempty"`
}

func (x *LookOnUserNotify) Reset() {
	*x = LookOnUserNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookOnUserNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookOnUserNotify) ProtoMessage() {}

func (x *LookOnUserNotify) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookOnUserNotify.ProtoReflect.Descriptor instead.
func (*LookOnUserNotify) Descriptor() ([]byte, []int) {
	return file_GameMsg_proto_rawDescGZIP(), []int{12}
}

func (x *LookOnUserNotify) GetUserID() []int32 {
	if x != nil {
		return x.UserID
	}
	return nil
}

type UserLuckScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID *int32 `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`
	Score  *int64 `protobuf:"varint,2,req,name=Score" json:"Score,omitempty"`
}

func (x *UserLuckScore) Reset() {
	*x = UserLuckScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLuckScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLuckScore) ProtoMessage() {}

func (x *UserLuckScore) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLuckScore.ProtoReflect.Descriptor instead.
func (*UserLuckScore) Descriptor() ([]byte, []int) {
	return file_GameMsg_proto_rawDescGZIP(), []int{13}
}

func (x *UserLuckScore) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *UserLuckScore) GetScore() int64 {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return 0
}

type GameBeginCountDown struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time *int32 `protobuf:"varint,1,req,name=Time" json:"Time,omitempty"`
}

func (x *GameBeginCountDown) Reset() {
	*x = GameBeginCountDown{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameBeginCountDown) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameBeginCountDown) ProtoMessage() {}

func (x *GameBeginCountDown) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameBeginCountDown.ProtoReflect.Descriptor instead.
func (*GameBeginCountDown) Descriptor() ([]byte, []int) {
	return file_GameMsg_proto_rawDescGZIP(), []int{14}
}

func (x *GameBeginCountDown) GetTime() int32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

type UserLuckScoreRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID *int32  `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`
	Value  *string `protobuf:"bytes,2,req,name=Value" json:"Value,omitempty"`
}

func (x *UserLuckScoreRet) Reset() {
	*x = UserLuckScoreRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLuckScoreRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLuckScoreRet) ProtoMessage() {}

func (x *UserLuckScoreRet) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLuckScoreRet.ProtoReflect.Descriptor instead.
func (*UserLuckScoreRet) Descriptor() ([]byte, []int) {
	return file_GameMsg_proto_rawDescGZIP(), []int{15}
}

func (x *UserLuckScoreRet) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *UserLuckScoreRet) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type GameResultUserWin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   *int32 `protobuf:"varint,1,req,name=UserID" json:"UserID,omitempty"`     //玩家ID
	WinMoney *int64 `protobuf:"varint,2,req,name=WinMoney" json:"WinMoney,omitempty"` //输赢钱
}

func (x *GameResultUserWin) Reset() {
	*x = GameResultUserWin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameResultUserWin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameResultUserWin) ProtoMessage() {}

func (x *GameResultUserWin) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameResultUserWin.ProtoReflect.Descriptor instead.
func (*GameResultUserWin) Descriptor() ([]byte, []int) {
	return file_GameMsg_proto_rawDescGZIP(), []int{16}
}

func (x *GameResultUserWin) GetUserID() int32 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *GameResultUserWin) GetWinMoney() int64 {
	if x != nil && x.WinMoney != nil {
		return *x.WinMoney
	}
	return 0
}

type GameResultWin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZhuangWin   *int64               `protobuf:"varint,1,req,name=ZhuangWin" json:"ZhuangWin,omitempty"`
	SelfWin     *int64               `protobuf:"varint,2,req,name=SelfWin" json:"SelfWin,omitempty"`
	Result      *uint32              `protobuf:"varint,3,req,name=Result" json:"Result,omitempty"`          //组合结果
	WinUserInfo []*GameResultUserWin `protobuf:"bytes,4,rep,name=WinUserInfo" json:"WinUserInfo,omitempty"` //所有人输赢数据
}

func (x *GameResultWin) Reset() {
	*x = GameResultWin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameResultWin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameResultWin) ProtoMessage() {}

func (x *GameResultWin) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameResultWin.ProtoReflect.Descriptor instead.
func (*GameResultWin) Descriptor() ([]byte, []int) {
	return file_GameMsg_proto_rawDescGZIP(), []int{17}
}

func (x *GameResultWin) GetZhuangWin() int64 {
	if x != nil && x.ZhuangWin != nil {
		return *x.ZhuangWin
	}
	return 0
}

func (x *GameResultWin) GetSelfWin() int64 {
	if x != nil && x.SelfWin != nil {
		return *x.SelfWin
	}
	return 0
}

func (x *GameResultWin) GetResult() uint32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

func (x *GameResultWin) GetWinUserInfo() []*GameResultUserWin {
	if x != nil {
		return x.WinUserInfo
	}
	return nil
}

type GameUserBetHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User     *GameUser `protobuf:"bytes,1,req,name=User" json:"User,omitempty"`
	BetTotal *int64    `protobuf:"varint,2,req,name=BetTotal" json:"BetTotal,omitempty"` // 下注总额
	WinCount *uint32   `protobuf:"varint,3,req,name=WinCount" json:"WinCount,omitempty"` // 赢次数
}

func (x *GameUserBetHistory) Reset() {
	*x = GameUserBetHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameUserBetHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameUserBetHistory) ProtoMessage() {}

func (x *GameUserBetHistory) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameUserBetHistory.ProtoReflect.Descriptor instead.
func (*GameUserBetHistory) Descriptor() ([]byte, []int) {
	return file_GameMsg_proto_rawDescGZIP(), []int{18}
}

func (x *GameUserBetHistory) GetUser() *GameUser {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *GameUserBetHistory) GetBetTotal() int64 {
	if x != nil && x.BetTotal != nil {
		return *x.BetTotal
	}
	return 0
}

func (x *GameUserBetHistory) GetWinCount() uint32 {
	if x != nil && x.WinCount != nil {
		return *x.WinCount
	}
	return 0
}

type GameUserBetHistoryRank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxWinCountUser *GameUserBetHistory   `protobuf:"bytes,1,req,name=MaxWinCountUser" json:"MaxWinCountUser,omitempty"` // 先知
	BetRankList     []*GameUserBetHistory `protobuf:"bytes,2,rep,name=BetRankList" json:"BetRankList,omitempty"`         // 下注排行
}

func (x *GameUserBetHistoryRank) Reset() {
	*x = GameUserBetHistoryRank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameUserBetHistoryRank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameUserBetHistoryRank) ProtoMessage() {}

func (x *GameUserBetHistoryRank) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameUserBetHistoryRank.ProtoReflect.Descriptor instead.
func (*GameUserBetHistoryRank) Descriptor() ([]byte, []int) {
	return file_GameMsg_proto_rawDescGZIP(), []int{19}
}

func (x *GameUserBetHistoryRank) GetMaxWinCountUser() *GameUserBetHistory {
	if x != nil {
		return x.MaxWinCountUser
	}
	return nil
}

func (x *GameUserBetHistoryRank) GetBetRankList() []*GameUserBetHistory {
	if x != nil {
		return x.BetRankList
	}
	return nil
}

type GameCheatCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     *int32   `protobuf:"varint,1,req,name=Type" json:"Type,omitempty"`
	ParamStr []string `protobuf:"bytes,2,rep,name=ParamStr" json:"ParamStr,omitempty"`
	ParamInt []int32  `protobuf:"varint,3,rep,name=ParamInt" json:"ParamInt,omitempty"`
}

func (x *GameCheatCode) Reset() {
	*x = GameCheatCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameCheatCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameCheatCode) ProtoMessage() {}

func (x *GameCheatCode) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameCheatCode.ProtoReflect.Descriptor instead.
func (*GameCheatCode) Descriptor() ([]byte, []int) {
	return file_GameMsg_proto_rawDescGZIP(), []int{20}
}

func (x *GameCheatCode) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *GameCheatCode) GetParamStr() []string {
	if x != nil {
		return x.ParamStr
	}
	return nil
}

func (x *GameCheatCode) GetParamInt() []int32 {
	if x != nil {
		return x.ParamInt
	}
	return nil
}

type GameMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content *string  `protobuf:"bytes,1,req,name=Content" json:"Content,omitempty"`
	Params  []string `protobuf:"bytes,2,rep,name=Params" json:"Params,omitempty"`
}

func (x *GameMessage) Reset() {
	*x = GameMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GameMsg_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameMessage) ProtoMessage() {}

func (x *GameMessage) ProtoReflect() protoreflect.Message {
	mi := &file_GameMsg_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameMessage.ProtoReflect.Descriptor instead.
func (*GameMessage) Descriptor() ([]byte, []int) {
	return file_GameMsg_proto_rawDescGZIP(), []int{21}
}

func (x *GameMessage) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *GameMessage) GetParams() []string {
	if x != nil {
		return x.Params
	}
	return nil
}

var File_GameMsg_proto protoreflect.FileDescriptor

var file_GameMsg_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x08, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x28, 0x0a, 0x0c, 0x54, 0x65, 0x73,
	0x74, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x25, 0x0a, 0x0d, 0x54, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x0d, 0x0a, 0x0b, 0x54, 0x65,
	0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x22, 0x59, 0x0a, 0x09, 0x55, 0x73, 0x65,
	0x72, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x24,
	0x0a, 0x0d, 0x57, 0x61, 0x69, 0x74, 0x52, 0x65, 0x61, 0x64, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x57, 0x61, 0x69, 0x74, 0x52, 0x65, 0x61, 0x64, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x33, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x61, 0x76,
	0x65, 0x12, 0x26, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x04, 0x55, 0x73, 0x65, 0x72, 0x22, 0x39, 0x0a, 0x0f, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x04,
	0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e, 0x65, 0x74,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04,
	0x55, 0x73, 0x65, 0x72, 0x22, 0xf6, 0x03, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x69, 0x63,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x65, 0x78, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x03, 0x53, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x61, 0x63, 0x65, 0x49,
	0x44, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x46, 0x61, 0x63, 0x65, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x02, 0x28, 0x03, 0x52, 0x05,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x57, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x73, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x4c, 0x6f, 0x73, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x44, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x09, 0x44, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x53, 0x74, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x18, 0x0a, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x74, 0x4e,
	0x6f, 0x18, 0x0b, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x12,
	0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x4a, 0x46, 0x64, 0x64, 0x7a, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x4a, 0x46, 0x64, 0x64, 0x7a, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x4a, 0x46, 0x64, 0x64, 0x7a, 0x52, 0x61, 0x6e, 0x6b, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x4a, 0x46, 0x64, 0x64, 0x7a, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x20, 0x0a,
	0x0b, 0x4a, 0x46, 0x64, 0x64, 0x7a, 0x55, 0x73, 0x65, 0x72, 0x43, 0x54, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x4a, 0x46, 0x64, 0x64, 0x7a, 0x55, 0x73, 0x65, 0x72, 0x43, 0x54, 0x12,
	0x28, 0x0a, 0x0f, 0x4a, 0x46, 0x64, 0x64, 0x7a, 0x4e, 0x65, 0x78, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x54, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x4a, 0x46, 0x64, 0x64, 0x7a, 0x4e,
	0x65, 0x78, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x54, 0x12, 0x22, 0x0a, 0x0c, 0x58, 0x69, 0x75,
	0x58, 0x69, 0x61, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x58, 0x69, 0x75, 0x58, 0x69, 0x61, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x36, 0x0a,
	0x09, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x05, 0x50, 0x6f,
	0x6b, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x65, 0x74, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x52, 0x05,
	0x50, 0x6f, 0x6b, 0x65, 0x72, 0x22, 0x66, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x6b,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65,
	0x61, 0x74, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x53, 0x65, 0x61, 0x74,
	0x4e, 0x6f, 0x12, 0x29, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x6b,
	0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x52, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x22, 0x41, 0x0a,
	0x09, 0x50, 0x6f, 0x6b, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0x34, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x37, 0x0a, 0x15, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x2a, 0x0a, 0x10, 0x4c, 0x6f, 0x6f, 0x6b, 0x4f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x3d, 0x0a, 0x0d, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x75, 0x63, 0x6b, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x03, 0x52, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x28, 0x0a, 0x12, 0x47, 0x61,
	0x6d, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x6f, 0x77, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x40, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x75, 0x63, 0x6b,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x47, 0x0a, 0x11, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x69, 0x6e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x57, 0x69, 0x6e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x22,
	0x9e, 0x01, 0x0a, 0x0d, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x57, 0x69,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x57, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x03, 0x52, 0x09, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x57, 0x69, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x53, 0x65, 0x6c, 0x66, 0x57, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03,
	0x52, 0x07, 0x53, 0x65, 0x6c, 0x66, 0x57, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x3d, 0x0a, 0x0b, 0x57, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x57, 0x69, 0x6e, 0x52, 0x0b, 0x57, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x74, 0x0a, 0x12, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x74, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x26, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x42, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03,
	0x52, 0x08, 0x42, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x69,
	0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x08, 0x57, 0x69,
	0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa0, 0x01, 0x0a, 0x16, 0x47, 0x61, 0x6d, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x42, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x61, 0x6e,
	0x6b, 0x12, 0x46, 0x0a, 0x0f, 0x4d, 0x61, 0x78, 0x57, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6e, 0x65, 0x74,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65,
	0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0f, 0x4d, 0x61, 0x78, 0x57, 0x69, 0x6e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x0b, 0x42, 0x65, 0x74,
	0x52, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x6e, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0b, 0x42, 0x65,
	0x74, 0x52, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x5b, 0x0a, 0x0d, 0x47, 0x61, 0x6d,
	0x65, 0x43, 0x68, 0x65, 0x61, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x53, 0x74, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x53, 0x74, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x49, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x49, 0x6e, 0x74, 0x22, 0x3f, 0x0a, 0x0b, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x6e, 0x65, 0x74,
	0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_GameMsg_proto_rawDescOnce sync.Once
	file_GameMsg_proto_rawDescData = file_GameMsg_proto_rawDesc
)

func file_GameMsg_proto_rawDescGZIP() []byte {
	file_GameMsg_proto_rawDescOnce.Do(func() {
		file_GameMsg_proto_rawDescData = protoimpl.X.CompressGZIP(file_GameMsg_proto_rawDescData)
	})
	return file_GameMsg_proto_rawDescData
}

var file_GameMsg_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_GameMsg_proto_goTypes = []interface{}{
	(*TestGameChat)(nil),           // 0: netproto.TestGameChat
	(*TestGameScore)(nil),          // 1: netproto.TestGameScore
	(*TestGameEnd)(nil),            // 2: netproto.TestGameEnd
	(*UserEnter)(nil),              // 3: netproto.UserEnter
	(*UserLeave)(nil),              // 4: netproto.UserLeave
	(*UserStateChange)(nil),        // 5: netproto.UserStateChange
	(*GameUser)(nil),               // 6: netproto.GameUser
	(*GamePoker)(nil),              // 7: netproto.GamePoker
	(*UserPoker)(nil),              // 8: netproto.UserPoker
	(*PokerCard)(nil),              // 9: netproto.PokerCard
	(*UserActionCommited)(nil),     // 10: netproto.UserActionCommited
	(*AllUserActionCommited)(nil),  // 11: netproto.AllUserActionCommited
	(*LookOnUserNotify)(nil),       // 12: netproto.LookOnUserNotify
	(*UserLuckScore)(nil),          // 13: netproto.UserLuckScore
	(*GameBeginCountDown)(nil),     // 14: netproto.GameBeginCountDown
	(*UserLuckScoreRet)(nil),       // 15: netproto.UserLuckScoreRet
	(*GameResultUserWin)(nil),      // 16: netproto.GameResultUserWin
	(*GameResultWin)(nil),          // 17: netproto.GameResultWin
	(*GameUserBetHistory)(nil),     // 18: netproto.GameUserBetHistory
	(*GameUserBetHistoryRank)(nil), // 19: netproto.GameUserBetHistoryRank
	(*GameCheatCode)(nil),          // 20: netproto.GameCheatCode
	(*GameMessage)(nil),            // 21: netproto.GameMessage
}
var file_GameMsg_proto_depIdxs = []int32{
	6,  // 0: netproto.UserEnter.User:type_name -> netproto.GameUser
	6,  // 1: netproto.UserLeave.User:type_name -> netproto.GameUser
	6,  // 2: netproto.UserStateChange.User:type_name -> netproto.GameUser
	8,  // 3: netproto.GamePoker.Poker:type_name -> netproto.UserPoker
	9,  // 4: netproto.UserPoker.Cards:type_name -> netproto.PokerCard
	16, // 5: netproto.GameResultWin.WinUserInfo:type_name -> netproto.GameResultUserWin
	6,  // 6: netproto.GameUserBetHistory.User:type_name -> netproto.GameUser
	18, // 7: netproto.GameUserBetHistoryRank.MaxWinCountUser:type_name -> netproto.GameUserBetHistory
	18, // 8: netproto.GameUserBetHistoryRank.BetRankList:type_name -> netproto.GameUserBetHistory
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_GameMsg_proto_init() }
func file_GameMsg_proto_init() {
	if File_GameMsg_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_GameMsg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestGameChat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestGameScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestGameEnd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserEnter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLeave); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserStateChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GamePoker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPoker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PokerCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserActionCommited); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllUserActionCommited); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookOnUserNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLuckScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameBeginCountDown); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLuckScoreRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameResultUserWin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameResultWin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameUserBetHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameUserBetHistoryRank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameCheatCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GameMsg_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_GameMsg_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_GameMsg_proto_goTypes,
		DependencyIndexes: file_GameMsg_proto_depIdxs,
		MessageInfos:      file_GameMsg_proto_msgTypes,
	}.Build()
	File_GameMsg_proto = out.File
	file_GameMsg_proto_rawDesc = nil
	file_GameMsg_proto_goTypes = nil
	file_GameMsg_proto_depIdxs = nil
}
